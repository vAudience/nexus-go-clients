/*
vAudience AI File Manager API

Testing FilesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package filemanager

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/vaudience/nexus-go-clients/filemanager"
)

func Test_filemanager_FilesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FilesAPIService DeleteFile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storagePath string

		resp, httpRes, err := apiClient.FilesAPI.DeleteFile(context.Background(), storagePath).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService GetFileUploadSettings", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var category string

		resp, httpRes, err := apiClient.FilesAPI.GetFileUploadSettings(context.Background(), orgId, category).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService ServeFile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storagePath string

		resp, httpRes, err := apiClient.FilesAPI.ServeFile(context.Background(), storagePath).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService UploadFile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var category string

		resp, httpRes, err := apiClient.FilesAPI.UploadFile(context.Background(), orgId, category).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
