/*
vAudience AI File Manager API

API for the vAudience AI File Manager

API version: 0.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filemanager

import (
	"encoding/json"
)

// checks if the MetadataFileMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataFileMetadataResponse{}

// MetadataFileMetadataResponse struct for MetadataFileMetadataResponse
type MetadataFileMetadataResponse struct {
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	ExpiresAt *string `json:"expires_at,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	FileSize *int32 `json:"file_size,omitempty"`
	Id *string `json:"id,omitempty"`
	Metadata map[string]map[string]interface{} `json:"metadata,omitempty"`
	MimeType *string `json:"mime_type,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	OriginalFileName *string `json:"original_file_name,omitempty"`
	OriginalFileSize *int32 `json:"original_file_size,omitempty"`
	OriginalMimeType *string `json:"original_mime_type,omitempty"`
	OriginalUrl *string `json:"original_url,omitempty"`
	// temp, public, privateOrg, privateUser, privateTeam
	StorageCategory *string `json:"storage_category,omitempty"`
	StoragePath *string `json:"storage_path,omitempty"`
	TeamId *string `json:"team_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// temp, image
	UploadCategory *string `json:"upload_category,omitempty"`
	UploadParams map[string]map[string]interface{} `json:"upload_params,omitempty"`
	Url *string `json:"url,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetadataFileMetadataResponse MetadataFileMetadataResponse

// NewMetadataFileMetadataResponse instantiates a new MetadataFileMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataFileMetadataResponse() *MetadataFileMetadataResponse {
	this := MetadataFileMetadataResponse{}
	return &this
}

// NewMetadataFileMetadataResponseWithDefaults instantiates a new MetadataFileMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataFileMetadataResponseWithDefaults() *MetadataFileMetadataResponse {
	this := MetadataFileMetadataResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *MetadataFileMetadataResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *MetadataFileMetadataResponse) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *MetadataFileMetadataResponse) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *MetadataFileMetadataResponse) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *MetadataFileMetadataResponse) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetadataFileMetadataResponse) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetMetadata() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetMetadataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]map[string]interface{} and assigns it to the Metadata field.
func (o *MetadataFileMetadataResponse) SetMetadata(v map[string]map[string]interface{}) {
	o.Metadata = v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetMimeType() string {
	if o == nil || IsNil(o.MimeType) {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetMimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MimeType) {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasMimeType() bool {
	if o != nil && !IsNil(o.MimeType) {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *MetadataFileMetadataResponse) SetMimeType(v string) {
	o.MimeType = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *MetadataFileMetadataResponse) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOriginalFileName returns the OriginalFileName field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetOriginalFileName() string {
	if o == nil || IsNil(o.OriginalFileName) {
		var ret string
		return ret
	}
	return *o.OriginalFileName
}

// GetOriginalFileNameOk returns a tuple with the OriginalFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetOriginalFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalFileName) {
		return nil, false
	}
	return o.OriginalFileName, true
}

// HasOriginalFileName returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasOriginalFileName() bool {
	if o != nil && !IsNil(o.OriginalFileName) {
		return true
	}

	return false
}

// SetOriginalFileName gets a reference to the given string and assigns it to the OriginalFileName field.
func (o *MetadataFileMetadataResponse) SetOriginalFileName(v string) {
	o.OriginalFileName = &v
}

// GetOriginalFileSize returns the OriginalFileSize field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetOriginalFileSize() int32 {
	if o == nil || IsNil(o.OriginalFileSize) {
		var ret int32
		return ret
	}
	return *o.OriginalFileSize
}

// GetOriginalFileSizeOk returns a tuple with the OriginalFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetOriginalFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalFileSize) {
		return nil, false
	}
	return o.OriginalFileSize, true
}

// HasOriginalFileSize returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasOriginalFileSize() bool {
	if o != nil && !IsNil(o.OriginalFileSize) {
		return true
	}

	return false
}

// SetOriginalFileSize gets a reference to the given int32 and assigns it to the OriginalFileSize field.
func (o *MetadataFileMetadataResponse) SetOriginalFileSize(v int32) {
	o.OriginalFileSize = &v
}

// GetOriginalMimeType returns the OriginalMimeType field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetOriginalMimeType() string {
	if o == nil || IsNil(o.OriginalMimeType) {
		var ret string
		return ret
	}
	return *o.OriginalMimeType
}

// GetOriginalMimeTypeOk returns a tuple with the OriginalMimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetOriginalMimeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalMimeType) {
		return nil, false
	}
	return o.OriginalMimeType, true
}

// HasOriginalMimeType returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasOriginalMimeType() bool {
	if o != nil && !IsNil(o.OriginalMimeType) {
		return true
	}

	return false
}

// SetOriginalMimeType gets a reference to the given string and assigns it to the OriginalMimeType field.
func (o *MetadataFileMetadataResponse) SetOriginalMimeType(v string) {
	o.OriginalMimeType = &v
}

// GetOriginalUrl returns the OriginalUrl field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetOriginalUrl() string {
	if o == nil || IsNil(o.OriginalUrl) {
		var ret string
		return ret
	}
	return *o.OriginalUrl
}

// GetOriginalUrlOk returns a tuple with the OriginalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetOriginalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalUrl) {
		return nil, false
	}
	return o.OriginalUrl, true
}

// HasOriginalUrl returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasOriginalUrl() bool {
	if o != nil && !IsNil(o.OriginalUrl) {
		return true
	}

	return false
}

// SetOriginalUrl gets a reference to the given string and assigns it to the OriginalUrl field.
func (o *MetadataFileMetadataResponse) SetOriginalUrl(v string) {
	o.OriginalUrl = &v
}

// GetStorageCategory returns the StorageCategory field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetStorageCategory() string {
	if o == nil || IsNil(o.StorageCategory) {
		var ret string
		return ret
	}
	return *o.StorageCategory
}

// GetStorageCategoryOk returns a tuple with the StorageCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetStorageCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.StorageCategory) {
		return nil, false
	}
	return o.StorageCategory, true
}

// HasStorageCategory returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasStorageCategory() bool {
	if o != nil && !IsNil(o.StorageCategory) {
		return true
	}

	return false
}

// SetStorageCategory gets a reference to the given string and assigns it to the StorageCategory field.
func (o *MetadataFileMetadataResponse) SetStorageCategory(v string) {
	o.StorageCategory = &v
}

// GetStoragePath returns the StoragePath field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetStoragePath() string {
	if o == nil || IsNil(o.StoragePath) {
		var ret string
		return ret
	}
	return *o.StoragePath
}

// GetStoragePathOk returns a tuple with the StoragePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetStoragePathOk() (*string, bool) {
	if o == nil || IsNil(o.StoragePath) {
		return nil, false
	}
	return o.StoragePath, true
}

// HasStoragePath returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasStoragePath() bool {
	if o != nil && !IsNil(o.StoragePath) {
		return true
	}

	return false
}

// SetStoragePath gets a reference to the given string and assigns it to the StoragePath field.
func (o *MetadataFileMetadataResponse) SetStoragePath(v string) {
	o.StoragePath = &v
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetTeamId() string {
	if o == nil || IsNil(o.TeamId) {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetTeamIdOk() (*string, bool) {
	if o == nil || IsNil(o.TeamId) {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasTeamId() bool {
	if o != nil && !IsNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *MetadataFileMetadataResponse) SetTeamId(v string) {
	o.TeamId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *MetadataFileMetadataResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUploadCategory returns the UploadCategory field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetUploadCategory() string {
	if o == nil || IsNil(o.UploadCategory) {
		var ret string
		return ret
	}
	return *o.UploadCategory
}

// GetUploadCategoryOk returns a tuple with the UploadCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetUploadCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.UploadCategory) {
		return nil, false
	}
	return o.UploadCategory, true
}

// HasUploadCategory returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasUploadCategory() bool {
	if o != nil && !IsNil(o.UploadCategory) {
		return true
	}

	return false
}

// SetUploadCategory gets a reference to the given string and assigns it to the UploadCategory field.
func (o *MetadataFileMetadataResponse) SetUploadCategory(v string) {
	o.UploadCategory = &v
}

// GetUploadParams returns the UploadParams field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetUploadParams() map[string]map[string]interface{} {
	if o == nil || IsNil(o.UploadParams) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.UploadParams
}

// GetUploadParamsOk returns a tuple with the UploadParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetUploadParamsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.UploadParams) {
		return map[string]map[string]interface{}{}, false
	}
	return o.UploadParams, true
}

// HasUploadParams returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasUploadParams() bool {
	if o != nil && !IsNil(o.UploadParams) {
		return true
	}

	return false
}

// SetUploadParams gets a reference to the given map[string]map[string]interface{} and assigns it to the UploadParams field.
func (o *MetadataFileMetadataResponse) SetUploadParams(v map[string]map[string]interface{}) {
	o.UploadParams = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MetadataFileMetadataResponse) SetUrl(v string) {
	o.Url = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MetadataFileMetadataResponse) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataFileMetadataResponse) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MetadataFileMetadataResponse) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MetadataFileMetadataResponse) SetUserId(v string) {
	o.UserId = &v
}

func (o MetadataFileMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataFileMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["file_size"] = o.FileSize
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MimeType) {
		toSerialize["mime_type"] = o.MimeType
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.OriginalFileName) {
		toSerialize["original_file_name"] = o.OriginalFileName
	}
	if !IsNil(o.OriginalFileSize) {
		toSerialize["original_file_size"] = o.OriginalFileSize
	}
	if !IsNil(o.OriginalMimeType) {
		toSerialize["original_mime_type"] = o.OriginalMimeType
	}
	if !IsNil(o.OriginalUrl) {
		toSerialize["original_url"] = o.OriginalUrl
	}
	if !IsNil(o.StorageCategory) {
		toSerialize["storage_category"] = o.StorageCategory
	}
	if !IsNil(o.StoragePath) {
		toSerialize["storage_path"] = o.StoragePath
	}
	if !IsNil(o.TeamId) {
		toSerialize["team_id"] = o.TeamId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UploadCategory) {
		toSerialize["upload_category"] = o.UploadCategory
	}
	if !IsNil(o.UploadParams) {
		toSerialize["upload_params"] = o.UploadParams
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetadataFileMetadataResponse) UnmarshalJSON(data []byte) (err error) {
	varMetadataFileMetadataResponse := _MetadataFileMetadataResponse{}

	err = json.Unmarshal(data, &varMetadataFileMetadataResponse)

	if err != nil {
		return err
	}

	*o = MetadataFileMetadataResponse(varMetadataFileMetadataResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "file_name")
		delete(additionalProperties, "file_size")
		delete(additionalProperties, "id")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "mime_type")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "original_file_name")
		delete(additionalProperties, "original_file_size")
		delete(additionalProperties, "original_mime_type")
		delete(additionalProperties, "original_url")
		delete(additionalProperties, "storage_category")
		delete(additionalProperties, "storage_path")
		delete(additionalProperties, "team_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "upload_category")
		delete(additionalProperties, "upload_params")
		delete(additionalProperties, "url")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetadataFileMetadataResponse struct {
	value *MetadataFileMetadataResponse
	isSet bool
}

func (v NullableMetadataFileMetadataResponse) Get() *MetadataFileMetadataResponse {
	return v.value
}

func (v *NullableMetadataFileMetadataResponse) Set(val *MetadataFileMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataFileMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataFileMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataFileMetadataResponse(val *MetadataFileMetadataResponse) *NullableMetadataFileMetadataResponse {
	return &NullableMetadataFileMetadataResponse{value: val, isSet: true}
}

func (v NullableMetadataFileMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataFileMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


