/*
vAudience AI File Manager API

API for the vAudience AI File Manager

API version: 0.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filemanager

import (
	"encoding/json"
	"fmt"
)

// checks if the FileMetadataBatchGetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileMetadataBatchGetRequest{}

// FileMetadataBatchGetRequest struct for FileMetadataBatchGetRequest
type FileMetadataBatchGetRequest struct {
	StoragePaths []string `json:"storage_paths"`
	AdditionalProperties map[string]interface{}
}

type _FileMetadataBatchGetRequest FileMetadataBatchGetRequest

// NewFileMetadataBatchGetRequest instantiates a new FileMetadataBatchGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileMetadataBatchGetRequest(storagePaths []string) *FileMetadataBatchGetRequest {
	this := FileMetadataBatchGetRequest{}
	this.StoragePaths = storagePaths
	return &this
}

// NewFileMetadataBatchGetRequestWithDefaults instantiates a new FileMetadataBatchGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileMetadataBatchGetRequestWithDefaults() *FileMetadataBatchGetRequest {
	this := FileMetadataBatchGetRequest{}
	return &this
}

// GetStoragePaths returns the StoragePaths field value
func (o *FileMetadataBatchGetRequest) GetStoragePaths() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StoragePaths
}

// GetStoragePathsOk returns a tuple with the StoragePaths field value
// and a boolean to check if the value has been set.
func (o *FileMetadataBatchGetRequest) GetStoragePathsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoragePaths, true
}

// SetStoragePaths sets field value
func (o *FileMetadataBatchGetRequest) SetStoragePaths(v []string) {
	o.StoragePaths = v
}

func (o FileMetadataBatchGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileMetadataBatchGetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storage_paths"] = o.StoragePaths

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FileMetadataBatchGetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"storage_paths",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFileMetadataBatchGetRequest := _FileMetadataBatchGetRequest{}

	err = json.Unmarshal(data, &varFileMetadataBatchGetRequest)

	if err != nil {
		return err
	}

	*o = FileMetadataBatchGetRequest(varFileMetadataBatchGetRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "storage_paths")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFileMetadataBatchGetRequest struct {
	value *FileMetadataBatchGetRequest
	isSet bool
}

func (v NullableFileMetadataBatchGetRequest) Get() *FileMetadataBatchGetRequest {
	return v.value
}

func (v *NullableFileMetadataBatchGetRequest) Set(val *FileMetadataBatchGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileMetadataBatchGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileMetadataBatchGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileMetadataBatchGetRequest(val *FileMetadataBatchGetRequest) *NullableFileMetadataBatchGetRequest {
	return &NullableFileMetadataBatchGetRequest{value: val, isSet: true}
}

func (v NullableFileMetadataBatchGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileMetadataBatchGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


