/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.5
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the FileUploadCostTrackingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileUploadCostTrackingRequest{}

// FileUploadCostTrackingRequest struct for FileUploadCostTrackingRequest
type FileUploadCostTrackingRequest struct {
	ExecutionId *string `json:"execution_id,omitempty"`
	NumFiles int32 `json:"num_files"`
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FileUploadCostTrackingRequest FileUploadCostTrackingRequest

// NewFileUploadCostTrackingRequest instantiates a new FileUploadCostTrackingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileUploadCostTrackingRequest(numFiles int32) *FileUploadCostTrackingRequest {
	this := FileUploadCostTrackingRequest{}
	this.NumFiles = numFiles
	return &this
}

// NewFileUploadCostTrackingRequestWithDefaults instantiates a new FileUploadCostTrackingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileUploadCostTrackingRequestWithDefaults() *FileUploadCostTrackingRequest {
	this := FileUploadCostTrackingRequest{}
	return &this
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *FileUploadCostTrackingRequest) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileUploadCostTrackingRequest) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *FileUploadCostTrackingRequest) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *FileUploadCostTrackingRequest) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetNumFiles returns the NumFiles field value
func (o *FileUploadCostTrackingRequest) GetNumFiles() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumFiles
}

// GetNumFilesOk returns a tuple with the NumFiles field value
// and a boolean to check if the value has been set.
func (o *FileUploadCostTrackingRequest) GetNumFilesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumFiles, true
}

// SetNumFiles sets field value
func (o *FileUploadCostTrackingRequest) SetNumFiles(v int32) {
	o.NumFiles = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FileUploadCostTrackingRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileUploadCostTrackingRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FileUploadCostTrackingRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *FileUploadCostTrackingRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o FileUploadCostTrackingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileUploadCostTrackingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionId) {
		toSerialize["execution_id"] = o.ExecutionId
	}
	toSerialize["num_files"] = o.NumFiles
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FileUploadCostTrackingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"num_files",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFileUploadCostTrackingRequest := _FileUploadCostTrackingRequest{}

	err = json.Unmarshal(data, &varFileUploadCostTrackingRequest)

	if err != nil {
		return err
	}

	*o = FileUploadCostTrackingRequest(varFileUploadCostTrackingRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "execution_id")
		delete(additionalProperties, "num_files")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFileUploadCostTrackingRequest struct {
	value *FileUploadCostTrackingRequest
	isSet bool
}

func (v NullableFileUploadCostTrackingRequest) Get() *FileUploadCostTrackingRequest {
	return v.value
}

func (v *NullableFileUploadCostTrackingRequest) Set(val *FileUploadCostTrackingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileUploadCostTrackingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileUploadCostTrackingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileUploadCostTrackingRequest(val *FileUploadCostTrackingRequest) *NullableFileUploadCostTrackingRequest {
	return &NullableFileUploadCostTrackingRequest{value: val, isSet: true}
}

func (v NullableFileUploadCostTrackingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileUploadCostTrackingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


