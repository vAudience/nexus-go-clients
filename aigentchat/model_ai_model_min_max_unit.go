/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.3
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// AIModelMinMaxUnit the model 'AIModelMinMaxUnit'
type AIModelMinMaxUnit string

// List of AIModelMinMaxUnit
const (
	AIModelMinMaxUnitTokens AIModelMinMaxUnit = "tokens"
	AIModelMinMaxUnitCharacters AIModelMinMaxUnit = "characters"
	AIModelMinMaxUnitFiles AIModelMinMaxUnit = "files"
	AIModelMinMaxUnitSeconds AIModelMinMaxUnit = "seconds"
	AIModelMinMaxUnitImages AIModelMinMaxUnit = "images"
	AIModelMinMaxUnitPixels AIModelMinMaxUnit = "pixels"
	AIModelMinMaxUnitFilesizeMegabytes AIModelMinMaxUnit = "megabytes"
)

// All allowed values of AIModelMinMaxUnit enum
var AllowedAIModelMinMaxUnitEnumValues = []AIModelMinMaxUnit{
	"tokens",
	"characters",
	"files",
	"seconds",
	"images",
	"pixels",
	"megabytes",
}

func (v *AIModelMinMaxUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AIModelMinMaxUnit(value)
	for _, existing := range AllowedAIModelMinMaxUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AIModelMinMaxUnit", value)
}

// NewAIModelMinMaxUnitFromValue returns a pointer to a valid AIModelMinMaxUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAIModelMinMaxUnitFromValue(v string) (*AIModelMinMaxUnit, error) {
	ev := AIModelMinMaxUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AIModelMinMaxUnit: valid values are %v", v, AllowedAIModelMinMaxUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AIModelMinMaxUnit) IsValid() bool {
	for _, existing := range AllowedAIModelMinMaxUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AIModelMinMaxUnit value
func (v AIModelMinMaxUnit) Ptr() *AIModelMinMaxUnit {
	return &v
}

type NullableAIModelMinMaxUnit struct {
	value *AIModelMinMaxUnit
	isSet bool
}

func (v NullableAIModelMinMaxUnit) Get() *AIModelMinMaxUnit {
	return v.value
}

func (v *NullableAIModelMinMaxUnit) Set(val *AIModelMinMaxUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableAIModelMinMaxUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableAIModelMinMaxUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIModelMinMaxUnit(val *AIModelMinMaxUnit) *NullableAIModelMinMaxUnit {
	return &NullableAIModelMinMaxUnit{value: val, isSet: true}
}

func (v NullableAIModelMinMaxUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIModelMinMaxUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

