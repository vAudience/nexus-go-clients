/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.15.10
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentTeam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentTeam{}

// AgentTeam struct for AgentTeam
type AgentTeam struct {
	AgentIds []string `json:"agent_ids,omitempty"`
	CoordinatingAgentId *string `json:"coordinating_agent_id,omitempty"`
	CreatedAt *int64 `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Id string `json:"id"`
	InitialUserMessages []string `json:"initial_user_messages,omitempty"`
	InitialUserMessagesMode *PromptInjectionMode `json:"initial_user_messages_mode,omitempty"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	Name string `json:"name"`
	OwnerId string `json:"owner_id"`
	OwnerOrganizationId string `json:"owner_organization_id"`
	SystemMessages []string `json:"system_messages,omitempty"`
	SystemMessagesMode *PromptInjectionMode `json:"system_messages_mode,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentTeam AgentTeam

// NewAgentTeam instantiates a new AgentTeam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTeam(id string, name string, ownerId string, ownerOrganizationId string) *AgentTeam {
	this := AgentTeam{}
	this.Id = id
	this.Name = name
	this.OwnerId = ownerId
	this.OwnerOrganizationId = ownerOrganizationId
	return &this
}

// NewAgentTeamWithDefaults instantiates a new AgentTeam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTeamWithDefaults() *AgentTeam {
	this := AgentTeam{}
	return &this
}

// GetAgentIds returns the AgentIds field value if set, zero value otherwise.
func (o *AgentTeam) GetAgentIds() []string {
	if o == nil || IsNil(o.AgentIds) {
		var ret []string
		return ret
	}
	return o.AgentIds
}

// GetAgentIdsOk returns a tuple with the AgentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetAgentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AgentIds) {
		return nil, false
	}
	return o.AgentIds, true
}

// HasAgentIds returns a boolean if a field has been set.
func (o *AgentTeam) HasAgentIds() bool {
	if o != nil && !IsNil(o.AgentIds) {
		return true
	}

	return false
}

// SetAgentIds gets a reference to the given []string and assigns it to the AgentIds field.
func (o *AgentTeam) SetAgentIds(v []string) {
	o.AgentIds = v
}

// GetCoordinatingAgentId returns the CoordinatingAgentId field value if set, zero value otherwise.
func (o *AgentTeam) GetCoordinatingAgentId() string {
	if o == nil || IsNil(o.CoordinatingAgentId) {
		var ret string
		return ret
	}
	return *o.CoordinatingAgentId
}

// GetCoordinatingAgentIdOk returns a tuple with the CoordinatingAgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetCoordinatingAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoordinatingAgentId) {
		return nil, false
	}
	return o.CoordinatingAgentId, true
}

// HasCoordinatingAgentId returns a boolean if a field has been set.
func (o *AgentTeam) HasCoordinatingAgentId() bool {
	if o != nil && !IsNil(o.CoordinatingAgentId) {
		return true
	}

	return false
}

// SetCoordinatingAgentId gets a reference to the given string and assigns it to the CoordinatingAgentId field.
func (o *AgentTeam) SetCoordinatingAgentId(v string) {
	o.CoordinatingAgentId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AgentTeam) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AgentTeam) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *AgentTeam) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AgentTeam) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AgentTeam) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AgentTeam) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value
func (o *AgentTeam) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AgentTeam) SetId(v string) {
	o.Id = v
}

// GetInitialUserMessages returns the InitialUserMessages field value if set, zero value otherwise.
func (o *AgentTeam) GetInitialUserMessages() []string {
	if o == nil || IsNil(o.InitialUserMessages) {
		var ret []string
		return ret
	}
	return o.InitialUserMessages
}

// GetInitialUserMessagesOk returns a tuple with the InitialUserMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetInitialUserMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.InitialUserMessages) {
		return nil, false
	}
	return o.InitialUserMessages, true
}

// HasInitialUserMessages returns a boolean if a field has been set.
func (o *AgentTeam) HasInitialUserMessages() bool {
	if o != nil && !IsNil(o.InitialUserMessages) {
		return true
	}

	return false
}

// SetInitialUserMessages gets a reference to the given []string and assigns it to the InitialUserMessages field.
func (o *AgentTeam) SetInitialUserMessages(v []string) {
	o.InitialUserMessages = v
}

// GetInitialUserMessagesMode returns the InitialUserMessagesMode field value if set, zero value otherwise.
func (o *AgentTeam) GetInitialUserMessagesMode() PromptInjectionMode {
	if o == nil || IsNil(o.InitialUserMessagesMode) {
		var ret PromptInjectionMode
		return ret
	}
	return *o.InitialUserMessagesMode
}

// GetInitialUserMessagesModeOk returns a tuple with the InitialUserMessagesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetInitialUserMessagesModeOk() (*PromptInjectionMode, bool) {
	if o == nil || IsNil(o.InitialUserMessagesMode) {
		return nil, false
	}
	return o.InitialUserMessagesMode, true
}

// HasInitialUserMessagesMode returns a boolean if a field has been set.
func (o *AgentTeam) HasInitialUserMessagesMode() bool {
	if o != nil && !IsNil(o.InitialUserMessagesMode) {
		return true
	}

	return false
}

// SetInitialUserMessagesMode gets a reference to the given PromptInjectionMode and assigns it to the InitialUserMessagesMode field.
func (o *AgentTeam) SetInitialUserMessagesMode(v PromptInjectionMode) {
	o.InitialUserMessagesMode = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AgentTeam) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return map[string]interface{}{}, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AgentTeam) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *AgentTeam) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

// GetName returns the Name field value
func (o *AgentTeam) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AgentTeam) SetName(v string) {
	o.Name = v
}

// GetOwnerId returns the OwnerId field value
func (o *AgentTeam) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *AgentTeam) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetOwnerOrganizationId returns the OwnerOrganizationId field value
func (o *AgentTeam) GetOwnerOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerOrganizationId
}

// GetOwnerOrganizationIdOk returns a tuple with the OwnerOrganizationId field value
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetOwnerOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerOrganizationId, true
}

// SetOwnerOrganizationId sets field value
func (o *AgentTeam) SetOwnerOrganizationId(v string) {
	o.OwnerOrganizationId = v
}

// GetSystemMessages returns the SystemMessages field value if set, zero value otherwise.
func (o *AgentTeam) GetSystemMessages() []string {
	if o == nil || IsNil(o.SystemMessages) {
		var ret []string
		return ret
	}
	return o.SystemMessages
}

// GetSystemMessagesOk returns a tuple with the SystemMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetSystemMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.SystemMessages) {
		return nil, false
	}
	return o.SystemMessages, true
}

// HasSystemMessages returns a boolean if a field has been set.
func (o *AgentTeam) HasSystemMessages() bool {
	if o != nil && !IsNil(o.SystemMessages) {
		return true
	}

	return false
}

// SetSystemMessages gets a reference to the given []string and assigns it to the SystemMessages field.
func (o *AgentTeam) SetSystemMessages(v []string) {
	o.SystemMessages = v
}

// GetSystemMessagesMode returns the SystemMessagesMode field value if set, zero value otherwise.
func (o *AgentTeam) GetSystemMessagesMode() PromptInjectionMode {
	if o == nil || IsNil(o.SystemMessagesMode) {
		var ret PromptInjectionMode
		return ret
	}
	return *o.SystemMessagesMode
}

// GetSystemMessagesModeOk returns a tuple with the SystemMessagesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetSystemMessagesModeOk() (*PromptInjectionMode, bool) {
	if o == nil || IsNil(o.SystemMessagesMode) {
		return nil, false
	}
	return o.SystemMessagesMode, true
}

// HasSystemMessagesMode returns a boolean if a field has been set.
func (o *AgentTeam) HasSystemMessagesMode() bool {
	if o != nil && !IsNil(o.SystemMessagesMode) {
		return true
	}

	return false
}

// SetSystemMessagesMode gets a reference to the given PromptInjectionMode and assigns it to the SystemMessagesMode field.
func (o *AgentTeam) SetSystemMessagesMode(v PromptInjectionMode) {
	o.SystemMessagesMode = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AgentTeam) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AgentTeam) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AgentTeam) SetTags(v []string) {
	o.Tags = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AgentTeam) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AgentTeam) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *AgentTeam) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *AgentTeam) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeam) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *AgentTeam) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *AgentTeam) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

func (o AgentTeam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTeam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentIds) {
		toSerialize["agent_ids"] = o.AgentIds
	}
	if !IsNil(o.CoordinatingAgentId) {
		toSerialize["coordinating_agent_id"] = o.CoordinatingAgentId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.InitialUserMessages) {
		toSerialize["initial_user_messages"] = o.InitialUserMessages
	}
	if !IsNil(o.InitialUserMessagesMode) {
		toSerialize["initial_user_messages_mode"] = o.InitialUserMessagesMode
	}
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}
	toSerialize["name"] = o.Name
	toSerialize["owner_id"] = o.OwnerId
	toSerialize["owner_organization_id"] = o.OwnerOrganizationId
	if !IsNil(o.SystemMessages) {
		toSerialize["system_messages"] = o.SystemMessages
	}
	if !IsNil(o.SystemMessagesMode) {
		toSerialize["system_messages_mode"] = o.SystemMessagesMode
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updated_by"] = o.UpdatedBy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentTeam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"owner_id",
		"owner_organization_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentTeam := _AgentTeam{}

	err = json.Unmarshal(data, &varAgentTeam)

	if err != nil {
		return err
	}

	*o = AgentTeam(varAgentTeam)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agent_ids")
		delete(additionalProperties, "coordinating_agent_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "initial_user_messages")
		delete(additionalProperties, "initial_user_messages_mode")
		delete(additionalProperties, "meta_data")
		delete(additionalProperties, "name")
		delete(additionalProperties, "owner_id")
		delete(additionalProperties, "owner_organization_id")
		delete(additionalProperties, "system_messages")
		delete(additionalProperties, "system_messages_mode")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "updated_by")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentTeam struct {
	value *AgentTeam
	isSet bool
}

func (v NullableAgentTeam) Get() *AgentTeam {
	return v.value
}

func (v *NullableAgentTeam) Set(val *AgentTeam) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTeam) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTeam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTeam(val *AgentTeam) *NullableAgentTeam {
	return &NullableAgentTeam{value: val, isSet: true}
}

func (v NullableAgentTeam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTeam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


