/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.17.2
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyMessageResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyMessageResults{}

// AIgencyMessageResults struct for AIgencyMessageResults
type AIgencyMessageResults struct {
	Results []AIgencyMessage `json:"results"`
	TotalResults int64 `json:"total_results"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyMessageResults AIgencyMessageResults

// NewAIgencyMessageResults instantiates a new AIgencyMessageResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyMessageResults(results []AIgencyMessage, totalResults int64) *AIgencyMessageResults {
	this := AIgencyMessageResults{}
	this.Results = results
	this.TotalResults = totalResults
	return &this
}

// NewAIgencyMessageResultsWithDefaults instantiates a new AIgencyMessageResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyMessageResultsWithDefaults() *AIgencyMessageResults {
	this := AIgencyMessageResults{}
	return &this
}

// GetResults returns the Results field value
func (o *AIgencyMessageResults) GetResults() []AIgencyMessage {
	if o == nil {
		var ret []AIgencyMessage
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageResults) GetResultsOk() ([]AIgencyMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *AIgencyMessageResults) SetResults(v []AIgencyMessage) {
	o.Results = v
}

// GetTotalResults returns the TotalResults field value
func (o *AIgencyMessageResults) GetTotalResults() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageResults) GetTotalResultsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalResults, true
}

// SetTotalResults sets field value
func (o *AIgencyMessageResults) SetTotalResults(v int64) {
	o.TotalResults = v
}

func (o AIgencyMessageResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyMessageResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["total_results"] = o.TotalResults

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyMessageResults) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"total_results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyMessageResults := _AIgencyMessageResults{}

	err = json.Unmarshal(data, &varAIgencyMessageResults)

	if err != nil {
		return err
	}

	*o = AIgencyMessageResults(varAIgencyMessageResults)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "results")
		delete(additionalProperties, "total_results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyMessageResults struct {
	value *AIgencyMessageResults
	isSet bool
}

func (v NullableAIgencyMessageResults) Get() *AIgencyMessageResults {
	return v.value
}

func (v *NullableAIgencyMessageResults) Set(val *AIgencyMessageResults) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyMessageResults) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyMessageResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyMessageResults(val *AIgencyMessageResults) *NullableAIgencyMessageResults {
	return &NullableAIgencyMessageResults{value: val, isSet: true}
}

func (v NullableAIgencyMessageResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyMessageResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


