/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.15.9
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
)

// checks if the AgentTeamWriteDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentTeamWriteDto{}

// AgentTeamWriteDto struct for AgentTeamWriteDto
type AgentTeamWriteDto struct {
	AgentIds []string `json:"agent_ids,omitempty"`
	CoordinatingAgentId *string `json:"coordinating_agent_id,omitempty"`
	Description *string `json:"description,omitempty"`
	InitialUserMessages []string `json:"initial_user_messages,omitempty"`
	InitialUserMessagesMode *PromptInjectionMode `json:"initial_user_messages_mode,omitempty"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	Name *string `json:"name,omitempty"`
	SystemMessages []string `json:"system_messages,omitempty"`
	SystemMessagesMode *PromptInjectionMode `json:"system_messages_mode,omitempty"`
	Tags []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentTeamWriteDto AgentTeamWriteDto

// NewAgentTeamWriteDto instantiates a new AgentTeamWriteDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentTeamWriteDto() *AgentTeamWriteDto {
	this := AgentTeamWriteDto{}
	return &this
}

// NewAgentTeamWriteDtoWithDefaults instantiates a new AgentTeamWriteDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentTeamWriteDtoWithDefaults() *AgentTeamWriteDto {
	this := AgentTeamWriteDto{}
	return &this
}

// GetAgentIds returns the AgentIds field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetAgentIds() []string {
	if o == nil || IsNil(o.AgentIds) {
		var ret []string
		return ret
	}
	return o.AgentIds
}

// GetAgentIdsOk returns a tuple with the AgentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetAgentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AgentIds) {
		return nil, false
	}
	return o.AgentIds, true
}

// HasAgentIds returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasAgentIds() bool {
	if o != nil && !IsNil(o.AgentIds) {
		return true
	}

	return false
}

// SetAgentIds gets a reference to the given []string and assigns it to the AgentIds field.
func (o *AgentTeamWriteDto) SetAgentIds(v []string) {
	o.AgentIds = v
}

// GetCoordinatingAgentId returns the CoordinatingAgentId field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetCoordinatingAgentId() string {
	if o == nil || IsNil(o.CoordinatingAgentId) {
		var ret string
		return ret
	}
	return *o.CoordinatingAgentId
}

// GetCoordinatingAgentIdOk returns a tuple with the CoordinatingAgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetCoordinatingAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoordinatingAgentId) {
		return nil, false
	}
	return o.CoordinatingAgentId, true
}

// HasCoordinatingAgentId returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasCoordinatingAgentId() bool {
	if o != nil && !IsNil(o.CoordinatingAgentId) {
		return true
	}

	return false
}

// SetCoordinatingAgentId gets a reference to the given string and assigns it to the CoordinatingAgentId field.
func (o *AgentTeamWriteDto) SetCoordinatingAgentId(v string) {
	o.CoordinatingAgentId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AgentTeamWriteDto) SetDescription(v string) {
	o.Description = &v
}

// GetInitialUserMessages returns the InitialUserMessages field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetInitialUserMessages() []string {
	if o == nil || IsNil(o.InitialUserMessages) {
		var ret []string
		return ret
	}
	return o.InitialUserMessages
}

// GetInitialUserMessagesOk returns a tuple with the InitialUserMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetInitialUserMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.InitialUserMessages) {
		return nil, false
	}
	return o.InitialUserMessages, true
}

// HasInitialUserMessages returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasInitialUserMessages() bool {
	if o != nil && !IsNil(o.InitialUserMessages) {
		return true
	}

	return false
}

// SetInitialUserMessages gets a reference to the given []string and assigns it to the InitialUserMessages field.
func (o *AgentTeamWriteDto) SetInitialUserMessages(v []string) {
	o.InitialUserMessages = v
}

// GetInitialUserMessagesMode returns the InitialUserMessagesMode field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetInitialUserMessagesMode() PromptInjectionMode {
	if o == nil || IsNil(o.InitialUserMessagesMode) {
		var ret PromptInjectionMode
		return ret
	}
	return *o.InitialUserMessagesMode
}

// GetInitialUserMessagesModeOk returns a tuple with the InitialUserMessagesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetInitialUserMessagesModeOk() (*PromptInjectionMode, bool) {
	if o == nil || IsNil(o.InitialUserMessagesMode) {
		return nil, false
	}
	return o.InitialUserMessagesMode, true
}

// HasInitialUserMessagesMode returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasInitialUserMessagesMode() bool {
	if o != nil && !IsNil(o.InitialUserMessagesMode) {
		return true
	}

	return false
}

// SetInitialUserMessagesMode gets a reference to the given PromptInjectionMode and assigns it to the InitialUserMessagesMode field.
func (o *AgentTeamWriteDto) SetInitialUserMessagesMode(v PromptInjectionMode) {
	o.InitialUserMessagesMode = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return map[string]interface{}{}, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *AgentTeamWriteDto) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AgentTeamWriteDto) SetName(v string) {
	o.Name = &v
}

// GetSystemMessages returns the SystemMessages field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetSystemMessages() []string {
	if o == nil || IsNil(o.SystemMessages) {
		var ret []string
		return ret
	}
	return o.SystemMessages
}

// GetSystemMessagesOk returns a tuple with the SystemMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetSystemMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.SystemMessages) {
		return nil, false
	}
	return o.SystemMessages, true
}

// HasSystemMessages returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasSystemMessages() bool {
	if o != nil && !IsNil(o.SystemMessages) {
		return true
	}

	return false
}

// SetSystemMessages gets a reference to the given []string and assigns it to the SystemMessages field.
func (o *AgentTeamWriteDto) SetSystemMessages(v []string) {
	o.SystemMessages = v
}

// GetSystemMessagesMode returns the SystemMessagesMode field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetSystemMessagesMode() PromptInjectionMode {
	if o == nil || IsNil(o.SystemMessagesMode) {
		var ret PromptInjectionMode
		return ret
	}
	return *o.SystemMessagesMode
}

// GetSystemMessagesModeOk returns a tuple with the SystemMessagesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetSystemMessagesModeOk() (*PromptInjectionMode, bool) {
	if o == nil || IsNil(o.SystemMessagesMode) {
		return nil, false
	}
	return o.SystemMessagesMode, true
}

// HasSystemMessagesMode returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasSystemMessagesMode() bool {
	if o != nil && !IsNil(o.SystemMessagesMode) {
		return true
	}

	return false
}

// SetSystemMessagesMode gets a reference to the given PromptInjectionMode and assigns it to the SystemMessagesMode field.
func (o *AgentTeamWriteDto) SetSystemMessagesMode(v PromptInjectionMode) {
	o.SystemMessagesMode = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AgentTeamWriteDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentTeamWriteDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AgentTeamWriteDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AgentTeamWriteDto) SetTags(v []string) {
	o.Tags = v
}

func (o AgentTeamWriteDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentTeamWriteDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentIds) {
		toSerialize["agent_ids"] = o.AgentIds
	}
	if !IsNil(o.CoordinatingAgentId) {
		toSerialize["coordinating_agent_id"] = o.CoordinatingAgentId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InitialUserMessages) {
		toSerialize["initial_user_messages"] = o.InitialUserMessages
	}
	if !IsNil(o.InitialUserMessagesMode) {
		toSerialize["initial_user_messages_mode"] = o.InitialUserMessagesMode
	}
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SystemMessages) {
		toSerialize["system_messages"] = o.SystemMessages
	}
	if !IsNil(o.SystemMessagesMode) {
		toSerialize["system_messages_mode"] = o.SystemMessagesMode
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentTeamWriteDto) UnmarshalJSON(data []byte) (err error) {
	varAgentTeamWriteDto := _AgentTeamWriteDto{}

	err = json.Unmarshal(data, &varAgentTeamWriteDto)

	if err != nil {
		return err
	}

	*o = AgentTeamWriteDto(varAgentTeamWriteDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agent_ids")
		delete(additionalProperties, "coordinating_agent_id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "initial_user_messages")
		delete(additionalProperties, "initial_user_messages_mode")
		delete(additionalProperties, "meta_data")
		delete(additionalProperties, "name")
		delete(additionalProperties, "system_messages")
		delete(additionalProperties, "system_messages_mode")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentTeamWriteDto struct {
	value *AgentTeamWriteDto
	isSet bool
}

func (v NullableAgentTeamWriteDto) Get() *AgentTeamWriteDto {
	return v.value
}

func (v *NullableAgentTeamWriteDto) Set(val *AgentTeamWriteDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentTeamWriteDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentTeamWriteDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentTeamWriteDto(val *AgentTeamWriteDto) *NullableAgentTeamWriteDto {
	return &NullableAgentTeamWriteDto{value: val, isSet: true}
}

func (v NullableAgentTeamWriteDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentTeamWriteDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


