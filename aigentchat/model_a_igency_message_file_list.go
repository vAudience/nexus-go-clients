/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.18.0
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyMessageFileList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyMessageFileList{}

// AIgencyMessageFileList struct for AIgencyMessageFileList
type AIgencyMessageFileList struct {
	Files []AIgencyMessageFile `json:"files"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyMessageFileList AIgencyMessageFileList

// NewAIgencyMessageFileList instantiates a new AIgencyMessageFileList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyMessageFileList(files []AIgencyMessageFile) *AIgencyMessageFileList {
	this := AIgencyMessageFileList{}
	this.Files = files
	return &this
}

// NewAIgencyMessageFileListWithDefaults instantiates a new AIgencyMessageFileList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyMessageFileListWithDefaults() *AIgencyMessageFileList {
	this := AIgencyMessageFileList{}
	return &this
}

// GetFiles returns the Files field value
func (o *AIgencyMessageFileList) GetFiles() []AIgencyMessageFile {
	if o == nil {
		var ret []AIgencyMessageFile
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageFileList) GetFilesOk() ([]AIgencyMessageFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *AIgencyMessageFileList) SetFiles(v []AIgencyMessageFile) {
	o.Files = v
}

func (o AIgencyMessageFileList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyMessageFileList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files"] = o.Files

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyMessageFileList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"files",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyMessageFileList := _AIgencyMessageFileList{}

	err = json.Unmarshal(data, &varAIgencyMessageFileList)

	if err != nil {
		return err
	}

	*o = AIgencyMessageFileList(varAIgencyMessageFileList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyMessageFileList struct {
	value *AIgencyMessageFileList
	isSet bool
}

func (v NullableAIgencyMessageFileList) Get() *AIgencyMessageFileList {
	return v.value
}

func (v *NullableAIgencyMessageFileList) Set(val *AIgencyMessageFileList) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyMessageFileList) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyMessageFileList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyMessageFileList(val *AIgencyMessageFileList) *NullableAIgencyMessageFileList {
	return &NullableAIgencyMessageFileList{value: val, isSet: true}
}

func (v NullableAIgencyMessageFileList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyMessageFileList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


