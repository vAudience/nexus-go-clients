/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.5
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
)

// checks if the DocumentConversionCostTrackingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentConversionCostTrackingRequest{}

// DocumentConversionCostTrackingRequest struct for DocumentConversionCostTrackingRequest
type DocumentConversionCostTrackingRequest struct {
	ExecutionId *string `json:"execution_id,omitempty"`
	InputTokens *int32 `json:"input_tokens,omitempty"`
	NumPages *int32 `json:"num_pages,omitempty"`
	NumPagesWithImages *int32 `json:"num_pages_with_images,omitempty"`
	OutputTokens *int32 `json:"output_tokens,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DocumentConversionCostTrackingRequest DocumentConversionCostTrackingRequest

// NewDocumentConversionCostTrackingRequest instantiates a new DocumentConversionCostTrackingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentConversionCostTrackingRequest() *DocumentConversionCostTrackingRequest {
	this := DocumentConversionCostTrackingRequest{}
	return &this
}

// NewDocumentConversionCostTrackingRequestWithDefaults instantiates a new DocumentConversionCostTrackingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentConversionCostTrackingRequestWithDefaults() *DocumentConversionCostTrackingRequest {
	this := DocumentConversionCostTrackingRequest{}
	return &this
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *DocumentConversionCostTrackingRequest) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetInputTokens returns the InputTokens field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetInputTokens() int32 {
	if o == nil || IsNil(o.InputTokens) {
		var ret int32
		return ret
	}
	return *o.InputTokens
}

// GetInputTokensOk returns a tuple with the InputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetInputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.InputTokens) {
		return nil, false
	}
	return o.InputTokens, true
}

// HasInputTokens returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasInputTokens() bool {
	if o != nil && !IsNil(o.InputTokens) {
		return true
	}

	return false
}

// SetInputTokens gets a reference to the given int32 and assigns it to the InputTokens field.
func (o *DocumentConversionCostTrackingRequest) SetInputTokens(v int32) {
	o.InputTokens = &v
}

// GetNumPages returns the NumPages field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetNumPages() int32 {
	if o == nil || IsNil(o.NumPages) {
		var ret int32
		return ret
	}
	return *o.NumPages
}

// GetNumPagesOk returns a tuple with the NumPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetNumPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumPages) {
		return nil, false
	}
	return o.NumPages, true
}

// HasNumPages returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasNumPages() bool {
	if o != nil && !IsNil(o.NumPages) {
		return true
	}

	return false
}

// SetNumPages gets a reference to the given int32 and assigns it to the NumPages field.
func (o *DocumentConversionCostTrackingRequest) SetNumPages(v int32) {
	o.NumPages = &v
}

// GetNumPagesWithImages returns the NumPagesWithImages field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetNumPagesWithImages() int32 {
	if o == nil || IsNil(o.NumPagesWithImages) {
		var ret int32
		return ret
	}
	return *o.NumPagesWithImages
}

// GetNumPagesWithImagesOk returns a tuple with the NumPagesWithImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetNumPagesWithImagesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumPagesWithImages) {
		return nil, false
	}
	return o.NumPagesWithImages, true
}

// HasNumPagesWithImages returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasNumPagesWithImages() bool {
	if o != nil && !IsNil(o.NumPagesWithImages) {
		return true
	}

	return false
}

// SetNumPagesWithImages gets a reference to the given int32 and assigns it to the NumPagesWithImages field.
func (o *DocumentConversionCostTrackingRequest) SetNumPagesWithImages(v int32) {
	o.NumPagesWithImages = &v
}

// GetOutputTokens returns the OutputTokens field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetOutputTokens() int32 {
	if o == nil || IsNil(o.OutputTokens) {
		var ret int32
		return ret
	}
	return *o.OutputTokens
}

// GetOutputTokensOk returns a tuple with the OutputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetOutputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.OutputTokens) {
		return nil, false
	}
	return o.OutputTokens, true
}

// HasOutputTokens returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasOutputTokens() bool {
	if o != nil && !IsNil(o.OutputTokens) {
		return true
	}

	return false
}

// SetOutputTokens gets a reference to the given int32 and assigns it to the OutputTokens field.
func (o *DocumentConversionCostTrackingRequest) SetOutputTokens(v int32) {
	o.OutputTokens = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DocumentConversionCostTrackingRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConversionCostTrackingRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DocumentConversionCostTrackingRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *DocumentConversionCostTrackingRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o DocumentConversionCostTrackingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentConversionCostTrackingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionId) {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if !IsNil(o.InputTokens) {
		toSerialize["input_tokens"] = o.InputTokens
	}
	if !IsNil(o.NumPages) {
		toSerialize["num_pages"] = o.NumPages
	}
	if !IsNil(o.NumPagesWithImages) {
		toSerialize["num_pages_with_images"] = o.NumPagesWithImages
	}
	if !IsNil(o.OutputTokens) {
		toSerialize["output_tokens"] = o.OutputTokens
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DocumentConversionCostTrackingRequest) UnmarshalJSON(data []byte) (err error) {
	varDocumentConversionCostTrackingRequest := _DocumentConversionCostTrackingRequest{}

	err = json.Unmarshal(data, &varDocumentConversionCostTrackingRequest)

	if err != nil {
		return err
	}

	*o = DocumentConversionCostTrackingRequest(varDocumentConversionCostTrackingRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "execution_id")
		delete(additionalProperties, "input_tokens")
		delete(additionalProperties, "num_pages")
		delete(additionalProperties, "num_pages_with_images")
		delete(additionalProperties, "output_tokens")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDocumentConversionCostTrackingRequest struct {
	value *DocumentConversionCostTrackingRequest
	isSet bool
}

func (v NullableDocumentConversionCostTrackingRequest) Get() *DocumentConversionCostTrackingRequest {
	return v.value
}

func (v *NullableDocumentConversionCostTrackingRequest) Set(val *DocumentConversionCostTrackingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentConversionCostTrackingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentConversionCostTrackingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentConversionCostTrackingRequest(val *DocumentConversionCostTrackingRequest) *NullableDocumentConversionCostTrackingRequest {
	return &NullableDocumentConversionCostTrackingRequest{value: val, isSet: true}
}

func (v NullableDocumentConversionCostTrackingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentConversionCostTrackingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


