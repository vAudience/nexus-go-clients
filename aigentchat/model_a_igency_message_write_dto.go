/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.17.8
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyMessageWriteDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyMessageWriteDto{}

// AIgencyMessageWriteDto struct for AIgencyMessageWriteDto
type AIgencyMessageWriteDto struct {
	AiModelId string `json:"ai_model_id"`
	AiServiceId string `json:"ai_service_id"`
	Attachments *AIgencyMessageFileList `json:"attachments,omitempty"`
	ChannelId string `json:"channel_id"`
	ChannelName string `json:"channel_name"`
	Content *AIgencyMessageContentList `json:"content,omitempty"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	MissionId string `json:"mission_id"`
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	ReferenceId *string `json:"reference_id,omitempty"`
	ResponseToId *string `json:"response_to_id,omitempty"`
	SenderConversationRole ConversationRole `json:"sender_conversation_role"`
	SenderName string `json:"sender_name"`
	Type AIgencyMessageType `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyMessageWriteDto AIgencyMessageWriteDto

// NewAIgencyMessageWriteDto instantiates a new AIgencyMessageWriteDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyMessageWriteDto(aiModelId string, aiServiceId string, channelId string, channelName string, missionId string, senderConversationRole ConversationRole, senderName string, type_ AIgencyMessageType) *AIgencyMessageWriteDto {
	this := AIgencyMessageWriteDto{}
	this.AiModelId = aiModelId
	this.AiServiceId = aiServiceId
	this.ChannelId = channelId
	this.ChannelName = channelName
	this.MissionId = missionId
	this.SenderConversationRole = senderConversationRole
	this.SenderName = senderName
	this.Type = type_
	return &this
}

// NewAIgencyMessageWriteDtoWithDefaults instantiates a new AIgencyMessageWriteDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyMessageWriteDtoWithDefaults() *AIgencyMessageWriteDto {
	this := AIgencyMessageWriteDto{}
	return &this
}

// GetAiModelId returns the AiModelId field value
func (o *AIgencyMessageWriteDto) GetAiModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiModelId
}

// GetAiModelIdOk returns a tuple with the AiModelId field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetAiModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiModelId, true
}

// SetAiModelId sets field value
func (o *AIgencyMessageWriteDto) SetAiModelId(v string) {
	o.AiModelId = v
}

// GetAiServiceId returns the AiServiceId field value
func (o *AIgencyMessageWriteDto) GetAiServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiServiceId
}

// GetAiServiceIdOk returns a tuple with the AiServiceId field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetAiServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiServiceId, true
}

// SetAiServiceId sets field value
func (o *AIgencyMessageWriteDto) SetAiServiceId(v string) {
	o.AiServiceId = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetAttachments() AIgencyMessageFileList {
	if o == nil || IsNil(o.Attachments) {
		var ret AIgencyMessageFileList
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetAttachmentsOk() (*AIgencyMessageFileList, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AIgencyMessageFileList and assigns it to the Attachments field.
func (o *AIgencyMessageWriteDto) SetAttachments(v AIgencyMessageFileList) {
	o.Attachments = &v
}

// GetChannelId returns the ChannelId field value
func (o *AIgencyMessageWriteDto) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *AIgencyMessageWriteDto) SetChannelId(v string) {
	o.ChannelId = v
}

// GetChannelName returns the ChannelName field value
func (o *AIgencyMessageWriteDto) GetChannelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelName, true
}

// SetChannelName sets field value
func (o *AIgencyMessageWriteDto) SetChannelName(v string) {
	o.ChannelName = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetContent() AIgencyMessageContentList {
	if o == nil || IsNil(o.Content) {
		var ret AIgencyMessageContentList
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetContentOk() (*AIgencyMessageContentList, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given AIgencyMessageContentList and assigns it to the Content field.
func (o *AIgencyMessageWriteDto) SetContent(v AIgencyMessageContentList) {
	o.Content = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return map[string]interface{}{}, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *AIgencyMessageWriteDto) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

// GetMissionId returns the MissionId field value
func (o *AIgencyMessageWriteDto) GetMissionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MissionId
}

// GetMissionIdOk returns a tuple with the MissionId field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetMissionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MissionId, true
}

// SetMissionId sets field value
func (o *AIgencyMessageWriteDto) SetMissionId(v string) {
	o.MissionId = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *AIgencyMessageWriteDto) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *AIgencyMessageWriteDto) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetResponseToId returns the ResponseToId field value if set, zero value otherwise.
func (o *AIgencyMessageWriteDto) GetResponseToId() string {
	if o == nil || IsNil(o.ResponseToId) {
		var ret string
		return ret
	}
	return *o.ResponseToId
}

// GetResponseToIdOk returns a tuple with the ResponseToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetResponseToIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseToId) {
		return nil, false
	}
	return o.ResponseToId, true
}

// HasResponseToId returns a boolean if a field has been set.
func (o *AIgencyMessageWriteDto) HasResponseToId() bool {
	if o != nil && !IsNil(o.ResponseToId) {
		return true
	}

	return false
}

// SetResponseToId gets a reference to the given string and assigns it to the ResponseToId field.
func (o *AIgencyMessageWriteDto) SetResponseToId(v string) {
	o.ResponseToId = &v
}

// GetSenderConversationRole returns the SenderConversationRole field value
func (o *AIgencyMessageWriteDto) GetSenderConversationRole() ConversationRole {
	if o == nil {
		var ret ConversationRole
		return ret
	}

	return o.SenderConversationRole
}

// GetSenderConversationRoleOk returns a tuple with the SenderConversationRole field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetSenderConversationRoleOk() (*ConversationRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderConversationRole, true
}

// SetSenderConversationRole sets field value
func (o *AIgencyMessageWriteDto) SetSenderConversationRole(v ConversationRole) {
	o.SenderConversationRole = v
}

// GetSenderName returns the SenderName field value
func (o *AIgencyMessageWriteDto) GetSenderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderName
}

// GetSenderNameOk returns a tuple with the SenderName field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderName, true
}

// SetSenderName sets field value
func (o *AIgencyMessageWriteDto) SetSenderName(v string) {
	o.SenderName = v
}

// GetType returns the Type field value
func (o *AIgencyMessageWriteDto) GetType() AIgencyMessageType {
	if o == nil {
		var ret AIgencyMessageType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageWriteDto) GetTypeOk() (*AIgencyMessageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AIgencyMessageWriteDto) SetType(v AIgencyMessageType) {
	o.Type = v
}

func (o AIgencyMessageWriteDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyMessageWriteDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ai_model_id"] = o.AiModelId
	toSerialize["ai_service_id"] = o.AiServiceId
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	toSerialize["channel_id"] = o.ChannelId
	toSerialize["channel_name"] = o.ChannelName
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}
	toSerialize["mission_id"] = o.MissionId
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if !IsNil(o.ResponseToId) {
		toSerialize["response_to_id"] = o.ResponseToId
	}
	toSerialize["sender_conversation_role"] = o.SenderConversationRole
	toSerialize["sender_name"] = o.SenderName
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyMessageWriteDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ai_model_id",
		"ai_service_id",
		"channel_id",
		"channel_name",
		"mission_id",
		"sender_conversation_role",
		"sender_name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyMessageWriteDto := _AIgencyMessageWriteDto{}

	err = json.Unmarshal(data, &varAIgencyMessageWriteDto)

	if err != nil {
		return err
	}

	*o = AIgencyMessageWriteDto(varAIgencyMessageWriteDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ai_model_id")
		delete(additionalProperties, "ai_service_id")
		delete(additionalProperties, "attachments")
		delete(additionalProperties, "channel_id")
		delete(additionalProperties, "channel_name")
		delete(additionalProperties, "content")
		delete(additionalProperties, "meta_data")
		delete(additionalProperties, "mission_id")
		delete(additionalProperties, "parameters")
		delete(additionalProperties, "reference_id")
		delete(additionalProperties, "response_to_id")
		delete(additionalProperties, "sender_conversation_role")
		delete(additionalProperties, "sender_name")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyMessageWriteDto struct {
	value *AIgencyMessageWriteDto
	isSet bool
}

func (v NullableAIgencyMessageWriteDto) Get() *AIgencyMessageWriteDto {
	return v.value
}

func (v *NullableAIgencyMessageWriteDto) Set(val *AIgencyMessageWriteDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyMessageWriteDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyMessageWriteDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyMessageWriteDto(val *AIgencyMessageWriteDto) *NullableAIgencyMessageWriteDto {
	return &NullableAIgencyMessageWriteDto{value: val, isSet: true}
}

func (v NullableAIgencyMessageWriteDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyMessageWriteDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


