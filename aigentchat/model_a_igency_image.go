/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.3
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyImage{}

// AIgencyImage struct for AIgencyImage
type AIgencyImage struct {
	AgentId string `json:"agent_id"`
	AiModelId string `json:"ai_model_id"`
	AiServiceId string `json:"ai_service_id"`
	CreatedAt int64 `json:"created_at"`
	ExecutionId string `json:"execution_id"`
	Id string `json:"id"`
	Message string `json:"message"`
	MimeType string `json:"mime_type"`
	OwnerId string `json:"owner_id"`
	OwnerOrganizationId string `json:"owner_organization_id"`
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	Thumbnails []AIgencyThumbnail `json:"thumbnails,omitempty"`
	Url string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyImage AIgencyImage

// NewAIgencyImage instantiates a new AIgencyImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyImage(agentId string, aiModelId string, aiServiceId string, createdAt int64, executionId string, id string, message string, mimeType string, ownerId string, ownerOrganizationId string, url string) *AIgencyImage {
	this := AIgencyImage{}
	this.AgentId = agentId
	this.AiModelId = aiModelId
	this.AiServiceId = aiServiceId
	this.CreatedAt = createdAt
	this.ExecutionId = executionId
	this.Id = id
	this.Message = message
	this.MimeType = mimeType
	this.OwnerId = ownerId
	this.OwnerOrganizationId = ownerOrganizationId
	this.Url = url
	return &this
}

// NewAIgencyImageWithDefaults instantiates a new AIgencyImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyImageWithDefaults() *AIgencyImage {
	this := AIgencyImage{}
	return &this
}

// GetAgentId returns the AgentId field value
func (o *AIgencyImage) GetAgentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentId, true
}

// SetAgentId sets field value
func (o *AIgencyImage) SetAgentId(v string) {
	o.AgentId = v
}

// GetAiModelId returns the AiModelId field value
func (o *AIgencyImage) GetAiModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiModelId
}

// GetAiModelIdOk returns a tuple with the AiModelId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetAiModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiModelId, true
}

// SetAiModelId sets field value
func (o *AIgencyImage) SetAiModelId(v string) {
	o.AiModelId = v
}

// GetAiServiceId returns the AiServiceId field value
func (o *AIgencyImage) GetAiServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AiServiceId
}

// GetAiServiceIdOk returns a tuple with the AiServiceId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetAiServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AiServiceId, true
}

// SetAiServiceId sets field value
func (o *AIgencyImage) SetAiServiceId(v string) {
	o.AiServiceId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AIgencyImage) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AIgencyImage) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetExecutionId returns the ExecutionId field value
func (o *AIgencyImage) GetExecutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetExecutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionId, true
}

// SetExecutionId sets field value
func (o *AIgencyImage) SetExecutionId(v string) {
	o.ExecutionId = v
}

// GetId returns the Id field value
func (o *AIgencyImage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AIgencyImage) SetId(v string) {
	o.Id = v
}

// GetMessage returns the Message field value
func (o *AIgencyImage) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AIgencyImage) SetMessage(v string) {
	o.Message = v
}

// GetMimeType returns the MimeType field value
func (o *AIgencyImage) GetMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MimeType, true
}

// SetMimeType sets field value
func (o *AIgencyImage) SetMimeType(v string) {
	o.MimeType = v
}

// GetOwnerId returns the OwnerId field value
func (o *AIgencyImage) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *AIgencyImage) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetOwnerOrganizationId returns the OwnerOrganizationId field value
func (o *AIgencyImage) GetOwnerOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerOrganizationId
}

// GetOwnerOrganizationIdOk returns a tuple with the OwnerOrganizationId field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetOwnerOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerOrganizationId, true
}

// SetOwnerOrganizationId sets field value
func (o *AIgencyImage) SetOwnerOrganizationId(v string) {
	o.OwnerOrganizationId = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AIgencyImage) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AIgencyImage) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *AIgencyImage) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetThumbnails returns the Thumbnails field value if set, zero value otherwise.
func (o *AIgencyImage) GetThumbnails() []AIgencyThumbnail {
	if o == nil || IsNil(o.Thumbnails) {
		var ret []AIgencyThumbnail
		return ret
	}
	return o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetThumbnailsOk() ([]AIgencyThumbnail, bool) {
	if o == nil || IsNil(o.Thumbnails) {
		return nil, false
	}
	return o.Thumbnails, true
}

// HasThumbnails returns a boolean if a field has been set.
func (o *AIgencyImage) HasThumbnails() bool {
	if o != nil && !IsNil(o.Thumbnails) {
		return true
	}

	return false
}

// SetThumbnails gets a reference to the given []AIgencyThumbnail and assigns it to the Thumbnails field.
func (o *AIgencyImage) SetThumbnails(v []AIgencyThumbnail) {
	o.Thumbnails = v
}

// GetUrl returns the Url field value
func (o *AIgencyImage) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AIgencyImage) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AIgencyImage) SetUrl(v string) {
	o.Url = v
}

func (o AIgencyImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agent_id"] = o.AgentId
	toSerialize["ai_model_id"] = o.AiModelId
	toSerialize["ai_service_id"] = o.AiServiceId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["execution_id"] = o.ExecutionId
	toSerialize["id"] = o.Id
	toSerialize["message"] = o.Message
	toSerialize["mime_type"] = o.MimeType
	toSerialize["owner_id"] = o.OwnerId
	toSerialize["owner_organization_id"] = o.OwnerOrganizationId
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Thumbnails) {
		toSerialize["thumbnails"] = o.Thumbnails
	}
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agent_id",
		"ai_model_id",
		"ai_service_id",
		"created_at",
		"execution_id",
		"id",
		"message",
		"mime_type",
		"owner_id",
		"owner_organization_id",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyImage := _AIgencyImage{}

	err = json.Unmarshal(data, &varAIgencyImage)

	if err != nil {
		return err
	}

	*o = AIgencyImage(varAIgencyImage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agent_id")
		delete(additionalProperties, "ai_model_id")
		delete(additionalProperties, "ai_service_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "execution_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "message")
		delete(additionalProperties, "mime_type")
		delete(additionalProperties, "owner_id")
		delete(additionalProperties, "owner_organization_id")
		delete(additionalProperties, "parameters")
		delete(additionalProperties, "thumbnails")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyImage struct {
	value *AIgencyImage
	isSet bool
}

func (v NullableAIgencyImage) Get() *AIgencyImage {
	return v.value
}

func (v *NullableAIgencyImage) Set(val *AIgencyImage) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyImage) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyImage(val *AIgencyImage) *NullableAIgencyImage {
	return &NullableAIgencyImage{value: val, isSet: true}
}

func (v NullableAIgencyImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


