/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.0
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyMessageContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyMessageContent{}

// AIgencyMessageContent struct for AIgencyMessageContent
type AIgencyMessageContent struct {
	// Currently unused in favor of attachment list
	File *AIgencyMessageFile `json:"file,omitempty"`
	FunctionCall *AIgencyFunctionCall `json:"function_call,omitempty"`
	FunctionResponses *AIgencyFunctionResponse `json:"function_responses,omitempty"`
	Text *string `json:"text,omitempty"`
	Thinking *AIgencyThinking `json:"thinking,omitempty"`
	Type AIgencyMessageContentType `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyMessageContent AIgencyMessageContent

// NewAIgencyMessageContent instantiates a new AIgencyMessageContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyMessageContent(type_ AIgencyMessageContentType) *AIgencyMessageContent {
	this := AIgencyMessageContent{}
	this.Type = type_
	return &this
}

// NewAIgencyMessageContentWithDefaults instantiates a new AIgencyMessageContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyMessageContentWithDefaults() *AIgencyMessageContent {
	this := AIgencyMessageContent{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *AIgencyMessageContent) GetFile() AIgencyMessageFile {
	if o == nil || IsNil(o.File) {
		var ret AIgencyMessageFile
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetFileOk() (*AIgencyMessageFile, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *AIgencyMessageContent) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given AIgencyMessageFile and assigns it to the File field.
func (o *AIgencyMessageContent) SetFile(v AIgencyMessageFile) {
	o.File = &v
}

// GetFunctionCall returns the FunctionCall field value if set, zero value otherwise.
func (o *AIgencyMessageContent) GetFunctionCall() AIgencyFunctionCall {
	if o == nil || IsNil(o.FunctionCall) {
		var ret AIgencyFunctionCall
		return ret
	}
	return *o.FunctionCall
}

// GetFunctionCallOk returns a tuple with the FunctionCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetFunctionCallOk() (*AIgencyFunctionCall, bool) {
	if o == nil || IsNil(o.FunctionCall) {
		return nil, false
	}
	return o.FunctionCall, true
}

// HasFunctionCall returns a boolean if a field has been set.
func (o *AIgencyMessageContent) HasFunctionCall() bool {
	if o != nil && !IsNil(o.FunctionCall) {
		return true
	}

	return false
}

// SetFunctionCall gets a reference to the given AIgencyFunctionCall and assigns it to the FunctionCall field.
func (o *AIgencyMessageContent) SetFunctionCall(v AIgencyFunctionCall) {
	o.FunctionCall = &v
}

// GetFunctionResponses returns the FunctionResponses field value if set, zero value otherwise.
func (o *AIgencyMessageContent) GetFunctionResponses() AIgencyFunctionResponse {
	if o == nil || IsNil(o.FunctionResponses) {
		var ret AIgencyFunctionResponse
		return ret
	}
	return *o.FunctionResponses
}

// GetFunctionResponsesOk returns a tuple with the FunctionResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetFunctionResponsesOk() (*AIgencyFunctionResponse, bool) {
	if o == nil || IsNil(o.FunctionResponses) {
		return nil, false
	}
	return o.FunctionResponses, true
}

// HasFunctionResponses returns a boolean if a field has been set.
func (o *AIgencyMessageContent) HasFunctionResponses() bool {
	if o != nil && !IsNil(o.FunctionResponses) {
		return true
	}

	return false
}

// SetFunctionResponses gets a reference to the given AIgencyFunctionResponse and assigns it to the FunctionResponses field.
func (o *AIgencyMessageContent) SetFunctionResponses(v AIgencyFunctionResponse) {
	o.FunctionResponses = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *AIgencyMessageContent) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *AIgencyMessageContent) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *AIgencyMessageContent) SetText(v string) {
	o.Text = &v
}

// GetThinking returns the Thinking field value if set, zero value otherwise.
func (o *AIgencyMessageContent) GetThinking() AIgencyThinking {
	if o == nil || IsNil(o.Thinking) {
		var ret AIgencyThinking
		return ret
	}
	return *o.Thinking
}

// GetThinkingOk returns a tuple with the Thinking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetThinkingOk() (*AIgencyThinking, bool) {
	if o == nil || IsNil(o.Thinking) {
		return nil, false
	}
	return o.Thinking, true
}

// HasThinking returns a boolean if a field has been set.
func (o *AIgencyMessageContent) HasThinking() bool {
	if o != nil && !IsNil(o.Thinking) {
		return true
	}

	return false
}

// SetThinking gets a reference to the given AIgencyThinking and assigns it to the Thinking field.
func (o *AIgencyMessageContent) SetThinking(v AIgencyThinking) {
	o.Thinking = &v
}

// GetType returns the Type field value
func (o *AIgencyMessageContent) GetType() AIgencyMessageContentType {
	if o == nil {
		var ret AIgencyMessageContentType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AIgencyMessageContent) GetTypeOk() (*AIgencyMessageContentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AIgencyMessageContent) SetType(v AIgencyMessageContentType) {
	o.Type = v
}

func (o AIgencyMessageContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyMessageContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.FunctionCall) {
		toSerialize["function_call"] = o.FunctionCall
	}
	if !IsNil(o.FunctionResponses) {
		toSerialize["function_responses"] = o.FunctionResponses
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Thinking) {
		toSerialize["thinking"] = o.Thinking
	}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyMessageContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyMessageContent := _AIgencyMessageContent{}

	err = json.Unmarshal(data, &varAIgencyMessageContent)

	if err != nil {
		return err
	}

	*o = AIgencyMessageContent(varAIgencyMessageContent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "file")
		delete(additionalProperties, "function_call")
		delete(additionalProperties, "function_responses")
		delete(additionalProperties, "text")
		delete(additionalProperties, "thinking")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyMessageContent struct {
	value *AIgencyMessageContent
	isSet bool
}

func (v NullableAIgencyMessageContent) Get() *AIgencyMessageContent {
	return v.value
}

func (v *NullableAIgencyMessageContent) Set(val *AIgencyMessageContent) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyMessageContent) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyMessageContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyMessageContent(val *AIgencyMessageContent) *NullableAIgencyMessageContent {
	return &NullableAIgencyMessageContent{value: val, isSet: true}
}

func (v NullableAIgencyMessageContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyMessageContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


