/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.10
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the ChatCompletionCostTrackingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionCostTrackingRequest{}

// ChatCompletionCostTrackingRequest struct for ChatCompletionCostTrackingRequest
type ChatCompletionCostTrackingRequest struct {
	Batch *bool `json:"batch,omitempty"`
	ExecutionId *string `json:"execution_id,omitempty"`
	InputTokens *int32 `json:"input_tokens,omitempty"`
	ModelInternalId string `json:"model_internal_id"`
	OutputTokens *int32 `json:"output_tokens,omitempty"`
	ServiceInternalId string `json:"service_internal_id"`
	Streaming *bool `json:"streaming,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChatCompletionCostTrackingRequest ChatCompletionCostTrackingRequest

// NewChatCompletionCostTrackingRequest instantiates a new ChatCompletionCostTrackingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionCostTrackingRequest(modelInternalId string, serviceInternalId string) *ChatCompletionCostTrackingRequest {
	this := ChatCompletionCostTrackingRequest{}
	this.ModelInternalId = modelInternalId
	this.ServiceInternalId = serviceInternalId
	return &this
}

// NewChatCompletionCostTrackingRequestWithDefaults instantiates a new ChatCompletionCostTrackingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionCostTrackingRequestWithDefaults() *ChatCompletionCostTrackingRequest {
	this := ChatCompletionCostTrackingRequest{}
	return &this
}

// GetBatch returns the Batch field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetBatch() bool {
	if o == nil || IsNil(o.Batch) {
		var ret bool
		return ret
	}
	return *o.Batch
}

// GetBatchOk returns a tuple with the Batch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetBatchOk() (*bool, bool) {
	if o == nil || IsNil(o.Batch) {
		return nil, false
	}
	return o.Batch, true
}

// HasBatch returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasBatch() bool {
	if o != nil && !IsNil(o.Batch) {
		return true
	}

	return false
}

// SetBatch gets a reference to the given bool and assigns it to the Batch field.
func (o *ChatCompletionCostTrackingRequest) SetBatch(v bool) {
	o.Batch = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *ChatCompletionCostTrackingRequest) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetInputTokens returns the InputTokens field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetInputTokens() int32 {
	if o == nil || IsNil(o.InputTokens) {
		var ret int32
		return ret
	}
	return *o.InputTokens
}

// GetInputTokensOk returns a tuple with the InputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetInputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.InputTokens) {
		return nil, false
	}
	return o.InputTokens, true
}

// HasInputTokens returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasInputTokens() bool {
	if o != nil && !IsNil(o.InputTokens) {
		return true
	}

	return false
}

// SetInputTokens gets a reference to the given int32 and assigns it to the InputTokens field.
func (o *ChatCompletionCostTrackingRequest) SetInputTokens(v int32) {
	o.InputTokens = &v
}

// GetModelInternalId returns the ModelInternalId field value
func (o *ChatCompletionCostTrackingRequest) GetModelInternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelInternalId
}

// GetModelInternalIdOk returns a tuple with the ModelInternalId field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetModelInternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelInternalId, true
}

// SetModelInternalId sets field value
func (o *ChatCompletionCostTrackingRequest) SetModelInternalId(v string) {
	o.ModelInternalId = v
}

// GetOutputTokens returns the OutputTokens field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetOutputTokens() int32 {
	if o == nil || IsNil(o.OutputTokens) {
		var ret int32
		return ret
	}
	return *o.OutputTokens
}

// GetOutputTokensOk returns a tuple with the OutputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetOutputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.OutputTokens) {
		return nil, false
	}
	return o.OutputTokens, true
}

// HasOutputTokens returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasOutputTokens() bool {
	if o != nil && !IsNil(o.OutputTokens) {
		return true
	}

	return false
}

// SetOutputTokens gets a reference to the given int32 and assigns it to the OutputTokens field.
func (o *ChatCompletionCostTrackingRequest) SetOutputTokens(v int32) {
	o.OutputTokens = &v
}

// GetServiceInternalId returns the ServiceInternalId field value
func (o *ChatCompletionCostTrackingRequest) GetServiceInternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceInternalId
}

// GetServiceInternalIdOk returns a tuple with the ServiceInternalId field value
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetServiceInternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceInternalId, true
}

// SetServiceInternalId sets field value
func (o *ChatCompletionCostTrackingRequest) SetServiceInternalId(v string) {
	o.ServiceInternalId = v
}

// GetStreaming returns the Streaming field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetStreaming() bool {
	if o == nil || IsNil(o.Streaming) {
		var ret bool
		return ret
	}
	return *o.Streaming
}

// GetStreamingOk returns a tuple with the Streaming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetStreamingOk() (*bool, bool) {
	if o == nil || IsNil(o.Streaming) {
		return nil, false
	}
	return o.Streaming, true
}

// HasStreaming returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasStreaming() bool {
	if o != nil && !IsNil(o.Streaming) {
		return true
	}

	return false
}

// SetStreaming gets a reference to the given bool and assigns it to the Streaming field.
func (o *ChatCompletionCostTrackingRequest) SetStreaming(v bool) {
	o.Streaming = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ChatCompletionCostTrackingRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionCostTrackingRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ChatCompletionCostTrackingRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ChatCompletionCostTrackingRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o ChatCompletionCostTrackingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionCostTrackingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Batch) {
		toSerialize["batch"] = o.Batch
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if !IsNil(o.InputTokens) {
		toSerialize["input_tokens"] = o.InputTokens
	}
	toSerialize["model_internal_id"] = o.ModelInternalId
	if !IsNil(o.OutputTokens) {
		toSerialize["output_tokens"] = o.OutputTokens
	}
	toSerialize["service_internal_id"] = o.ServiceInternalId
	if !IsNil(o.Streaming) {
		toSerialize["streaming"] = o.Streaming
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ChatCompletionCostTrackingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model_internal_id",
		"service_internal_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatCompletionCostTrackingRequest := _ChatCompletionCostTrackingRequest{}

	err = json.Unmarshal(data, &varChatCompletionCostTrackingRequest)

	if err != nil {
		return err
	}

	*o = ChatCompletionCostTrackingRequest(varChatCompletionCostTrackingRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "batch")
		delete(additionalProperties, "execution_id")
		delete(additionalProperties, "input_tokens")
		delete(additionalProperties, "model_internal_id")
		delete(additionalProperties, "output_tokens")
		delete(additionalProperties, "service_internal_id")
		delete(additionalProperties, "streaming")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChatCompletionCostTrackingRequest struct {
	value *ChatCompletionCostTrackingRequest
	isSet bool
}

func (v NullableChatCompletionCostTrackingRequest) Get() *ChatCompletionCostTrackingRequest {
	return v.value
}

func (v *NullableChatCompletionCostTrackingRequest) Set(val *ChatCompletionCostTrackingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionCostTrackingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionCostTrackingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionCostTrackingRequest(val *ChatCompletionCostTrackingRequest) *NullableChatCompletionCostTrackingRequest {
	return &NullableChatCompletionCostTrackingRequest{value: val, isSet: true}
}

func (v NullableChatCompletionCostTrackingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionCostTrackingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


