/*
vAudience AIgentChat API

Testing AgentPromptsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package aigentchat

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/vaudience/nexus-go-clients/aigentchat"
)

func Test_aigentchat_AgentPromptsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AgentPromptsAPIService CreateAgentPrompt", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.AgentPromptsAPI.CreateAgentPrompt(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgentPromptsAPIService DeleteAgentPrompt", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var promptId string

		httpRes, err := apiClient.AgentPromptsAPI.DeleteAgentPrompt(context.Background(), orgId, promptId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgentPromptsAPIService GetAgentPrompt", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var promptId string

		resp, httpRes, err := apiClient.AgentPromptsAPI.GetAgentPrompt(context.Background(), orgId, promptId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgentPromptsAPIService ListAgentPrompts", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.AgentPromptsAPI.ListAgentPrompts(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgentPromptsAPIService RenderAgentPrompt", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string

		resp, httpRes, err := apiClient.AgentPromptsAPI.RenderAgentPrompt(context.Background(), orgId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AgentPromptsAPIService UpdateAgentPrompt", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var promptId string

		resp, httpRes, err := apiClient.AgentPromptsAPI.UpdateAgentPrompt(context.Background(), orgId, promptId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
