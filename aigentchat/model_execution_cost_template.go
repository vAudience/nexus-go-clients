/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.19.3
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
)

// checks if the ExecutionCostTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionCostTemplate{}

// ExecutionCostTemplate struct for ExecutionCostTemplate
type ExecutionCostTemplate struct {
	CostPerUnitInEuro *float64 `json:"cost_per_unit_in_euro,omitempty"`
	CostUnit *AIModelCostUnit `json:"cost_unit,omitempty"`
	Description *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExecutionCostTemplate ExecutionCostTemplate

// NewExecutionCostTemplate instantiates a new ExecutionCostTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionCostTemplate() *ExecutionCostTemplate {
	this := ExecutionCostTemplate{}
	return &this
}

// NewExecutionCostTemplateWithDefaults instantiates a new ExecutionCostTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionCostTemplateWithDefaults() *ExecutionCostTemplate {
	this := ExecutionCostTemplate{}
	return &this
}

// GetCostPerUnitInEuro returns the CostPerUnitInEuro field value if set, zero value otherwise.
func (o *ExecutionCostTemplate) GetCostPerUnitInEuro() float64 {
	if o == nil || IsNil(o.CostPerUnitInEuro) {
		var ret float64
		return ret
	}
	return *o.CostPerUnitInEuro
}

// GetCostPerUnitInEuroOk returns a tuple with the CostPerUnitInEuro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionCostTemplate) GetCostPerUnitInEuroOk() (*float64, bool) {
	if o == nil || IsNil(o.CostPerUnitInEuro) {
		return nil, false
	}
	return o.CostPerUnitInEuro, true
}

// HasCostPerUnitInEuro returns a boolean if a field has been set.
func (o *ExecutionCostTemplate) HasCostPerUnitInEuro() bool {
	if o != nil && !IsNil(o.CostPerUnitInEuro) {
		return true
	}

	return false
}

// SetCostPerUnitInEuro gets a reference to the given float64 and assigns it to the CostPerUnitInEuro field.
func (o *ExecutionCostTemplate) SetCostPerUnitInEuro(v float64) {
	o.CostPerUnitInEuro = &v
}

// GetCostUnit returns the CostUnit field value if set, zero value otherwise.
func (o *ExecutionCostTemplate) GetCostUnit() AIModelCostUnit {
	if o == nil || IsNil(o.CostUnit) {
		var ret AIModelCostUnit
		return ret
	}
	return *o.CostUnit
}

// GetCostUnitOk returns a tuple with the CostUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionCostTemplate) GetCostUnitOk() (*AIModelCostUnit, bool) {
	if o == nil || IsNil(o.CostUnit) {
		return nil, false
	}
	return o.CostUnit, true
}

// HasCostUnit returns a boolean if a field has been set.
func (o *ExecutionCostTemplate) HasCostUnit() bool {
	if o != nil && !IsNil(o.CostUnit) {
		return true
	}

	return false
}

// SetCostUnit gets a reference to the given AIModelCostUnit and assigns it to the CostUnit field.
func (o *ExecutionCostTemplate) SetCostUnit(v AIModelCostUnit) {
	o.CostUnit = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExecutionCostTemplate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionCostTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExecutionCostTemplate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExecutionCostTemplate) SetDescription(v string) {
	o.Description = &v
}

func (o ExecutionCostTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionCostTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CostPerUnitInEuro) {
		toSerialize["cost_per_unit_in_euro"] = o.CostPerUnitInEuro
	}
	if !IsNil(o.CostUnit) {
		toSerialize["cost_unit"] = o.CostUnit
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExecutionCostTemplate) UnmarshalJSON(data []byte) (err error) {
	varExecutionCostTemplate := _ExecutionCostTemplate{}

	err = json.Unmarshal(data, &varExecutionCostTemplate)

	if err != nil {
		return err
	}

	*o = ExecutionCostTemplate(varExecutionCostTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cost_per_unit_in_euro")
		delete(additionalProperties, "cost_unit")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExecutionCostTemplate struct {
	value *ExecutionCostTemplate
	isSet bool
}

func (v NullableExecutionCostTemplate) Get() *ExecutionCostTemplate {
	return v.value
}

func (v *NullableExecutionCostTemplate) Set(val *ExecutionCostTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionCostTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionCostTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionCostTemplate(val *ExecutionCostTemplate) *NullableExecutionCostTemplate {
	return &NullableExecutionCostTemplate{value: val, isSet: true}
}

func (v NullableExecutionCostTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionCostTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


