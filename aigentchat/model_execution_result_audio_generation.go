/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.13.3
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
)

// checks if the ExecutionResultAudioGeneration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionResultAudioGeneration{}

// ExecutionResultAudioGeneration struct for ExecutionResultAudioGeneration
type ExecutionResultAudioGeneration struct {
	// LocalFilePaths []string `json:\"media_file_paths\"`
	Content *string `json:"content,omitempty"`
	Error map[string]interface{} `json:"error,omitempty"`
	// maps to CompletionID for Text2Text
	ExecutionId *string `json:"execution_id,omitempty"`
	FeaturesUsed []AIModelFeature `json:"features_used,omitempty"`
	FinishReason *string `json:"finish_reason,omitempty"`
	InputTokens *int32 `json:"input_tokens,omitempty"`
	ModelId *string `json:"model_id,omitempty"`
	ResultingFiles []FilemanagerManagedFile `json:"resulting_files,omitempty"`
	ServiceId *string `json:"service_id,omitempty"`
	// in Milliseconds
	TimeNeeded *int64 `json:"time_needed,omitempty"`
	// in Milliseconds unix epoch
	Timestamp *int64 `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExecutionResultAudioGeneration ExecutionResultAudioGeneration

// NewExecutionResultAudioGeneration instantiates a new ExecutionResultAudioGeneration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionResultAudioGeneration() *ExecutionResultAudioGeneration {
	this := ExecutionResultAudioGeneration{}
	return &this
}

// NewExecutionResultAudioGenerationWithDefaults instantiates a new ExecutionResultAudioGeneration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionResultAudioGenerationWithDefaults() *ExecutionResultAudioGeneration {
	this := ExecutionResultAudioGeneration{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ExecutionResultAudioGeneration) SetContent(v string) {
	o.Content = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetError() map[string]interface{} {
	if o == nil || IsNil(o.Error) {
		var ret map[string]interface{}
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetErrorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Error) {
		return map[string]interface{}{}, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given map[string]interface{} and assigns it to the Error field.
func (o *ExecutionResultAudioGeneration) SetError(v map[string]interface{}) {
	o.Error = v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *ExecutionResultAudioGeneration) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetFeaturesUsed returns the FeaturesUsed field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetFeaturesUsed() []AIModelFeature {
	if o == nil || IsNil(o.FeaturesUsed) {
		var ret []AIModelFeature
		return ret
	}
	return o.FeaturesUsed
}

// GetFeaturesUsedOk returns a tuple with the FeaturesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetFeaturesUsedOk() ([]AIModelFeature, bool) {
	if o == nil || IsNil(o.FeaturesUsed) {
		return nil, false
	}
	return o.FeaturesUsed, true
}

// HasFeaturesUsed returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasFeaturesUsed() bool {
	if o != nil && !IsNil(o.FeaturesUsed) {
		return true
	}

	return false
}

// SetFeaturesUsed gets a reference to the given []AIModelFeature and assigns it to the FeaturesUsed field.
func (o *ExecutionResultAudioGeneration) SetFeaturesUsed(v []AIModelFeature) {
	o.FeaturesUsed = v
}

// GetFinishReason returns the FinishReason field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetFinishReason() string {
	if o == nil || IsNil(o.FinishReason) {
		var ret string
		return ret
	}
	return *o.FinishReason
}

// GetFinishReasonOk returns a tuple with the FinishReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetFinishReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FinishReason) {
		return nil, false
	}
	return o.FinishReason, true
}

// HasFinishReason returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasFinishReason() bool {
	if o != nil && !IsNil(o.FinishReason) {
		return true
	}

	return false
}

// SetFinishReason gets a reference to the given string and assigns it to the FinishReason field.
func (o *ExecutionResultAudioGeneration) SetFinishReason(v string) {
	o.FinishReason = &v
}

// GetInputTokens returns the InputTokens field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetInputTokens() int32 {
	if o == nil || IsNil(o.InputTokens) {
		var ret int32
		return ret
	}
	return *o.InputTokens
}

// GetInputTokensOk returns a tuple with the InputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetInputTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.InputTokens) {
		return nil, false
	}
	return o.InputTokens, true
}

// HasInputTokens returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasInputTokens() bool {
	if o != nil && !IsNil(o.InputTokens) {
		return true
	}

	return false
}

// SetInputTokens gets a reference to the given int32 and assigns it to the InputTokens field.
func (o *ExecutionResultAudioGeneration) SetInputTokens(v int32) {
	o.InputTokens = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *ExecutionResultAudioGeneration) SetModelId(v string) {
	o.ModelId = &v
}

// GetResultingFiles returns the ResultingFiles field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetResultingFiles() []FilemanagerManagedFile {
	if o == nil || IsNil(o.ResultingFiles) {
		var ret []FilemanagerManagedFile
		return ret
	}
	return o.ResultingFiles
}

// GetResultingFilesOk returns a tuple with the ResultingFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetResultingFilesOk() ([]FilemanagerManagedFile, bool) {
	if o == nil || IsNil(o.ResultingFiles) {
		return nil, false
	}
	return o.ResultingFiles, true
}

// HasResultingFiles returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasResultingFiles() bool {
	if o != nil && !IsNil(o.ResultingFiles) {
		return true
	}

	return false
}

// SetResultingFiles gets a reference to the given []FilemanagerManagedFile and assigns it to the ResultingFiles field.
func (o *ExecutionResultAudioGeneration) SetResultingFiles(v []FilemanagerManagedFile) {
	o.ResultingFiles = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ExecutionResultAudioGeneration) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetTimeNeeded returns the TimeNeeded field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetTimeNeeded() int64 {
	if o == nil || IsNil(o.TimeNeeded) {
		var ret int64
		return ret
	}
	return *o.TimeNeeded
}

// GetTimeNeededOk returns a tuple with the TimeNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetTimeNeededOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeNeeded) {
		return nil, false
	}
	return o.TimeNeeded, true
}

// HasTimeNeeded returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasTimeNeeded() bool {
	if o != nil && !IsNil(o.TimeNeeded) {
		return true
	}

	return false
}

// SetTimeNeeded gets a reference to the given int64 and assigns it to the TimeNeeded field.
func (o *ExecutionResultAudioGeneration) SetTimeNeeded(v int64) {
	o.TimeNeeded = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ExecutionResultAudioGeneration) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionResultAudioGeneration) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ExecutionResultAudioGeneration) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *ExecutionResultAudioGeneration) SetTimestamp(v int64) {
	o.Timestamp = &v
}

func (o ExecutionResultAudioGeneration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionResultAudioGeneration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if !IsNil(o.FeaturesUsed) {
		toSerialize["features_used"] = o.FeaturesUsed
	}
	if !IsNil(o.FinishReason) {
		toSerialize["finish_reason"] = o.FinishReason
	}
	if !IsNil(o.InputTokens) {
		toSerialize["input_tokens"] = o.InputTokens
	}
	if !IsNil(o.ModelId) {
		toSerialize["model_id"] = o.ModelId
	}
	if !IsNil(o.ResultingFiles) {
		toSerialize["resulting_files"] = o.ResultingFiles
	}
	if !IsNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !IsNil(o.TimeNeeded) {
		toSerialize["time_needed"] = o.TimeNeeded
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExecutionResultAudioGeneration) UnmarshalJSON(data []byte) (err error) {
	varExecutionResultAudioGeneration := _ExecutionResultAudioGeneration{}

	err = json.Unmarshal(data, &varExecutionResultAudioGeneration)

	if err != nil {
		return err
	}

	*o = ExecutionResultAudioGeneration(varExecutionResultAudioGeneration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content")
		delete(additionalProperties, "error")
		delete(additionalProperties, "execution_id")
		delete(additionalProperties, "features_used")
		delete(additionalProperties, "finish_reason")
		delete(additionalProperties, "input_tokens")
		delete(additionalProperties, "model_id")
		delete(additionalProperties, "resulting_files")
		delete(additionalProperties, "service_id")
		delete(additionalProperties, "time_needed")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExecutionResultAudioGeneration struct {
	value *ExecutionResultAudioGeneration
	isSet bool
}

func (v NullableExecutionResultAudioGeneration) Get() *ExecutionResultAudioGeneration {
	return v.value
}

func (v *NullableExecutionResultAudioGeneration) Set(val *ExecutionResultAudioGeneration) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionResultAudioGeneration) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionResultAudioGeneration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionResultAudioGeneration(val *ExecutionResultAudioGeneration) *NullableExecutionResultAudioGeneration {
	return &NullableExecutionResultAudioGeneration{value: val, isSet: true}
}

func (v NullableExecutionResultAudioGeneration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionResultAudioGeneration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


