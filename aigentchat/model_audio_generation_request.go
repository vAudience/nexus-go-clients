/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.15.12
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
)

// checks if the AudioGenerationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudioGenerationRequest{}

// AudioGenerationRequest struct for AudioGenerationRequest
type AudioGenerationRequest struct {
	AgentId *string `json:"agent_id,omitempty"`
	AttachedTemporaryFiles []string `json:"attached_temporary_files,omitempty"`
	ChannelId *string `json:"channel_id,omitempty"`
	Dictionary *map[string]string `json:"dictionary,omitempty"`
	Id *string `json:"id,omitempty"`
	Language *string `json:"language,omitempty"`
	Message *string `json:"message,omitempty"`
	MessageReferenceId *string `json:"message_reference_id,omitempty"`
	MessageResponseToId *string `json:"message_response_to_id,omitempty"`
	MissionId *string `json:"mission_id,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	OutputAudioFileFormat *string `json:"output_audio_file_format,omitempty"`
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	Speed *float64 `json:"speed,omitempty"`
	StreamAudio *bool `json:"stream_audio,omitempty"`
	TeamIds []string `json:"team_ids,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Username *string `json:"username,omitempty"`
	VoiceId *string `json:"voice_id,omitempty"`
	VoiceName *string `json:"voice_name,omitempty"`
	WithTimestamps *bool `json:"with_timestamps,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AudioGenerationRequest AudioGenerationRequest

// NewAudioGenerationRequest instantiates a new AudioGenerationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudioGenerationRequest() *AudioGenerationRequest {
	this := AudioGenerationRequest{}
	return &this
}

// NewAudioGenerationRequestWithDefaults instantiates a new AudioGenerationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudioGenerationRequestWithDefaults() *AudioGenerationRequest {
	this := AudioGenerationRequest{}
	return &this
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *AudioGenerationRequest) SetAgentId(v string) {
	o.AgentId = &v
}

// GetAttachedTemporaryFiles returns the AttachedTemporaryFiles field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetAttachedTemporaryFiles() []string {
	if o == nil || IsNil(o.AttachedTemporaryFiles) {
		var ret []string
		return ret
	}
	return o.AttachedTemporaryFiles
}

// GetAttachedTemporaryFilesOk returns a tuple with the AttachedTemporaryFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetAttachedTemporaryFilesOk() ([]string, bool) {
	if o == nil || IsNil(o.AttachedTemporaryFiles) {
		return nil, false
	}
	return o.AttachedTemporaryFiles, true
}

// HasAttachedTemporaryFiles returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasAttachedTemporaryFiles() bool {
	if o != nil && !IsNil(o.AttachedTemporaryFiles) {
		return true
	}

	return false
}

// SetAttachedTemporaryFiles gets a reference to the given []string and assigns it to the AttachedTemporaryFiles field.
func (o *AudioGenerationRequest) SetAttachedTemporaryFiles(v []string) {
	o.AttachedTemporaryFiles = v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *AudioGenerationRequest) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetDictionary returns the Dictionary field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetDictionary() map[string]string {
	if o == nil || IsNil(o.Dictionary) {
		var ret map[string]string
		return ret
	}
	return *o.Dictionary
}

// GetDictionaryOk returns a tuple with the Dictionary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetDictionaryOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Dictionary) {
		return nil, false
	}
	return o.Dictionary, true
}

// HasDictionary returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasDictionary() bool {
	if o != nil && !IsNil(o.Dictionary) {
		return true
	}

	return false
}

// SetDictionary gets a reference to the given map[string]string and assigns it to the Dictionary field.
func (o *AudioGenerationRequest) SetDictionary(v map[string]string) {
	o.Dictionary = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AudioGenerationRequest) SetId(v string) {
	o.Id = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *AudioGenerationRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AudioGenerationRequest) SetMessage(v string) {
	o.Message = &v
}

// GetMessageReferenceId returns the MessageReferenceId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetMessageReferenceId() string {
	if o == nil || IsNil(o.MessageReferenceId) {
		var ret string
		return ret
	}
	return *o.MessageReferenceId
}

// GetMessageReferenceIdOk returns a tuple with the MessageReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetMessageReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageReferenceId) {
		return nil, false
	}
	return o.MessageReferenceId, true
}

// HasMessageReferenceId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasMessageReferenceId() bool {
	if o != nil && !IsNil(o.MessageReferenceId) {
		return true
	}

	return false
}

// SetMessageReferenceId gets a reference to the given string and assigns it to the MessageReferenceId field.
func (o *AudioGenerationRequest) SetMessageReferenceId(v string) {
	o.MessageReferenceId = &v
}

// GetMessageResponseToId returns the MessageResponseToId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetMessageResponseToId() string {
	if o == nil || IsNil(o.MessageResponseToId) {
		var ret string
		return ret
	}
	return *o.MessageResponseToId
}

// GetMessageResponseToIdOk returns a tuple with the MessageResponseToId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetMessageResponseToIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageResponseToId) {
		return nil, false
	}
	return o.MessageResponseToId, true
}

// HasMessageResponseToId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasMessageResponseToId() bool {
	if o != nil && !IsNil(o.MessageResponseToId) {
		return true
	}

	return false
}

// SetMessageResponseToId gets a reference to the given string and assigns it to the MessageResponseToId field.
func (o *AudioGenerationRequest) SetMessageResponseToId(v string) {
	o.MessageResponseToId = &v
}

// GetMissionId returns the MissionId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetMissionId() string {
	if o == nil || IsNil(o.MissionId) {
		var ret string
		return ret
	}
	return *o.MissionId
}

// GetMissionIdOk returns a tuple with the MissionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetMissionIdOk() (*string, bool) {
	if o == nil || IsNil(o.MissionId) {
		return nil, false
	}
	return o.MissionId, true
}

// HasMissionId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasMissionId() bool {
	if o != nil && !IsNil(o.MissionId) {
		return true
	}

	return false
}

// SetMissionId gets a reference to the given string and assigns it to the MissionId field.
func (o *AudioGenerationRequest) SetMissionId(v string) {
	o.MissionId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *AudioGenerationRequest) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOutputAudioFileFormat returns the OutputAudioFileFormat field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetOutputAudioFileFormat() string {
	if o == nil || IsNil(o.OutputAudioFileFormat) {
		var ret string
		return ret
	}
	return *o.OutputAudioFileFormat
}

// GetOutputAudioFileFormatOk returns a tuple with the OutputAudioFileFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetOutputAudioFileFormatOk() (*string, bool) {
	if o == nil || IsNil(o.OutputAudioFileFormat) {
		return nil, false
	}
	return o.OutputAudioFileFormat, true
}

// HasOutputAudioFileFormat returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasOutputAudioFileFormat() bool {
	if o != nil && !IsNil(o.OutputAudioFileFormat) {
		return true
	}

	return false
}

// SetOutputAudioFileFormat gets a reference to the given string and assigns it to the OutputAudioFileFormat field.
func (o *AudioGenerationRequest) SetOutputAudioFileFormat(v string) {
	o.OutputAudioFileFormat = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetParameters() map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return map[string]interface{}{}, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *AudioGenerationRequest) SetParameters(v map[string]interface{}) {
	o.Parameters = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetSpeed() float64 {
	if o == nil || IsNil(o.Speed) {
		var ret float64
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetSpeedOk() (*float64, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given float64 and assigns it to the Speed field.
func (o *AudioGenerationRequest) SetSpeed(v float64) {
	o.Speed = &v
}

// GetStreamAudio returns the StreamAudio field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetStreamAudio() bool {
	if o == nil || IsNil(o.StreamAudio) {
		var ret bool
		return ret
	}
	return *o.StreamAudio
}

// GetStreamAudioOk returns a tuple with the StreamAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetStreamAudioOk() (*bool, bool) {
	if o == nil || IsNil(o.StreamAudio) {
		return nil, false
	}
	return o.StreamAudio, true
}

// HasStreamAudio returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasStreamAudio() bool {
	if o != nil && !IsNil(o.StreamAudio) {
		return true
	}

	return false
}

// SetStreamAudio gets a reference to the given bool and assigns it to the StreamAudio field.
func (o *AudioGenerationRequest) SetStreamAudio(v bool) {
	o.StreamAudio = &v
}

// GetTeamIds returns the TeamIds field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetTeamIds() []string {
	if o == nil || IsNil(o.TeamIds) {
		var ret []string
		return ret
	}
	return o.TeamIds
}

// GetTeamIdsOk returns a tuple with the TeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetTeamIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TeamIds) {
		return nil, false
	}
	return o.TeamIds, true
}

// HasTeamIds returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasTeamIds() bool {
	if o != nil && !IsNil(o.TeamIds) {
		return true
	}

	return false
}

// SetTeamIds gets a reference to the given []string and assigns it to the TeamIds field.
func (o *AudioGenerationRequest) SetTeamIds(v []string) {
	o.TeamIds = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AudioGenerationRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AudioGenerationRequest) SetUsername(v string) {
	o.Username = &v
}

// GetVoiceId returns the VoiceId field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetVoiceId() string {
	if o == nil || IsNil(o.VoiceId) {
		var ret string
		return ret
	}
	return *o.VoiceId
}

// GetVoiceIdOk returns a tuple with the VoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetVoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceId) {
		return nil, false
	}
	return o.VoiceId, true
}

// HasVoiceId returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasVoiceId() bool {
	if o != nil && !IsNil(o.VoiceId) {
		return true
	}

	return false
}

// SetVoiceId gets a reference to the given string and assigns it to the VoiceId field.
func (o *AudioGenerationRequest) SetVoiceId(v string) {
	o.VoiceId = &v
}

// GetVoiceName returns the VoiceName field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetVoiceName() string {
	if o == nil || IsNil(o.VoiceName) {
		var ret string
		return ret
	}
	return *o.VoiceName
}

// GetVoiceNameOk returns a tuple with the VoiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetVoiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceName) {
		return nil, false
	}
	return o.VoiceName, true
}

// HasVoiceName returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasVoiceName() bool {
	if o != nil && !IsNil(o.VoiceName) {
		return true
	}

	return false
}

// SetVoiceName gets a reference to the given string and assigns it to the VoiceName field.
func (o *AudioGenerationRequest) SetVoiceName(v string) {
	o.VoiceName = &v
}

// GetWithTimestamps returns the WithTimestamps field value if set, zero value otherwise.
func (o *AudioGenerationRequest) GetWithTimestamps() bool {
	if o == nil || IsNil(o.WithTimestamps) {
		var ret bool
		return ret
	}
	return *o.WithTimestamps
}

// GetWithTimestampsOk returns a tuple with the WithTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioGenerationRequest) GetWithTimestampsOk() (*bool, bool) {
	if o == nil || IsNil(o.WithTimestamps) {
		return nil, false
	}
	return o.WithTimestamps, true
}

// HasWithTimestamps returns a boolean if a field has been set.
func (o *AudioGenerationRequest) HasWithTimestamps() bool {
	if o != nil && !IsNil(o.WithTimestamps) {
		return true
	}

	return false
}

// SetWithTimestamps gets a reference to the given bool and assigns it to the WithTimestamps field.
func (o *AudioGenerationRequest) SetWithTimestamps(v bool) {
	o.WithTimestamps = &v
}

func (o AudioGenerationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudioGenerationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	if !IsNil(o.AttachedTemporaryFiles) {
		toSerialize["attached_temporary_files"] = o.AttachedTemporaryFiles
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.Dictionary) {
		toSerialize["dictionary"] = o.Dictionary
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.MessageReferenceId) {
		toSerialize["message_reference_id"] = o.MessageReferenceId
	}
	if !IsNil(o.MessageResponseToId) {
		toSerialize["message_response_to_id"] = o.MessageResponseToId
	}
	if !IsNil(o.MissionId) {
		toSerialize["mission_id"] = o.MissionId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.OutputAudioFileFormat) {
		toSerialize["output_audio_file_format"] = o.OutputAudioFileFormat
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.StreamAudio) {
		toSerialize["stream_audio"] = o.StreamAudio
	}
	if !IsNil(o.TeamIds) {
		toSerialize["team_ids"] = o.TeamIds
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.VoiceId) {
		toSerialize["voice_id"] = o.VoiceId
	}
	if !IsNil(o.VoiceName) {
		toSerialize["voice_name"] = o.VoiceName
	}
	if !IsNil(o.WithTimestamps) {
		toSerialize["with_timestamps"] = o.WithTimestamps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AudioGenerationRequest) UnmarshalJSON(data []byte) (err error) {
	varAudioGenerationRequest := _AudioGenerationRequest{}

	err = json.Unmarshal(data, &varAudioGenerationRequest)

	if err != nil {
		return err
	}

	*o = AudioGenerationRequest(varAudioGenerationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agent_id")
		delete(additionalProperties, "attached_temporary_files")
		delete(additionalProperties, "channel_id")
		delete(additionalProperties, "dictionary")
		delete(additionalProperties, "id")
		delete(additionalProperties, "language")
		delete(additionalProperties, "message")
		delete(additionalProperties, "message_reference_id")
		delete(additionalProperties, "message_response_to_id")
		delete(additionalProperties, "mission_id")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "output_audio_file_format")
		delete(additionalProperties, "parameters")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "stream_audio")
		delete(additionalProperties, "team_ids")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "username")
		delete(additionalProperties, "voice_id")
		delete(additionalProperties, "voice_name")
		delete(additionalProperties, "with_timestamps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAudioGenerationRequest struct {
	value *AudioGenerationRequest
	isSet bool
}

func (v NullableAudioGenerationRequest) Get() *AudioGenerationRequest {
	return v.value
}

func (v *NullableAudioGenerationRequest) Set(val *AudioGenerationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAudioGenerationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAudioGenerationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudioGenerationRequest(val *AudioGenerationRequest) *NullableAudioGenerationRequest {
	return &NullableAudioGenerationRequest{value: val, isSet: true}
}

func (v NullableAudioGenerationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudioGenerationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


