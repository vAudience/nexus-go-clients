/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.18.8
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the RenderedPrompt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderedPrompt{}

// RenderedPrompt struct for RenderedPrompt
type RenderedPrompt struct {
	Content string `json:"content"`
	AdditionalProperties map[string]interface{}
}

type _RenderedPrompt RenderedPrompt

// NewRenderedPrompt instantiates a new RenderedPrompt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderedPrompt(content string) *RenderedPrompt {
	this := RenderedPrompt{}
	this.Content = content
	return &this
}

// NewRenderedPromptWithDefaults instantiates a new RenderedPrompt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderedPromptWithDefaults() *RenderedPrompt {
	this := RenderedPrompt{}
	return &this
}

// GetContent returns the Content field value
func (o *RenderedPrompt) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *RenderedPrompt) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *RenderedPrompt) SetContent(v string) {
	o.Content = v
}

func (o RenderedPrompt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderedPrompt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RenderedPrompt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRenderedPrompt := _RenderedPrompt{}

	err = json.Unmarshal(data, &varRenderedPrompt)

	if err != nil {
		return err
	}

	*o = RenderedPrompt(varRenderedPrompt)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRenderedPrompt struct {
	value *RenderedPrompt
	isSet bool
}

func (v NullableRenderedPrompt) Get() *RenderedPrompt {
	return v.value
}

func (v *NullableRenderedPrompt) Set(val *RenderedPrompt) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderedPrompt) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderedPrompt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderedPrompt(val *RenderedPrompt) *NullableRenderedPrompt {
	return &NullableRenderedPrompt{value: val, isSet: true}
}

func (v NullableRenderedPrompt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderedPrompt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


