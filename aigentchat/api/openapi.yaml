openapi: 3.0.1
info:
  contact:
    email: contact@vaudience.ai
    name: vAudience
    url: https://www.vaudience.ai
  description: chat and api server for AIgents
  license:
    name: Copyrighted
    url: https://www.vaudience.ai
  termsOfService: https://www.vaudience.ai/terms-of-use/
  title: vAudience AIgentChat API
  version: 0.20.10
servers:
- url: https://aigentchat.dev.ai.vaud.one/
tags:
- description: anything related to ai agents
  name: Agents
- description: anything related to the AI models
  name: AIModels
- description: anything related to the AI model services
  name: AIModelServices
- description: "anything related to audio files and processing such as text-to-speech,\
    \ speech-to-text etc."
  name: Audio
- description: anything related to audit trails of chat messages
  name: AuditTrails
- description: anything related to the chat channels
  name: Channels
- description: anything related to the chat completions
  name: ChatCompletions
- description: anything related to connection tokens for SSE
  name: ConnectionTokens
- description: anything related to embeddings
  name: Embeddings
- description: anything related to execution logs (cost and usage)
  name: ExecutionLogs
- description: anything related to function calls
  name: FunctionCalls
- description: anything related to images
  name: Images
- description: anything related to the chat messages
  name: Messages
- description: anything related to aigency missions
  name: Missions
- description: anything related to the organization cost budgets
  name: OrgCostBudgets
- description: anything related to prompts
  name: Prompts
paths:
  /info/health:
    get:
      description: a simple 200 return endpoint to ensure the service is responsive
      operationId: HealthGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
          description: OK
      summary: checks for service health
      tags:
      - Health
  /info/metrics:
    get:
      description: go prometheus client provides this standard (basic) metrics endpoint
      operationId: MetricsGet
      responses:
        "200":
          content: {}
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Prometheus provided metrics endpoint
      tags:
      - Metrics
  /info/version:
    get:
      description: returns the version number of this service
      operationId: VersionGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionResponse"
          description: OK
      summary: returns the service version
      tags:
      - Version
  /v1/ai-model-services:
    get:
      deprecated: true
      description: Retrieve a list of AI model services
      operationId: ListAIModelServicesLegacy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModelServiceObject"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI model services
      tags:
      - AIModelServices
  /v1/ai-model-services-with-models:
    get:
      deprecated: true
      description: Retrieve a list of AI services with their associated models
      operationId: ListAIModelServicesWithModelsLegacy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModelServiceWithModels"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI services with models
      tags:
      - AIModelServices
  /v1/ai-model-services/{id}:
    get:
      deprecated: true
      description: Retrieve an AI model service by its ID
      operationId: GetAIModelServiceLegacy
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModelServiceObject"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model service by ID
      tags:
      - AIModelServices
  /v1/ai-model-services/{id}/models:
    get:
      deprecated: true
      description: Retrieve a list of AI models for a specific AI model service
      operationId: ListAIModelsForServiceLegacy
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModel"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models for a service
      tags:
      - AIModelServices
  /v1/ai-models:
    get:
      deprecated: true
      description: Retrieve a list of AI models
      operationId: ListAIModelsLegacy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModel"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models
      tags:
      - AIModels
  /v1/ai-models/{id}:
    get:
      deprecated: true
      description: Retrieve an AI model by its ID
      operationId: GetAIModelLegacy
      parameters:
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model by ID
      tags:
      - AIModels
  /v1/organizations/{org_id}/agents:
    get:
      description: Retrieve a list of agents by ownership and organization
      operationId: ListAgents
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Include default agents to the list of org owned agents
        in: query
        name: add_default_agents
        schema:
          type: boolean
      - description: Skip the default agent filtering of the organization settings
        in: query
        name: skip_default_agents_filter
        schema:
          type: boolean
      - description: Filter agents by ability type
        in: query
        name: ability
        schema:
          enum:
          - text
          - chat
          - embedding
          - image
          - tool-function
          type: string
      - description: Ignore hasManageBasicAgentsAccess when listing agents
        in: query
        name: ignore_manage_basic_agents_access
        schema:
          type: boolean
      - description: Filter agents by lifecycle status
        in: query
        name: lifecycle
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Agent"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List agents
      tags:
      - Agents
    post:
      description: Create a new agent with the provided details
      operationId: CreateAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentWriteDto"
        description: Agent
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new agent
      tags:
      - Agents
      x-codegen-request-body-name: agent
  /v1/organizations/{org_id}/agents/search:
    get:
      description: Search agents based on criteria
      operationId: SearchAgents
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Name
        in: query
        name: name
        schema:
          type: string
      - description: Model ID
        in: query
        name: modelID
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Agent"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search agents
      tags:
      - Agents
  /v1/organizations/{org_id}/agents/{id}:
    delete:
      description: Delete an agent by its ID
      operationId: DeleteAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an agent
      tags:
      - Agents
    get:
      description: Retrieve an agent by its ID
      operationId: GetAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an agent
      tags:
      - Agents
    put:
      description: Update an agent by its ID
      operationId: UpdateAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentWriteDto"
        description: Agent
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an agent
      tags:
      - Agents
      x-codegen-request-body-name: agent
  /v1/organizations/{org_id}/agents/{id}/add-file/{file_id}:
    patch:
      description: Add an attached file ID to an agent
      operationId: AddAttachedFileID
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: File ID
        in: path
        name: file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an attached file ID to an agent
      tags:
      - Agents
  /v1/organizations/{org_id}/agents/{id}/add-tool/{tool_id}:
    patch:
      description: Add an assigned tool to an agent
      operationId: AddAssignedTool
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tool ID
        in: path
        name: tool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an assigned tool to an agent
      tags:
      - Agents
  /v1/organizations/{org_id}/agents/{id}/messages/add-system-message:
    patch:
      description: Add a system message to an agent
      operationId: AddSystemMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: System Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add a system message to an agent
      tags:
      - Agents
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/agents/{id}/messages/add-user-message:
    patch:
      description: Add an initial user message to an agent
      operationId: AddInitialUserMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Initial User Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an initial user message to an agent
      tags:
      - Agents
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/agents/{id}/messages/remove-system-message:
    patch:
      description: Remove a system message from an agent
      operationId: RemoveSystemMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: System Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove a system message from an agent
      tags:
      - Agents
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/agents/{id}/messages/remove-user-message:
    patch:
      description: Remove an initial user message from an agent
      operationId: RemoveInitialUserMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Initial User Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an initial user message from an agent
      tags:
      - Agents
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/agents/{id}/remove-file/{file_id}:
    patch:
      description: Remove an attached file ID from an agent
      operationId: RemoveAttachedFileID
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: File ID
        in: path
        name: file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an attached file ID from an agent
      tags:
      - Agents
  /v1/organizations/{org_id}/agents/{id}/remove-tool/{tool_id}:
    patch:
      description: Remove an assigned tool from an agent
      operationId: RemoveAssignedTool
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tool ID
        in: path
        name: tool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an assigned tool from an agent
      tags:
      - Agents
  /v1/organizations/{org_id}/ai-model-services:
    get:
      description: Retrieve a list of AI model services
      operationId: ListAIModelServices
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModelServiceObject"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI model services
      tags:
      - AIModelServices
    post:
      description: Create a new AI model service with the provided details
      operationId: CreateAIModelService
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIModelServiceWriteDto"
        description: AI Model Service
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModelServiceObject"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new AI model service
      tags:
      - AIModelServices
      x-codegen-request-body-name: service
  /v1/organizations/{org_id}/ai-model-services-with-models:
    get:
      description: Retrieve a list of AI services with their associated models
      operationId: ListAIModelServicesWithModels
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModelServiceWithModels"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI services with models
      tags:
      - AIModelServices
  /v1/organizations/{org_id}/ai-model-services/{id}:
    delete:
      description: Delete an AI model service by its ID
      operationId: DeleteAIModelService
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModelServiceObject"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an AI model service
      tags:
      - AIModelServices
    get:
      description: Retrieve an AI model service by its ID
      operationId: GetAIModelService
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModelServiceObject"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model service by ID
      tags:
      - AIModelServices
    put:
      description: Update an AI model service by its ID
      operationId: UpdateAIModelService
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIModelServiceWriteDto"
        description: AI Model Service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModelServiceObject"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an AI model service
      tags:
      - AIModelServices
      x-codegen-request-body-name: service
  /v1/organizations/{org_id}/ai-model-services/{id}/models:
    get:
      description: Retrieve a list of AI models for a specific AI model service
      operationId: ListAIModelsForService
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModel"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models for a service
      tags:
      - AIModelServices
  /v1/organizations/{org_id}/ai-models:
    get:
      description: Retrieve a list of AI models
      operationId: ListAIModels
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIModel"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models
      tags:
      - AIModels
    post:
      description: Create a new AI model with the provided details
      operationId: CreateAIModel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIModelWriteDto"
        description: AI Model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModel"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new AI model
      tags:
      - AIModels
      x-codegen-request-body-name: aiModel
  /v1/organizations/{org_id}/ai-models/{id}:
    delete:
      description: Delete an AI model by its ID
      operationId: DeleteAIModel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an AI model
      tags:
      - AIModels
    get:
      description: Retrieve an AI model by its ID
      operationId: GetAIModel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model by ID
      tags:
      - AIModels
    put:
      description: Update an AI model by its ID
      operationId: UpdateAIModel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIModel"
        description: AI Model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIModel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an AI model
      tags:
      - AIModels
      x-codegen-request-body-name: aiModel
  /v1/organizations/{org_id}/audio/transcribe:
    post:
      description: Reads an audio file and transcribes text from it
      operationId: CreateAudioTranscription
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AudioTranscriptionRequest"
        description: Audio Transcription Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessage"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Transcribe speech to text
      tags:
      - Audio
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/audio/tts:
    post:
      description: Generates an audio file from text. attaches the resulting audiofile
        to the incoming message
      operationId: CreateTextToSpeech
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AudioGenerationRequest"
        description: Audio-Generation Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessage"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Text-To-Speech
      tags:
      - Audio
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/audit-trails/channels/{channel_id}:
    get:
      description: Retrieve the audit trails for a specific channel
      operationId: GetAuditTrailsByChannelId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditTrail"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get the audit trails by channel ID
      tags:
      - AuditTrails
  /v1/organizations/{org_id}/budgets:
    get:
      description: Retrieve the cost budget for a specific organization
      operationId: GetOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgCostBudget"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get organization cost budget
      tags:
      - OrgCostBudgets
    post:
      description: Create a new cost budget for a specific organization
      operationId: AddNewOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgCostBudgetWriteDto"
        description: New budget
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgCostBudget"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add new organization cost budget
      tags:
      - OrgCostBudgets
      x-codegen-request-body-name: budget
    put:
      description: Update the cost budget for a specific organization
      operationId: UpdateOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgCostBudgetWriteDto"
        description: Updated budget
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgCostBudget"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update organization cost budget
      tags:
      - OrgCostBudgets
      x-codegen-request-body-name: budget
  /v1/organizations/{org_id}/budgets/check:
    get:
      description: Check if the cost budget for a specific organization is sufficient
        to start a chat completion
      operationId: CheckOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgCostBudgetCheck"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Check organization cost budget
      tags:
      - OrgCostBudgets
  /v1/organizations/{org_id}/channels:
    delete:
      description: Delete all channels with a given owner ID
      operationId: DeleteChannelsByOwnerId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Channel"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete channels by their owner ID
      tags:
      - Channels
    get:
      deprecated: true
      description: Retrieve a list of channels belonging to a specific organization
      operationId: ListChannelsByOrgId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Channel"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List channels by organization ID
      tags:
      - Channels
    post:
      description: Create a new channel with the provided details
      operationId: CreateChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelWriteDto"
        description: Channel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new channel
      tags:
      - Channels
      x-codegen-request-body-name: channel
  /v1/organizations/{org_id}/channels/files:
    post:
      description: Create a file for a channel
      operationId: CreateChannelFile
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateChannelFile_request"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadResponse"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "413":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Request Entity Too Large
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a file for a channel
      tags:
      - Channels
  /v1/organizations/{org_id}/channels/files/settings:
    get:
      description: Get channel file settings
      operationId: GetChannelFileSettings
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileSettings"
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
      security:
      - ApiKey: []
      summary: Get channel file settings
      tags:
      - Channels
  /v1/organizations/{org_id}/channels/me:
    get:
      description: Retrieve a list of channels owned by the current user
      operationId: ListChannelsByOwnerId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Channel"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List channels owned by the current user
      tags:
      - Channels
  /v1/organizations/{org_id}/channels/search:
    get:
      description: Retrieve a list of channels matching the search query
      operationId: SearchChannels
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: user ID or me for current user
        in: query
        name: user_id
        schema:
          type: string
      - description: Limit the number of results
        in: query
        name: limit
        schema:
          default: 1000
          type: integer
      - description: Offset for pagination
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelResults"
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search channels by query
      tags:
      - Channels
  /v1/organizations/{org_id}/channels/{id}:
    delete:
      description: Delete a channel by its ID and all its messages
      operationId: DeleteChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a channel
      tags:
      - Channels
    get:
      description: Retrieve a channel by its ID
      operationId: GetChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a channel by ID
      tags:
      - Channels
    put:
      description: Update a channel by its ID
      operationId: UpdateChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelWriteDto"
        description: Channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update a channel
      tags:
      - Channels
      x-codegen-request-body-name: channel
  /v1/organizations/{org_id}/completions:
    post:
      description: Create a new chat-completion for a specific channel
      operationId: CreateChatCompletion
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequestDto"
        description: Chat Completion Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIgencyMessage"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a chat-completion
      tags:
      - ChatCompletions
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/completions/cancel/{channel_id}:
    post:
      description: Cancel an ongoing chat-completion for a specific channel
      operationId: CancelChatCompletion
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Cancel a chat-completion
      tags:
      - ChatCompletions
  /v1/organizations/{org_id}/completions/stream:
    post:
      description: Create a new streaming chat-completion for a specific channel
      operationId: CreateChatCompletionStreaming
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequestDto"
        description: Chat Completion Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIgencyMessage"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a streaming chat-completion
      tags:
      - ChatCompletions
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/connection-tokens/{channel_id}:
    post:
      description: Create a connection token for Server-Sent Events (SSE) subscription
      operationId: CreateConnectionTokenHandler
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionTokenResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: invalid channel ID
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: unauthorized access
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: internal error
      security:
      - ApiKey: []
      summary: Create a connection token for SSE
      tags:
      - ConnectionTokens
  /v1/organizations/{org_id}/embeddings/text:
    post:
      description: Get the embeddings for the texts
      operationId: EmbedText
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextEmbeddingRequestDto"
        description: Text Embedding Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextEmbedding"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Service Unavailable
      security:
      - ApiKey: []
      summary: Get the embeddings for the texts
      tags:
      - Embeddings
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/execution-logs/chat-completion-costs:
    post:
      description: Track chat completion costs to execution log
      operationId: CreateChatCompletionCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionCostTrackingRequest"
        description: Chat completion cost tracking request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostTrackingResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Track chat completion costs
      tags:
      - ExecutionLogs
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/execution-logs/costs:
    get:
      description: "Get the total costs of execution logs by user, org, and date range."
      operationId: GetExecutionLogsCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: User ID or me
        in: query
        name: user_id
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionLogCosts"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get execution logs costs
      tags:
      - ExecutionLogs
  /v1/organizations/{org_id}/execution-logs/document-conversion-costs:
    post:
      description: Track document conversion costs to execution log
      operationId: CreateDocumentConversionCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentConversionCostTrackingRequest"
        description: Document conversion cost tracking request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostTrackingResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Track document conversion costs
      tags:
      - ExecutionLogs
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/execution-logs/file-upload-costs:
    post:
      description: Track file upload costs to execution log
      operationId: CreateFileUploadCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileUploadCostTrackingRequest"
        description: File upload cost tracking request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostTrackingResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Track file upload costs
      tags:
      - ExecutionLogs
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/execution-logs/search:
    get:
      description: "Search for execution logs by user, org, API key, and date range.\
        \ leave any field empty to no limit by that field."
      operationId: SearchExecutionLogs
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: User ID or me
        in: query
        name: user_id
        schema:
          type: string
      - description: Execution log type
        in: query
        name: exec_type
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionLogResults"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search execution logs
      tags:
      - ExecutionLogs
  /v1/organizations/{org_id}/function-calls:
    get:
      description: Returns a list of function calls
      operationId: GetFunctionCalls
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FunctionCall"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
      security:
      - ApiKey: []
      summary: List accessible function calls
      tags:
      - FunctionCalls
  /v1/organizations/{org_id}/function-calls/{ref}:
    get:
      description: Returns the definition of a function call
      operationId: GetFunctionCall
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Function call name or ID
        in: path
        name: ref
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionCall"
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
      security:
      - ApiKey: []
      summary: Get function call definition
      tags:
      - FunctionCalls
    post:
      description: Executes a specified function call with provided arguments
      operationId: ExecuteFunctionCall
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Function call name or ID
        in: path
        name: ref
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Function call arguments
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionCallResults"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Execute a function call
      tags:
      - FunctionCalls
      x-codegen-request-body-name: arguments
  /v1/organizations/{org_id}/images:
    get:
      description: Retrieve a result set of images by ownership and organization
      operationId: ListImages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyImageResults"
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List images
      tags:
      - Images
    post:
      description: Generates a number of images using a model and service
      operationId: CreateImages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageGenerationRequestDto"
        description: Image Generation Request DTO
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIgencyImage"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Generates a number of images
      tags:
      - Images
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/images/cost:
    post:
      description: Estimate the total costs for an image generation request before
        generating the images.
      operationId: CreateImagesCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EstimateImageGenerationCostRequestDto"
        description: Estimate Image Generation Cost Request DTO
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostEstimation"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get the total costs of an image generation request.
      tags:
      - Images
      x-codegen-request-body-name: request
  /v1/organizations/{org_id}/images/{id}:
    delete:
      description: Delete an image by its ID
      operationId: DeleteImage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Image ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyImage"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an image
      tags:
      - Images
  /v1/organizations/{org_id}/images/{image_id}:
    get:
      description: Get an image by its ID
      operationId: GetImage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Image ID
        in: path
        name: image_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyImage"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an image
      tags:
      - Images
  /v1/organizations/{org_id}/messages:
    post:
      description: Create a new message with the provided details
      operationId: CreateMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIgencyMessageWriteDto"
        description: Message
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessage"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new message
      tags:
      - Messages
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/messages/channel/{channel_id}:
    get:
      description: Retrieve all messages for a specific channel
      operationId: GetChannelMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIgencyMessage"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get messages for a channel
      tags:
      - Messages
  /v1/organizations/{org_id}/messages/search:
    get:
      description: "Search for messages based on content, sender ID, and date range"
      operationId: SearchMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Search by content
        in: query
        name: content
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit results
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessageResults"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search messages
      tags:
      - Messages
  /v1/organizations/{org_id}/messages/{id}:
    delete:
      description: Delete a message by its ID
      operationId: DeleteMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Delete related message
        in: query
        name: cascade
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AIgencyMessage"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a message
      tags:
      - Messages
    get:
      description: Retrieve a message by its ID
      operationId: GetMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessage"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a message by ID
      tags:
      - Messages
    put:
      description: Update a message by its ID
      operationId: UpdateMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AIgencyMessageWriteDto"
        description: Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIgencyMessage"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update a message
      tags:
      - Messages
      x-codegen-request-body-name: message
  /v1/organizations/{org_id}/missions:
    get:
      description: List all missions of an organization and owned by the current user
      operationId: ListMissionsByOrg
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Offset the number of missions returned
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit the number of missions returned
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissionResults"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List all missions of an organization and owned by the current user
      tags:
      - Missions
  /v1/organizations/{org_id}/missions/executor/{mission_executor_id}:
    get:
      description: List all missions by a a executorID (Executing Agent)
      operationId: ListMissionsByExecutorID
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Executor Agent ID
        in: path
        name: mission_executor_id
        required: true
        schema:
          type: string
      - description: Offset the number of missions returned
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit the number of missions returned
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissionResults"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List all missions by a executorID (Executing Agent)
      tags:
      - Missions
  /v1/organizations/{org_id}/missions/{mission_executor_id}:
    post:
      description: Create a new mission
      operationId: CreateMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID to run the mission with
        in: path
        name: mission_executor_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MissionWriteDto"
        description: Mission object that needs to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mission"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new mission
      tags:
      - Missions
      x-codegen-request-body-name: mission
  /v1/organizations/{org_id}/missions/{mission_id}:
    delete:
      description: Delete a mission
      operationId: DeleteMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a mission
      tags:
      - Missions
    get:
      description: Get a mission
      operationId: GetMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mission"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a mission
      tags:
      - Missions
  /v1/organizations/{org_id}/missions/{mission_id}/cancel:
    post:
      description: Cancel a mission
      operationId: CancelMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Cancel a mission
      tags:
      - Missions
  /v1/organizations/{org_id}/prompts:
    get:
      description: List prompts for an organization
      operationId: ListPrompts
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Prompt"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List prompts
      tags:
      - Prompts
    post:
      description: Create a new prompt
      operationId: CreatePrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptWriteDto"
        description: Prompt object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new prompt
      tags:
      - Prompts
      x-codegen-request-body-name: prompt
  /v1/organizations/{org_id}/prompts/render:
    post:
      description: Renders a prompt by resolving references and replacing variables
        in the prompt content.
      operationId: RenderPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptRenderDto"
        description: Prompt Render DTO
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenderedPrompt"
          description: Rendered prompt content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Invalid payload or prompt ID
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Prompt not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal server error
      summary: Render Prompt
      tags:
      - Prompts
      x-codegen-request-body-name: renderDto
  /v1/organizations/{org_id}/prompts/{prompt_id}:
    delete:
      description: Delete an existing prompt
      operationId: DeletePrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a prompt
      tags:
      - Prompts
    get:
      description: Get details of a specific prompt
      operationId: GetPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a specific prompt
      tags:
      - Prompts
    put:
      description: Update details of an existing prompt
      operationId: UpdatePrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptWriteDto"
        description: Updated Prompt object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update a prompt
      tags:
      - Prompts
      x-codegen-request-body-name: prompt
  /v1/organizations/{org_id}/tools:
    get:
      description: Returns a list of tools
      operationId: GetTools
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Tool"
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
          description: Forbidden
      security:
      - ApiKey: []
      summary: List accessible tools
      tags:
      - Tools
components:
  schemas:
    AIModel:
      example:
        internal_id: internal_id
        owner_id: owner_id
        model_release_date: 2
        abilities_v2:
        - type: type
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - type: type
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        created_at: 1
        description: description
        model_id: model_id
        documentation_url: documentation_url
        accepted_file_mimetypes:
        - accepted_file_mimetypes
        - accepted_file_mimetypes
        i18n:
          key:
            model_category: model_category
            name: name
            description: description
        abilities:
        - type: text
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - type: text
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        lifecycle: lifecycle
        features:
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        service_host_locations:
        - ""
        - ""
        owner_organization_id: owner_organization_id
        updated_at: 4
        model_category: model_category
        service_id: service_id
        is_public: true
        name: name
        updated_by: updated_by
        parameter_definitions: "{}"
        id: id
        parameters: "{}"
      properties:
        abilities:
          items:
            $ref: "#/components/schemas/Ability"
          type: array
        abilities_v2:
          items:
            $ref: "#/components/schemas/AbilityV2"
          type: array
        accepted_file_mimetypes:
          items:
            type: string
          type: array
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        documentation_url:
          type: string
        features:
          items:
            $ref: "#/components/schemas/AIModelFeature"
          type: array
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AIModelI18n"
          type: object
        id:
          maxLength: 64
          minLength: 1
          type: string
        internal_id:
          type: string
        is_public:
          type: boolean
        lifecycle:
          type: string
        model_category:
          maxLength: 255
          type: string
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        model_release_date:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameter_definitions:
          properties: {}
          type: object
        parameters:
          properties: {}
          type: object
        service_host_locations:
          items:
            $ref: "#/components/schemas/HostingLocation"
          type: array
        service_id:
          maxLength: 64
          minLength: 1
          type: string
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
      required:
      - id
      - model_id
      - name
      - owner_id
      - owner_organization_id
      - service_id
      type: object
    AIModelCapability:
      enum:
      - ""
      - function-calling
      - function-calling_streaming
      - text-to-embedding
      - text-to-text
      - text-to-text_streaming
      - text-to-image
      - text-to-speech
      - text-to-speech_streaming
      - text-to-music
      - text-to-music_streaming
      - text-to-video
      - text-to-video_streaming
      - speech-to-embedding
      - speech-to-text
      - speech-to-text_streaming
      - image-to-embedding
      - image-to-text
      - video-to-embedding
      - video-to-text
      - video-to-text_streaming
      type: string
      x-enum-varnames:
      - AIModelCapabilityNil
      - AIModelCapabilityFunctionCalling
      - AIModelCapabilityFunctionCallingStreaming
      - AIModelCapabilityTextToEmbedding
      - AIModelCapabilityTextToText
      - AIModelCapabilityTextToTextStreaming
      - AIModelCapabilityTextToImage
      - AIModelCapabilityTextToSpeech
      - AIModelCapabilityTextToSpeechStreaming
      - AIModelCapabilityTextToMusic
      - AIModelCapabilityTextToMusicStreaming
      - AIModelCapabilityTextToVideo
      - AIModelCapabilityTextToVideoStreaming
      - AIModelCapabilitySpeechToEmbedding
      - AIModelCapabilitySpeechToText
      - AIModelCapabilitySpeechToTextStreaming
      - AIModelCapabilityImageToEmbedding
      - AIModelCapabilityImageToText
      - AIModelCapabilityVideoToEmbedding
      - AIModelCapabilityVideoToText
      - AIModelCapabilityVideoToTextStreaming
    AIModelConstraint:
      example:
        unit: tokens
        min: 6
        max: 0
        direction: input
      properties:
        direction:
          $ref: "#/components/schemas/AIModelConstraintDirection"
        max:
          type: integer
        min:
          type: integer
        unit:
          $ref: "#/components/schemas/AIModelMinMaxUnit"
      type: object
    AIModelConstraintDirection:
      enum:
      - input
      - output
      type: string
      x-enum-varnames:
      - AIModelConstraintDirectionInput
      - AIModelConstraintDirectionOutput
    AIModelCostUnit:
      enum:
      - input-tokens-per-million
      - output-tokens-per-million
      - input-characters-per-million
      - image-input-file
      - audio-input-per-second
      - video-input-per-second
      - image-generation-per-image
      - image-generation-per-pixel
      - image-generation-per-credit
      - audio-generation-per-second
      - video-generation-per-second
      - per-function-call
      - per-file-upload
      - conversion-per-page
      type: string
      x-enum-varnames:
      - AIModelCostUnitInputPerMillionTokens
      - AIModelCostUnitOutputPerMillionTokens
      - AIModelCostUnitInputPerMillionCharacters
      - AIModelCostUnitImageInputPerFile
      - AIModelCostUnitAudioInputPerSecond
      - AIModelCostUnitVideoInputPerSecond
      - AIModelCostUnitImageGenerationPerImage
      - AIModelCostUnitImageGenerationPerPixel
      - AIModelCostUnitImageGenerationPerCredit
      - AIModelCostUnitAudioGenerationPerSecond
      - AIModelCostUnitVideoGenerationPerSecond
      - AIModelCostUnitPerFunctionCall
      - AIModelCostUnitPerFileUpload
      - AIModelCostUnitConversionPerPage
    AIModelFeature:
      example:
        capability: ""
        cost_items:
        - resulting_cost_in_euro: 9.301444243932576
          used_units: 3.616076749251911
          description: description
          cost_per_unit_in_euro: 7.061401241503109
          batch_cost_factor: 2.3021358869347655
          cost_unit: null
        - resulting_cost_in_euro: 9.301444243932576
          used_units: 3.616076749251911
          description: description
          cost_per_unit_in_euro: 7.061401241503109
          batch_cost_factor: 2.3021358869347655
          cost_unit: null
        cost_item_templates:
        - description: description
          cost_per_unit_in_euro: 5.637376656633329
          batch_cost_factor: 5.962133916683182
          cost_unit: input-tokens-per-million
        - description: description
          cost_per_unit_in_euro: 5.637376656633329
          batch_cost_factor: 5.962133916683182
          cost_unit: input-tokens-per-million
        constraints:
        - unit: tokens
          min: 6
          max: 0
          direction: input
        - unit: tokens
          min: 6
          max: 0
          direction: input
      properties:
        capability:
          $ref: "#/components/schemas/AIModelCapability"
        constraints:
          items:
            $ref: "#/components/schemas/AIModelConstraint"
          type: array
        cost_item_templates:
          items:
            $ref: "#/components/schemas/ExecutionCostTemplate"
          type: array
        cost_items:
          items:
            $ref: "#/components/schemas/ExecutionUsageCost"
          type: array
      type: object
    AIModelI18n:
      example:
        model_category: model_category
        name: name
        description: description
      properties:
        description:
          maxLength: 1024
          type: string
        model_category:
          maxLength: 255
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    AIModelMinMaxUnit:
      enum:
      - tokens
      - characters
      - files
      - seconds
      - images
      - pixels
      - megabytes
      type: string
      x-enum-varnames:
      - AIModelMinMaxUnitTokens
      - AIModelMinMaxUnitCharacters
      - AIModelMinMaxUnitFiles
      - AIModelMinMaxUnitSeconds
      - AIModelMinMaxUnitImages
      - AIModelMinMaxUnitPixels
      - AIModelMinMaxUnitFilesizeMegabytes
    AIModelServiceI18n:
      example:
        name: name
        description: description
      properties:
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    AIModelServiceObject:
      example:
        internal_id: internal_id
        owner_id: owner_id
        created_at: 6
        description: description
        i18n:
          key:
            name: name
            description: description
        owner_organization_id: owner_organization_id
        hosting_locations:
          key: ""
        updated_at: 1
        cost_multiplier: 0.8008281904610115
        is_public: true
        name: name
        updated_by: updated_by
        id: id
        service_impl: "{}"
      properties:
        cost_multiplier:
          type: number
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        hosting_locations:
          additionalProperties:
            $ref: "#/components/schemas/HostingLocation"
          type: object
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AIModelServiceI18n"
          type: object
        id:
          maxLength: 64
          minLength: 1
          type: string
        internal_id:
          type: string
        is_public:
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        service_impl:
          allOf:
          - $ref: "#/components/schemas/AiServiceId"
          type: object
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
      required:
      - id
      - name
      - owner_id
      - owner_organization_id
      - service_impl
      type: object
    AIModelServiceWithModels:
      example:
        models:
        - internal_id: internal_id
          owner_id: owner_id
          model_release_date: 2
          abilities_v2:
          - type: type
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - type: type
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          created_at: 1
          description: description
          model_id: model_id
          documentation_url: documentation_url
          accepted_file_mimetypes:
          - accepted_file_mimetypes
          - accepted_file_mimetypes
          i18n:
            key:
              model_category: model_category
              name: name
              description: description
          abilities:
          - type: text
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - type: text
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          lifecycle: lifecycle
          features:
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          service_host_locations:
          - ""
          - ""
          owner_organization_id: owner_organization_id
          updated_at: 4
          model_category: model_category
          service_id: service_id
          is_public: true
          name: name
          updated_by: updated_by
          parameter_definitions: "{}"
          id: id
          parameters: "{}"
        - internal_id: internal_id
          owner_id: owner_id
          model_release_date: 2
          abilities_v2:
          - type: type
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - type: type
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          created_at: 1
          description: description
          model_id: model_id
          documentation_url: documentation_url
          accepted_file_mimetypes:
          - accepted_file_mimetypes
          - accepted_file_mimetypes
          i18n:
            key:
              model_category: model_category
              name: name
              description: description
          abilities:
          - type: text
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - type: text
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          lifecycle: lifecycle
          features:
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          service_host_locations:
          - ""
          - ""
          owner_organization_id: owner_organization_id
          updated_at: 4
          model_category: model_category
          service_id: service_id
          is_public: true
          name: name
          updated_by: updated_by
          parameter_definitions: "{}"
          id: id
          parameters: "{}"
        service:
          internal_id: internal_id
          owner_id: owner_id
          created_at: 6
          description: description
          i18n:
            key:
              name: name
              description: description
          owner_organization_id: owner_organization_id
          hosting_locations:
            key: ""
          updated_at: 1
          cost_multiplier: 0.8008281904610115
          is_public: true
          name: name
          updated_by: updated_by
          id: id
          service_impl: "{}"
      properties:
        models:
          items:
            $ref: "#/components/schemas/AIModel"
          type: array
        service:
          $ref: "#/components/schemas/AIModelServiceObject"
      type: object
    AIModelServiceWriteDto:
      example:
        hosting_locations:
          key: ""
        internal_id: internal_id
        cost_multiplier: 0.8008281904610115
        is_public: true
        name: name
        description: description
        service_impl: "{}"
        i18n:
          key:
            name: name
            description: description
      properties:
        cost_multiplier:
          format: double
          type: number
        description:
          maxLength: 1024
          type: string
        hosting_locations:
          additionalProperties:
            $ref: "#/components/schemas/HostingLocation"
          type: object
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AIModelServiceI18n"
          type: object
        internal_id:
          type: string
        is_public:
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          type: string
        service_impl:
          allOf:
          - $ref: "#/components/schemas/AiServiceId"
          type: object
      required:
      - name
      - service_impl
      type: object
    AIModelWriteDto:
      example:
        internal_id: internal_id
        model_release_date: 0
        description: description
        model_id: model_id
        documentation_url: documentation_url
        accepted_file_mimetypes:
        - accepted_file_mimetypes
        - accepted_file_mimetypes
        i18n:
          key:
            model_category: model_category
            name: name
            description: description
        lifecycle: lifecycle
        features:
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        service_host_locations:
        - ""
        - ""
        model_category: model_category
        service_id: service_id
        is_public: true
        name: name
        parameter_definitions: "{}"
        parameters:
          key: "{}"
      properties:
        accepted_file_mimetypes:
          items:
            type: string
          type: array
        description:
          maxLength: 1024
          type: string
        documentation_url:
          type: string
        features:
          items:
            $ref: "#/components/schemas/AIModelFeature"
          type: array
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AIModelI18n"
          type: object
        internal_id:
          type: string
        is_public:
          type: boolean
        lifecycle:
          type: string
        model_category:
          maxLength: 255
          type: string
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        model_release_date:
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        parameter_definitions:
          properties: {}
          type: object
        parameters:
          additionalProperties:
            type: object
          type: object
        service_host_locations:
          items:
            $ref: "#/components/schemas/HostingLocation"
          type: array
        service_id:
          maxLength: 64
          minLength: 1
          type: string
      type: object
    AIgencyFunctionCall:
      example:
        function_name: function_name
        arguments: "{}"
        id: id
        tool_function_id: tool_function_id
      properties:
        arguments:
          properties: {}
          type: object
        function_name:
          maxLength: 64
          minLength: 1
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        tool_function_id:
          type: string
      required:
      - function_name
      - id
      type: object
    AIgencyFunctionResponse:
      example:
        result: result
        function_name: function_name
        is_error: true
        id: id
        result_meta_data: "{}"
        tool_function_id: tool_function_id
      properties:
        function_name:
          maxLength: 64
          minLength: 1
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        is_error:
          type: boolean
        result:
          type: string
        result_meta_data:
          properties: {}
          type: object
        tool_function_id:
          type: string
      required:
      - function_name
      - id
      - result
      type: object
    AIgencyFunctionStatusUpdate:
      example:
        id: id
        updates:
        - meta_data: "{}"
          message: message
        - meta_data: "{}"
          message: message
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
        updates:
          items:
            $ref: "#/components/schemas/AIgencyFunctionStatusUpdateData"
          type: array
      required:
      - id
      - updates
      type: object
    AIgencyFunctionStatusUpdateData:
      example:
        meta_data: "{}"
        message: message
      properties:
        message:
          type: string
        meta_data:
          properties: {}
          type: object
      required:
      - message
      type: object
    AIgencyImage:
      example:
        agent_id: agent_id
        owner_id: owner_id
        created_at: 0
        message: message
        ai_model_id: ai_model_id
        ai_service_id: ai_service_id
        url: url
        execution_id: execution_id
        owner_organization_id: owner_organization_id
        mime_type: mime_type
        id: id
        thumbnails:
        - width: 1
          url: url
          height: 1
        - width: 1
          url: url
          height: 1
        parameters: "{}"
      properties:
        agent_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        created_at:
          format: int64
          type: integer
        execution_id:
          maxLength: 64
          minLength: 1
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        message:
          type: string
        mime_type:
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        thumbnails:
          items:
            $ref: "#/components/schemas/AIgencyThumbnail"
          type: array
        url:
          type: string
      required:
      - agent_id
      - ai_model_id
      - ai_service_id
      - created_at
      - execution_id
      - id
      - message
      - mime_type
      - owner_id
      - owner_organization_id
      - url
      type: object
    AIgencyImageResults:
      example:
        results:
        - agent_id: agent_id
          owner_id: owner_id
          created_at: 0
          message: message
          ai_model_id: ai_model_id
          ai_service_id: ai_service_id
          url: url
          execution_id: execution_id
          owner_organization_id: owner_organization_id
          mime_type: mime_type
          id: id
          thumbnails:
          - width: 1
            url: url
            height: 1
          - width: 1
            url: url
            height: 1
          parameters: "{}"
        - agent_id: agent_id
          owner_id: owner_id
          created_at: 0
          message: message
          ai_model_id: ai_model_id
          ai_service_id: ai_service_id
          url: url
          execution_id: execution_id
          owner_organization_id: owner_organization_id
          mime_type: mime_type
          id: id
          thumbnails:
          - width: 1
            url: url
            height: 1
          - width: 1
            url: url
            height: 1
          parameters: "{}"
        total_results: 5
      properties:
        results:
          items:
            $ref: "#/components/schemas/AIgencyImage"
          type: array
        total_results:
          format: int64
          type: integer
      type: object
    AIgencyMessage:
      example:
        attachments:
          files:
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
        reference_id: reference_id
        mission_id: mission_id
        created_at: 6
        sender_name: sender_name
        error:
          status_code: 5
          original_status_code: 1
          error_code: ""
          message: message
        type: "{}"
        ai_service_id: ai_service_id
        content:
          data:
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          full_text: full_text
        sender_id: sender_id
        execution_id: execution_id
        token_count: 5
        finish_reason: ""
        updated_at: 2
        sender_conversation_role: "{}"
        meta_data: "{}"
        id: id
        state: state
        channel_name: channel_name
        response_to_id: response_to_id
        created_for_feature:
          capability: ""
          cost_items:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.637376656633329
            batch_cost_factor: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        ai_model_id: ai_model_id
        token_direction: "{}"
        owner_organization_id: owner_organization_id
        channel_id: channel_id
        parameters: "{}"
      properties:
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        attachments:
          $ref: "#/components/schemas/AIgencyMessageFileList"
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        channel_name:
          maxLength: 255
          minLength: 1
          type: string
        content:
          $ref: "#/components/schemas/AIgencyMessageContentList"
        created_at:
          format: int64
          type: integer
        created_for_feature:
          $ref: "#/components/schemas/AIModelFeature"
        error:
          $ref: "#/components/schemas/AiServiceError"
        execution_id:
          maxLength: 64
          minLength: 1
          type: string
        finish_reason:
          $ref: "#/components/schemas/FinishReason"
        id:
          maxLength: 64
          minLength: 1
          type: string
        meta_data:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        reference_id:
          maxLength: 64
          type: string
        response_to_id:
          maxLength: 64
          type: string
        sender_conversation_role:
          allOf:
          - $ref: "#/components/schemas/ConversationRole"
          type: object
        sender_id:
          maxLength: 64
          minLength: 1
          type: string
        sender_name:
          maxLength: 255
          minLength: 1
          type: string
        state:
          type: string
        token_count:
          type: integer
        token_direction:
          allOf:
          - $ref: "#/components/schemas/TokenDirection"
          type: object
        type:
          allOf:
          - $ref: "#/components/schemas/AIgencyMessageType"
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - ai_model_id
      - ai_service_id
      - attachments
      - channel_id
      - channel_name
      - content
      - created_at
      - id
      - owner_organization_id
      - sender_conversation_role
      - sender_id
      - sender_name
      - token_direction
      - type
      - updated_at
      type: object
    AIgencyMessageContent:
      example:
        file: "{}"
        function_call:
          function_name: function_name
          arguments: "{}"
          id: id
          tool_function_id: tool_function_id
        function_responses:
          result: result
          function_name: function_name
          is_error: true
          id: id
          result_meta_data: "{}"
          tool_function_id: tool_function_id
        text: text
        type: text
        thinking:
          is_redacted: true
          signature: signature
          content: content
        function_status_update:
          id: id
          updates:
          - meta_data: "{}"
            message: message
          - meta_data: "{}"
            message: message
      properties:
        file:
          allOf:
          - $ref: "#/components/schemas/AIgencyMessageFile"
          description: Currently unused in favor of attachment list
          type: object
        function_call:
          $ref: "#/components/schemas/AIgencyFunctionCall"
        function_responses:
          $ref: "#/components/schemas/AIgencyFunctionResponse"
        function_status_update:
          $ref: "#/components/schemas/AIgencyFunctionStatusUpdate"
        text:
          type: string
        thinking:
          $ref: "#/components/schemas/AIgencyThinking"
        type:
          $ref: "#/components/schemas/AIgencyMessageContentType"
      required:
      - type
      type: object
    AIgencyMessageContentList:
      example:
        data:
        - file: "{}"
          function_call:
            function_name: function_name
            arguments: "{}"
            id: id
            tool_function_id: tool_function_id
          function_responses:
            result: result
            function_name: function_name
            is_error: true
            id: id
            result_meta_data: "{}"
            tool_function_id: tool_function_id
          text: text
          type: text
          thinking:
            is_redacted: true
            signature: signature
            content: content
          function_status_update:
            id: id
            updates:
            - meta_data: "{}"
              message: message
            - meta_data: "{}"
              message: message
        - file: "{}"
          function_call:
            function_name: function_name
            arguments: "{}"
            id: id
            tool_function_id: tool_function_id
          function_responses:
            result: result
            function_name: function_name
            is_error: true
            id: id
            result_meta_data: "{}"
            tool_function_id: tool_function_id
          text: text
          type: text
          thinking:
            is_redacted: true
            signature: signature
            content: content
          function_status_update:
            id: id
            updates:
            - meta_data: "{}"
              message: message
            - meta_data: "{}"
              message: message
        full_text: full_text
      properties:
        data:
          items:
            $ref: "#/components/schemas/AIgencyMessageContent"
          type: array
        full_text:
          type: string
      required:
      - data
      - full_text
      type: object
    AIgencyMessageContentType:
      enum:
      - text
      - file
      - function_call
      - function_response
      - function_status_update
      - thinking
      type: string
      x-enum-comments:
        AIgencyMessageContentTypeFile: Currently unused in favor of attachment list
      x-enum-varnames:
      - AIgencyMessageContentTypeText
      - AIgencyMessageContentTypeFile
      - AIgencyMessageContentTypeFunctionCall
      - AIgencyMessageContentTypeFunctionResponse
      - AIgencyMessageContentTypeFunctionStatusUpdate
      - AIgencyMessageContentTypeThinking
    AIgencyMessageFile:
      example:
        embedded_content: embedded_content
        mime_type: mime_type
        file_name: file_name
        meta_data: "{}"
        id: id
        file_size: 0
        url: url
      properties:
        embedded_content:
          type: string
        file_name:
          type: string
        file_size:
          type: integer
        id:
          type: string
        meta_data:
          properties: {}
          type: object
        mime_type:
          type: string
        url:
          type: string
      required:
      - embedded_content
      - file_name
      - file_size
      - id
      - meta_data
      - mime_type
      - url
      type: object
    AIgencyMessageFileList:
      example:
        files:
        - embedded_content: embedded_content
          mime_type: mime_type
          file_name: file_name
          meta_data: "{}"
          id: id
          file_size: 0
          url: url
        - embedded_content: embedded_content
          mime_type: mime_type
          file_name: file_name
          meta_data: "{}"
          id: id
          file_size: 0
          url: url
      properties:
        files:
          items:
            $ref: "#/components/schemas/AIgencyMessageFile"
          type: array
      required:
      - files
      type: object
    AIgencyMessageList:
      type: object
    AIgencyMessageResults:
      example:
        results:
        - attachments:
            files:
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
          reference_id: reference_id
          mission_id: mission_id
          created_at: 6
          sender_name: sender_name
          error:
            status_code: 5
            original_status_code: 1
            error_code: ""
            message: message
          type: "{}"
          ai_service_id: ai_service_id
          content:
            data:
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            full_text: full_text
          sender_id: sender_id
          execution_id: execution_id
          token_count: 5
          finish_reason: ""
          updated_at: 2
          sender_conversation_role: "{}"
          meta_data: "{}"
          id: id
          state: state
          channel_name: channel_name
          response_to_id: response_to_id
          created_for_feature:
            capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          ai_model_id: ai_model_id
          token_direction: "{}"
          owner_organization_id: owner_organization_id
          channel_id: channel_id
          parameters: "{}"
        - attachments:
            files:
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
          reference_id: reference_id
          mission_id: mission_id
          created_at: 6
          sender_name: sender_name
          error:
            status_code: 5
            original_status_code: 1
            error_code: ""
            message: message
          type: "{}"
          ai_service_id: ai_service_id
          content:
            data:
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            full_text: full_text
          sender_id: sender_id
          execution_id: execution_id
          token_count: 5
          finish_reason: ""
          updated_at: 2
          sender_conversation_role: "{}"
          meta_data: "{}"
          id: id
          state: state
          channel_name: channel_name
          response_to_id: response_to_id
          created_for_feature:
            capability: ""
            cost_items:
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            - resulting_cost_in_euro: 9.301444243932576
              used_units: 3.616076749251911
              description: description
              cost_per_unit_in_euro: 7.061401241503109
              batch_cost_factor: 2.3021358869347655
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.637376656633329
              batch_cost_factor: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6
              max: 0
              direction: input
            - unit: tokens
              min: 6
              max: 0
              direction: input
          ai_model_id: ai_model_id
          token_direction: "{}"
          owner_organization_id: owner_organization_id
          channel_id: channel_id
          parameters: "{}"
        total_results: 0
      properties:
        results:
          items:
            $ref: "#/components/schemas/AIgencyMessage"
          type: array
        total_results:
          format: int64
          type: integer
      required:
      - results
      - total_results
      type: object
    AIgencyMessageType:
      enum:
      - message
      - stateUpdate
      - delta
      - error
      type: string
      x-enum-varnames:
      - AIgencyMessageTypeMessage
      - AIgencyMessageTypeStateUpdate
      - AIgencyMessageTypeDelta
      - AIgencyMessageTypeError
    AIgencyMessageWriteDto:
      example:
        channel_name: channel_name
        response_to_id: response_to_id
        attachments:
          files:
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
        reference_id: reference_id
        mission_id: mission_id
        sender_name: sender_name
        type: "{}"
        ai_model_id: ai_model_id
        ai_service_id: ai_service_id
        content:
          data:
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          full_text: full_text
        sender_conversation_role: "{}"
        meta_data: "{}"
        channel_id: channel_id
        parameters: "{}"
      properties:
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        attachments:
          $ref: "#/components/schemas/AIgencyMessageFileList"
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        channel_name:
          maxLength: 255
          minLength: 1
          type: string
        content:
          $ref: "#/components/schemas/AIgencyMessageContentList"
        meta_data:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        reference_id:
          maxLength: 64
          minLength: 1
          type: string
        response_to_id:
          maxLength: 64
          minLength: 1
          type: string
        sender_conversation_role:
          allOf:
          - $ref: "#/components/schemas/ConversationRole"
          type: object
        sender_name:
          maxLength: 255
          minLength: 1
          type: string
        type:
          allOf:
          - $ref: "#/components/schemas/AIgencyMessageType"
          type: object
      required:
      - ai_model_id
      - ai_service_id
      - channel_id
      - channel_name
      - mission_id
      - sender_conversation_role
      - sender_name
      - type
      type: object
    AIgencyThinking:
      example:
        is_redacted: true
        signature: signature
        content: content
      properties:
        content:
          type: string
        is_redacted:
          type: boolean
        signature:
          type: string
      type: object
    AIgencyThumbnail:
      example:
        width: 1
        url: url
        height: 1
      properties:
        height:
          minimum: 1
          type: integer
        url:
          type: string
        width:
          minimum: 1
          type: integer
      required:
      - url
      type: object
    Ability:
      example:
        type: text
        constraints:
        - unit: tokens
          min: 6
          max: 0
          direction: input
        - unit: tokens
          min: 6
          max: 0
          direction: input
      properties:
        constraints:
          items:
            $ref: "#/components/schemas/AIModelConstraint"
          type: array
        type:
          $ref: "#/components/schemas/AbilityType"
      type: object
    AbilityType:
      enum:
      - text
      - chat
      - embedding
      - image
      - tool-function
      type: string
      x-enum-varnames:
      - AbilityTypeText
      - AbilityTypeChat
      - AbilityTypeEmbedding
      - AbilityTypeImage
      - AbilityTypeToolFunction
    AbilityV2:
      example:
        type: type
        constraints:
        - unit: tokens
          min: 6
          max: 0
          direction: input
        - unit: tokens
          min: 6
          max: 0
          direction: input
      properties:
        constraints:
          items:
            $ref: "#/components/schemas/AIModelConstraint"
          type: array
        type:
          type: string
      type: object
    Agent:
      example:
        system_messages:
        - system_messages
        - system_messages
        owner_id: owner_id
        team_ids:
        - team_ids
        - team_ids
        assigned_tools:
        - assigned_tools
        - assigned_tools
        created_at: 0
        description: description
        type: ""
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        attached_file_ids:
        - attached_file_ids
        - attached_file_ids
        abilities:
        - type: text
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - type: text
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        lifecycle: lifecycle
        updated_at: 1
        model_category: model_category
        use_tools: true
        ignore_incoming_overwrite: true
        meta_data: "{}"
        model_host_location: ""
        id: id
        internal_id: internal_id
        model_release_date: 6
        abilities_v2:
        - type: type
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        - type: type
          constraints:
          - unit: tokens
            min: 6
            max: 0
            direction: input
          - unit: tokens
            min: 6
            max: 0
            direction: input
        model_id: model_id
        i18n:
          key:
            model_category: model_category
            recommended_task: recommended_task
            name: name
            description: description
        owner_organization_id: owner_organization_id
        add_tool_guidelines: true
        avatar_url: avatar_url
        recommended_task: recommended_task
        is_public: true
        name: name
        updated_by: updated_by
        parameters: "{}"
      properties:
        abilities:
          items:
            $ref: "#/components/schemas/Ability"
          type: array
        abilities_v2:
          items:
            $ref: "#/components/schemas/AbilityV2"
          type: array
        add_tool_guidelines:
          type: boolean
        assigned_tools:
          items:
            type: string
          type: array
          uniqueItems: true
        attached_file_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        avatar_url:
          type: string
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AgentI18n"
          type: object
        id:
          maxLength: 64
          minLength: 1
          type: string
        ignore_incoming_overwrite:
          type: boolean
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        internal_id:
          type: string
        is_public:
          type: boolean
        lifecycle:
          type: string
        meta_data:
          properties: {}
          type: object
        model_category:
          maxLength: 255
          type: string
        model_host_location:
          $ref: "#/components/schemas/HostingLocation"
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        model_release_date:
          format: int64
          type: integer
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        recommended_task:
          type: string
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        team_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        type:
          $ref: "#/components/schemas/AgentType"
        updated_at:
          format: int64
          type: integer
        updated_by:
          maxLength: 64
          minLength: 1
          type: string
        use_tools:
          type: boolean
      required:
      - id
      - model_id
      - name
      - owner_id
      - owner_organization_id
      type: object
    AgentI18n:
      example:
        model_category: model_category
        recommended_task: recommended_task
        name: name
        description: description
      properties:
        description:
          maxLength: 1024
          type: string
        model_category:
          maxLength: 255
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        recommended_task:
          maxLength: 255
          type: string
      required:
      - name
      type: object
    AgentType:
      enum:
      - ""
      - basic
      - service
      type: string
      x-enum-varnames:
      - AgentTypeNil
      - AgentTypeBasic
      - AgentTypeService
    AgentWriteDto:
      example:
        internal_id: internal_id
        system_messages:
        - system_messages
        - system_messages
        team_ids:
        - team_ids
        - team_ids
        assigned_tools:
        - assigned_tools
        - assigned_tools
        description: description
        model_id: model_id
        type: ""
        i18n:
          key:
            model_category: model_category
            recommended_task: recommended_task
            name: name
            description: description
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        attached_file_ids:
        - attached_file_ids
        - attached_file_ids
        add_tool_guidelines: true
        avatar_url: avatar_url
        use_tools: true
        ignore_incoming_overwrite: true
        recommended_task: recommended_task
        is_public: true
        meta_data: "{}"
        name: name
        model_host_location: ""
        parameters: "{}"
      properties:
        add_tool_guidelines:
          type: boolean
        assigned_tools:
          items:
            type: string
          type: array
          uniqueItems: true
        attached_file_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        avatar_url:
          type: string
        description:
          maxLength: 1024
          type: string
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/AgentI18n"
          type: object
        ignore_incoming_overwrite:
          type: boolean
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        internal_id:
          type: string
        is_public:
          type: boolean
        meta_data:
          properties: {}
          type: object
        model_host_location:
          $ref: "#/components/schemas/HostingLocation"
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        recommended_task:
          type: string
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        team_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        type:
          $ref: "#/components/schemas/AgentType"
        use_tools:
          type: boolean
      type: object
    AiServiceError:
      example:
        status_code: 5
        original_status_code: 1
        error_code: ""
        message: message
      properties:
        error_code:
          $ref: "#/components/schemas/ApiErrorCode"
        message:
          type: string
        original_status_code:
          type: integer
        status_code:
          type: integer
      required:
      - error_code
      - message
      - original_status_code
      - status_code
      type: object
    AiServiceId:
      enum:
      - anthropic
      - anthropicgooglecloud
      - assemblyai
      - azureai
      - blackforest
      - elevenlabs
      - googlevertexai
      - leonardoai
      - mistralai
      - openai
      - replicate
      - scaleway
      - vaiembed
      type: string
      x-enum-varnames:
      - AiServiceIdAnthropic
      - AiServiceIdAnthropicGcp
      - AiServiceIdAssemblyAI
      - AiServiceIdAzureAI
      - AiServiceIdBlackForest
      - AiServiceIdElevenLabs
      - AiServiceIdGoogleVertexAi
      - AiServiceIdLeonardoAI
      - AiServiceIdMistralAI
      - AiServiceIdOpenAI
      - AiServiceIdReplicate
      - AiServiceIdScaleway
      - AiServiceIdVaiEmbed
    ApiError:
      example:
        code: ""
        error: error
      properties:
        code:
          $ref: "#/components/schemas/ApiErrorCode"
        error:
          type: string
      type: object
    ApiErrorCode:
      enum:
      - ""
      - permission_denied
      - unknown
      - unauthorized
      - invalid_payload
      - invalid_entity
      - invalid_params
      - invalid_date
      - start_date_must_be_before_end_date
      - agent_not_found
      - invalid_agent_id
      - failed_to_create_agent
      - failed_to_create_default_agents
      - failed_to_delete_agent
      - failed_to_get_agent
      - failed_to_update_agent
      - ai_model_not_found
      - invalid_ai_model_id
      - invalid_ai_model_definition
      - failed_to_create_ai_model
      - failed_to_update_ai_model
      - failed_to_delete_ai_model
      - failed_to_fetch_ai_model
      - invalid_ai_model_service_id
      - ai_model_service_not_found
      - failed_to_create_ai_model_service
      - failed_to_update_ai_model_service
      - failed_to_delete_ai_model_service
      - failed_to_fetch_ai_model_service
      - ai_service_bad_request
      - ai_service_content_filter
      - ai_service_authentication
      - ai_service_permission_denied
      - ai_service_request_too_large
      - ai_service_rate_limit
      - ai_service_internal_server_error
      - ai_service_overload
      - ai_service_unprocessable_entity
      - no_audio_file_saved
      - failed_to_create_audio_transcription_context
      - failed_to_create_audio_generation_context
      - failed_to_finalize_audio_stream
      - failed_to_generate_audio
      - channel_not_found
      - invalid_channel_id
      - failed_to_create_channel
      - failed_to_update_channel
      - failed_to_delete_channel
      - failed_to_fetch_channel
      - failed_to_fetch_channels
      - failed_to_fetch_subscribed_channels
      - failed_to_upload_channel_file
      - failed_to_create_chat_context
      - capability_not_available
      - no_messages_found
      - invalid_request_parameters
      - chat_completion_too_many_temporary_files
      - chat_completion_exceeds_total_temporary_file_size
      - chat_completion_exceeds_max_input_tokens
      - chat_completion_exceeds_max_tool_calls
      - chat_completion_in_progress
      - failed_to_create_connection_token
      - failed_to_embed_text
      - failed_to_search_execution_logs
      - invalid_file_id
      - invalid_storage_url
      - file_upload_info_not_found
      - invalid_file_upload_size
      - invalid_file_upload_mime_type
      - processing_checks_failed
      - functioncall_not_found
      - failed_to_generate_image
      - invalid_image_id
      - image_not_found
      - failed_to_delete_image
      - failed_to_get_image
      - failed_to_search_images
      - failed_to_store_images
      - invalid_message_id
      - message_not_found
      - failed_to_update_message
      - failed_to_delete_message
      - failed_to_fetch_message
      - failed_to_search_messages
      - failed_to_create_message
      - failed_to_retrieve_channel_messages
      - failed_to_retrieve_messages_from_list
      - failed_to_form_user_message
      - mission_not_found
      - missions_not_found
      - failed_to_get_mission
      - failed_to_create_mission
      - failed_to_delete_mission
      - invalid_mission_id
      - invalid mission executor ID
      - mission_not_done
      - invalid_executor_id
      - invalid_organization_id
      - organization_cost_budget_not_found
      - failed_to_create_organization_cost_budget
      - failed_to_update_organization_cost_budget
      - failed_to_get_organization_cost_budget
      - insufficient_budget
      - organization_cost_budget_exists
      - invalid_tool_id
      - failed_to_create_temp_api_key
      - invalid_prompt_id
      - prompt_not_found
      - failed_to_get_prompt
      - failed_to_update_prompt
      - failed_to_delete_prompt
      - invalid_prompt_data
      - prompt_already_exists
      - invalid_prompt_version
      - variable_not_found
      - invalid_variable_value
      type: string
      x-enum-varnames:
      - ErrCodeNil
      - ErrCodePermissionDenied
      - ErrCodeUnknown
      - ErrCodeUnauthorized
      - ErrCodeInvalidPayload
      - ErrCodeInvalidEntity
      - ErrCodeInvalidParams
      - ErrCodeInvalidDate
      - ErrCodeStartDateMustBeBeforeEndDate
      - ErrCodeAgentNotFound
      - ErrCodeInvalidAgentID
      - ErrCodeFailedToCreateAgent
      - ErrCodeFailedToCreateDefaultAgents
      - ErrCodeFailedToDeleteAgent
      - ErrCodeFailedToGetAgent
      - ErrCodeFailedToUpdateAgent
      - ErrCodeAIModelNotFound
      - ErrCodeInvalidAIModelID
      - ErrCodeInvalidAIModelDefinition
      - ErrCodeFailedToCreateAIModel
      - ErrCodeFailedToUpdateAIModel
      - ErrCodeFailedToDeleteAIModel
      - ErrCodeFailedToFetchAIModel
      - ErrCodeInvalidAIModelServiceID
      - ErrCodeAIModelServiceNotFound
      - ErrCodeFailedToCreateAIModelService
      - ErrCodeFailedToUpdateAIModelService
      - ErrCodeFailedToDeleteAIModelService
      - ErrCodeFailedToFetchAIModelService
      - ErrCodeAiServiceBadRequest
      - ErrCodeAiServiceContentFilter
      - ErrCodeAiServiceAuthentication
      - ErrCodeAiServicePermissionDenied
      - ErrCodeAiServiceRequestTooLarge
      - ErrCodeAiServiceRateLimit
      - ErrCodeAiServiceInternalServerError
      - ErrCodeAiServiceOverload
      - ErrCodeAiServiceUnprocessableEntity
      - ErrCodeNoAudioFileSaved
      - ErrCodeCreatingAudioTranscriptionContext
      - ErrCodeCreatingAudioGenerationContext
      - ErrCodeFailedToFinalizeAudioStream
      - ErrCodeFailedToGenerateAudio
      - ErrCodeChannelNotFound
      - ErrCodeInvalidChannelID
      - ErrCodeFailedToCreateChannel
      - ErrCodeFailedToUpdateChannel
      - ErrCodeFailedToDeleteChannel
      - ErrCodeFailedToFetchChannel
      - ErrCodeFailedToFetchChannels
      - ErrCodeFailedToFetchSubscribed
      - ErrCodeFailedToUploadChannelFile
      - ErrCodeFailedToCreateChatContext
      - ErrCodeCapabilityNotAvailable
      - ErrCodeNoMessagesFound
      - ErrCodeInvalidRequestParameters
      - ErrCodeChatCompletionTooManyTempFiles
      - ErrCodeChatCompletionExceedsTotalTempFileSize
      - ErrCodeChatCompletionExceedsMaxInputTokens
      - ErrCodeChatCompletionExceedsMaxToolCalls
      - ErrCodeChatCompletionInProgress
      - ErrCodeFailedToCreateConnectionToken
      - ErrCodeFailedToEmbedText
      - ErrCodeFailedToSearchExecutionLogs
      - ErrCodeInvalidFileID
      - ErrCodeInvalidStorageUrl
      - ErrCodeFileUploadInfoNotFound
      - ErrCodeInvalidFileUploadSize
      - ErrCodeInvalidFileUploadMimeType
      - ErrCodeProcessingChecksFailed
      - ErrCodeFunctionCallNotFound
      - ErrCodeFailedToGenerateImage
      - ErrCodeInvalidImageID
      - ErrCodeImageNotFound
      - ErrCodeFailedToDeleteImage
      - ErrCodeFailedToGetImage
      - ErrCodeFailedToSearchImages
      - ErrCodeFailedToStoreImages
      - ErrCodeInvalidMessageID
      - ErrCodeMessageNotFound
      - ErrCodeFailedToUpdateMessage
      - ErrCodeFailedToDeleteMessage
      - ErrCodeFailedToFetchMessage
      - ErrCodeFailedToSearchMessage
      - ErrCodeFailedToCreateMessage
      - ErrCodeFailedToRetrieveChannelMessages
      - ErrCodeFailedToRetrieveMessagesFromList
      - ErrCodeFailedToFormUserMessage
      - ErrCodeMissionNotFound
      - ErrCodeMissionsNotFound
      - ErrCodeFailedToGetMission
      - ErrCodeFailedToCreateMission
      - ErrCodeFailedToDeleteMission
      - ErrCodeInvalidMissionID
      - ErrCodeInvalidMissionExecutorID
      - ErrCodeMissionNotDone
      - ErrCodeInvalidExecutorID
      - ErrCodeInvalidOrgID
      - ErrCodeOrgCostBudgetNotFound
      - ErrCodeFailedToCreateBudget
      - ErrCodeFailedToUpdateBudget
      - ErrCodeFailedToGetOrgCostBudget
      - ErrCodeInsufficientBudget
      - ErrCodeOrgCostBudgetExists
      - ErrCodeInvalidToolID
      - ErrCodeFailedToCreateTempApiKey
      - ErrCodeInvalidPromptID
      - ErrCodePromptNotFound
      - ErrCodeFailedToGetPrompt
      - ErrCodeFailedToUpdatePrompt
      - ErrCodeFailedToDeletePrompt
      - ErrCodeInvalidPromptData
      - ErrCodePromptAlreadyExists
      - ErrCodeInvalidVersion
      - ErrCodeVariableNotFound
      - ErrCodeInvalidVariableValue
    AudioGenerationRequest:
      example:
        agent_id: agent_id
        voice_id: voice_id
        team_ids:
        - team_ids
        - team_ids
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        language: language
        voice_name: voice_name
        message: message
        output_audio_file_format: output_audio_file_format
        with_timestamps: true
        speed: 0.8008281904610115
        stream_audio: true
        dictionary:
          key: dictionary
        user_id: user_id
        org_id: org_id
        message_reference_id: message_reference_id
        id: id
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        channel_id: channel_id
        parameters: "{}"
        username: username
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        channel_id:
          type: string
        dictionary:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        language:
          type: string
        message:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        org_id:
          type: string
        output_audio_file_format:
          type: string
        parameters:
          properties: {}
          type: object
        speed:
          format: double
          type: number
        stream_audio:
          type: boolean
        team_ids:
          items:
            type: string
          type: array
        user_id:
          type: string
        username:
          type: string
        voice_id:
          type: string
        voice_name:
          type: string
        with_timestamps:
          type: boolean
      type: object
    AudioTranscriptionRequest:
      example:
        agent_id: agent_id
        skip_ai_agency_message_generation: true
        team_ids:
        - team_ids
        - team_ids
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        language: language
        trigger_chat_completion: true
        transcription_format: transcription_format
        user_id: user_id
        audio_file:
          embedded_content: embedded_content
          mime_type: mime_type
          file_name: file_name
          meta_data: "{}"
          id: id
          file_size: 0
          url: url
        org_id: org_id
        message_reference_id: message_reference_id
        id: id
        channel_id: channel_id
        parameters: "{}"
        username: username
      properties:
        agent_id:
          type: string
        audio_file:
          $ref: "#/components/schemas/AIgencyMessageFile"
        channel_id:
          type: string
        id:
          type: string
        language:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        org_id:
          type: string
        parameters:
          properties: {}
          type: object
        skip_ai_agency_message_generation:
          type: boolean
        team_ids:
          items:
            type: string
          type: array
        transcription_format:
          type: string
        trigger_chat_completion:
          type: boolean
        user_id:
          type: string
        username:
          type: string
      required:
      - language
      - transcription_format
      type: object
    AuditTrail:
      example:
        messages:
        - channel_name: channel_name
          response_to_id: response_to_id
          attachments:
            files:
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
          reference_id: reference_id
          created_at: 0
          sender_name: sender_name
          error:
            status_code: 5
            original_status_code: 1
            error_code: ""
            message: message
          type: "{}"
          ai_model_id: ai_model_id
          ai_service_id: ai_service_id
          content:
            data:
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            full_text: full_text
          sender_id: sender_id
          token_direction: "{}"
          token_count: 6
          finish_reason: ""
          owner_organization_id: owner_organization_id
          updated_at: 1
          sender_conversation_role: "{}"
          meta_data: "{}"
          id: id
          state: state
          channel_id: channel_id
          parameters: "{}"
        - channel_name: channel_name
          response_to_id: response_to_id
          attachments:
            files:
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
            - embedded_content: embedded_content
              mime_type: mime_type
              file_name: file_name
              meta_data: "{}"
              id: id
              file_size: 0
              url: url
          reference_id: reference_id
          created_at: 0
          sender_name: sender_name
          error:
            status_code: 5
            original_status_code: 1
            error_code: ""
            message: message
          type: "{}"
          ai_model_id: ai_model_id
          ai_service_id: ai_service_id
          content:
            data:
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            - file: "{}"
              function_call:
                function_name: function_name
                arguments: "{}"
                id: id
                tool_function_id: tool_function_id
              function_responses:
                result: result
                function_name: function_name
                is_error: true
                id: id
                result_meta_data: "{}"
                tool_function_id: tool_function_id
              text: text
              type: text
              thinking:
                is_redacted: true
                signature: signature
                content: content
              function_status_update:
                id: id
                updates:
                - meta_data: "{}"
                  message: message
                - meta_data: "{}"
                  message: message
            full_text: full_text
          sender_id: sender_id
          token_direction: "{}"
          token_count: 6
          finish_reason: ""
          owner_organization_id: owner_organization_id
          updated_at: 1
          sender_conversation_role: "{}"
          meta_data: "{}"
          id: id
          state: state
          channel_id: channel_id
          parameters: "{}"
        channel_id: channel_id
      properties:
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        messages:
          items:
            $ref: "#/components/schemas/AuditTrailMessage"
          type: array
      required:
      - channel_id
      type: object
    AuditTrailMessage:
      example:
        channel_name: channel_name
        response_to_id: response_to_id
        attachments:
          files:
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
          - embedded_content: embedded_content
            mime_type: mime_type
            file_name: file_name
            meta_data: "{}"
            id: id
            file_size: 0
            url: url
        reference_id: reference_id
        created_at: 0
        sender_name: sender_name
        error:
          status_code: 5
          original_status_code: 1
          error_code: ""
          message: message
        type: "{}"
        ai_model_id: ai_model_id
        ai_service_id: ai_service_id
        content:
          data:
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          - file: "{}"
            function_call:
              function_name: function_name
              arguments: "{}"
              id: id
              tool_function_id: tool_function_id
            function_responses:
              result: result
              function_name: function_name
              is_error: true
              id: id
              result_meta_data: "{}"
              tool_function_id: tool_function_id
            text: text
            type: text
            thinking:
              is_redacted: true
              signature: signature
              content: content
            function_status_update:
              id: id
              updates:
              - meta_data: "{}"
                message: message
              - meta_data: "{}"
                message: message
          full_text: full_text
        sender_id: sender_id
        token_direction: "{}"
        token_count: 6
        finish_reason: ""
        owner_organization_id: owner_organization_id
        updated_at: 1
        sender_conversation_role: "{}"
        meta_data: "{}"
        id: id
        state: state
        channel_id: channel_id
        parameters: "{}"
      properties:
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        attachments:
          $ref: "#/components/schemas/AIgencyMessageFileList"
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        channel_name:
          maxLength: 255
          minLength: 1
          type: string
        content:
          $ref: "#/components/schemas/AIgencyMessageContentList"
        created_at:
          format: int64
          type: integer
        error:
          $ref: "#/components/schemas/AiServiceError"
        finish_reason:
          $ref: "#/components/schemas/FinishReason"
        id:
          maxLength: 64
          minLength: 1
          type: string
        meta_data:
          properties: {}
          type: object
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        reference_id:
          maxLength: 64
          type: string
        response_to_id:
          maxLength: 64
          type: string
        sender_conversation_role:
          allOf:
          - $ref: "#/components/schemas/ConversationRole"
          type: object
        sender_id:
          maxLength: 64
          minLength: 1
          type: string
        sender_name:
          maxLength: 255
          minLength: 1
          type: string
        state:
          type: string
        token_count:
          type: integer
        token_direction:
          allOf:
          - $ref: "#/components/schemas/TokenDirection"
          type: object
        type:
          allOf:
          - $ref: "#/components/schemas/AIgencyMessageType"
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - ai_model_id
      - ai_service_id
      - attachments
      - channel_id
      - channel_name
      - content
      - created_at
      - id
      - owner_organization_id
      - sender_conversation_role
      - sender_id
      - sender_name
      - token_direction
      - type
      - updated_at
      type: object
    Channel:
      example:
        summary: summary
        metadata: "{}"
        owner_id: owner_id
        mission_id: mission_id
        created_at: 0
        description: description
        owner_organization_id: owner_organization_id
        updated_at: 1
        is_org_public: true
        is_public: true
        name: name
        last_message_at: 6
        id: id
      properties:
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        is_org_public:
          type: boolean
        is_public:
          type: boolean
        last_message_at:
          format: int64
          type: integer
        metadata:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        summary:
          maxLength: 1024
          type: string
        updated_at:
          format: int64
          type: integer
      required:
      - id
      - name
      - owner_id
      - owner_organization_id
      type: object
    ChannelResults:
      example:
        results:
        - summary: summary
          metadata: "{}"
          owner_id: owner_id
          mission_id: mission_id
          created_at: 0
          description: description
          owner_organization_id: owner_organization_id
          updated_at: 1
          is_org_public: true
          is_public: true
          name: name
          last_message_at: 6
          id: id
        - summary: summary
          metadata: "{}"
          owner_id: owner_id
          mission_id: mission_id
          created_at: 0
          description: description
          owner_organization_id: owner_organization_id
          updated_at: 1
          is_org_public: true
          is_public: true
          name: name
          last_message_at: 6
          id: id
        total_results: 0
      properties:
        results:
          items:
            $ref: "#/components/schemas/Channel"
          type: array
        total_results:
          format: int64
          type: integer
      required:
      - results
      type: object
    ChannelWriteDto:
      example:
        summary: summary
        metadata: "{}"
        is_org_public: true
        is_public: true
        mission_id: mission_id
        name: name
        description: description
      properties:
        description:
          maxLength: 1024
          type: string
        is_org_public:
          type: boolean
        is_public:
          type: boolean
        metadata:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        summary:
          maxLength: 1024
          type: string
      type: object
    ChatCompletionCostTrackingRequest:
      example:
        execution_id: execution_id
        model_internal_id: model_internal_id
        streaming: true
        user_id: user_id
        service_internal_id: service_internal_id
        batch: true
        output_tokens: 0
        input_tokens: 0
      properties:
        batch:
          type: boolean
        execution_id:
          type: string
        input_tokens:
          minimum: 0
          type: integer
        model_internal_id:
          type: string
        output_tokens:
          minimum: 0
          type: integer
        service_internal_id:
          type: string
        streaming:
          type: boolean
        user_id:
          type: string
      required:
      - model_internal_id
      - service_internal_id
      type: object
    ChatCompletionRequestDto:
      example:
        agent_id: agent_id
        var_replacements:
          key: var_replacements
        continue_on_max_tokens: true
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        message: message
        set_message_history_ids:
        - set_message_history_ids
        - set_message_history_ids
        expire_messages: true
        continue_instruction_on_max_tokens: continue_instruction_on_max_tokens
        use_summary_service: true
        use_tools: true
        selected_tools:
        - selected_tools
        - selected_tools
        message_reference_id: message_reference_id
        use_channel_messages_as_history: true
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        channel_id: channel_id
        parameters: "{}"
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        channel_id:
          type: string
        continue_instruction_on_max_tokens:
          type: string
        continue_on_max_tokens:
          type: boolean
        expire_messages:
          type: boolean
        message:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        parameters:
          properties: {}
          type: object
        selected_tools:
          items:
            type: string
          type: array
        set_message_history_ids:
          description: "If UseChannelMessagesAsHistory is false, this list of message\
            \ IDs will be used as history, if empty, the history will be empty, ignored\
            \ if UseChannelMessagesAsHistory is true"
          items:
            type: string
          type: array
        use_channel_messages_as_history:
          description: "If true, the channel messages will be used as history and\
            \ SetMessageHistoryIds will be ignored"
          type: boolean
        use_summary_service:
          type: boolean
        use_tools:
          type: boolean
        var_replacements:
          additionalProperties:
            type: string
          type: object
      required:
      - agent_id
      - message
      type: object
    ConnectionTokenResponse:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    ConversationRole:
      enum:
      - unknown
      - user
      - system
      - assistant
      - aigent
      type: string
      x-enum-varnames:
      - ConversationRoleUnknown
      - ConversationRoleUser
      - ConversationRoleSystem
      - ConversationRoleAssistant
      - ConversationRoleAIgent
    CostEstimation:
      example:
        parameters: "{}"
        cost_in_euro: 0.08008281904610115
      properties:
        cost_in_euro:
          format: double
          minimum: 0
          type: number
        parameters:
          properties: {}
          type: object
      required:
      - cost_in_euro
      type: object
    CostTrackingResponse:
      example:
        execution_log_id: execution_log_id
      properties:
        execution_log_id:
          type: string
      type: object
    DocumentConversionCostTrackingRequest:
      example:
        execution_id: execution_id
        user_id: user_id
        num_pages_with_images: 0
        num_pages: 0
        output_tokens: 0
        input_tokens: 0
      properties:
        execution_id:
          type: string
        input_tokens:
          minimum: 0
          type: integer
        num_pages:
          minimum: 0
          type: integer
        num_pages_with_images:
          minimum: 0
          type: integer
        output_tokens:
          minimum: 0
          type: integer
        user_id:
          type: string
      type: object
    EmbeddingItem:
      example:
        meta_data: "{}"
        index: 6
        embedding:
        - 0.8008282
        - 0.8008282
      properties:
        embedding:
          items:
            format: float
            type: number
          type: array
        index:
          type: integer
        meta_data:
          properties: {}
          type: object
      required:
      - embedding
      - index
      type: object
    EstimateImageGenerationCostRequestDto:
      example:
        agent_id: agent_id
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        parameters: "{}"
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        parameters:
          properties: {}
          type: object
      required:
      - agent_id
      type: object
    ExecutionCostTemplate:
      example:
        description: description
        cost_per_unit_in_euro: 5.637376656633329
        batch_cost_factor: 5.962133916683182
        cost_unit: input-tokens-per-million
      properties:
        batch_cost_factor:
          format: double
          type: number
        cost_per_unit_in_euro:
          format: double
          type: number
        cost_unit:
          $ref: "#/components/schemas/AIModelCostUnit"
        description:
          type: string
      type: object
    ExecutionLog:
      example:
        agent_id: agent_id
        owner_id: owner_id
        usage:
        - resulting_cost_in_euro: 9.301444243932576
          used_units: 3.616076749251911
          description: description
          cost_per_unit_in_euro: 7.061401241503109
          batch_cost_factor: 2.3021358869347655
          cost_unit: null
        - resulting_cost_in_euro: 9.301444243932576
          used_units: 3.616076749251911
          description: description
          cost_per_unit_in_euro: 7.061401241503109
          batch_cost_factor: 2.3021358869347655
          cost_unit: null
        created_at: 0
        message_id: message_id
        type: type
        ai_model_id: ai_model_id
        ai_model_service_id: ai_model_service_id
        execution_id: execution_id
        owner_organization_id: owner_organization_id
        final_cost_in_euro: 6.027456183070403
        id: id
        channel_id: channel_id
      properties:
        agent_id:
          type: string
        ai_model_id:
          type: string
        ai_model_service_id:
          type: string
        channel_id:
          type: string
        created_at:
          format: int64
          type: integer
        execution_id:
          type: string
        final_cost_in_euro:
          format: double
          type: number
        id:
          type: string
        message_id:
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        type:
          type: string
        usage:
          items:
            $ref: "#/components/schemas/ExecutionUsageCost"
          type: array
      type: object
    ExecutionLogCosts:
      example:
        total_costs: 0.8008281904610115
      properties:
        total_costs:
          format: double
          type: number
      type: object
    ExecutionLogResults:
      example:
        results:
        - agent_id: agent_id
          owner_id: owner_id
          usage:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          created_at: 0
          message_id: message_id
          type: type
          ai_model_id: ai_model_id
          ai_model_service_id: ai_model_service_id
          execution_id: execution_id
          owner_organization_id: owner_organization_id
          final_cost_in_euro: 6.027456183070403
          id: id
          channel_id: channel_id
        - agent_id: agent_id
          owner_id: owner_id
          usage:
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          - resulting_cost_in_euro: 9.301444243932576
            used_units: 3.616076749251911
            description: description
            cost_per_unit_in_euro: 7.061401241503109
            batch_cost_factor: 2.3021358869347655
            cost_unit: null
          created_at: 0
          message_id: message_id
          type: type
          ai_model_id: ai_model_id
          ai_model_service_id: ai_model_service_id
          execution_id: execution_id
          owner_organization_id: owner_organization_id
          final_cost_in_euro: 6.027456183070403
          id: id
          channel_id: channel_id
        total_results: 1
      properties:
        results:
          items:
            $ref: "#/components/schemas/ExecutionLog"
          type: array
        total_results:
          format: int64
          type: integer
      type: object
    ExecutionUsageCost:
      example:
        resulting_cost_in_euro: 9.301444243932576
        used_units: 3.616076749251911
        description: description
        cost_per_unit_in_euro: 7.061401241503109
        batch_cost_factor: 2.3021358869347655
        cost_unit: null
      properties:
        batch_cost_factor:
          format: double
          type: number
        cost_per_unit_in_euro:
          format: double
          type: number
        cost_unit:
          $ref: "#/components/schemas/AIModelCostUnit"
        description:
          type: string
        resulting_cost_in_euro:
          format: double
          type: number
        used_units:
          format: double
          type: number
      type: object
    FileChatSettings:
      example:
        max_files: 0
        max_total_file_size: 6
      properties:
        max_files:
          format: int
          type: integer
        max_total_file_size:
          format: int64
          type: integer
      type: object
    FileSettings:
      example:
        upload:
          min_file_size: 5
          max_file_size: 1
          accepted_mime_types:
          - accepted_mime_types
          - accepted_mime_types
        chat:
          max_files: 0
          max_total_file_size: 6
      properties:
        chat:
          $ref: "#/components/schemas/FileChatSettings"
        upload:
          $ref: "#/components/schemas/FileUploadSettings"
      type: object
    FileUploadCostTrackingRequest:
      example:
        execution_id: execution_id
        user_id: user_id
        num_files: 1
      properties:
        execution_id:
          type: string
        num_files:
          minimum: 1
          type: integer
        user_id:
          type: string
      required:
      - num_files
      type: object
    FileUploadResponse:
      example:
        resulting_files:
        - mime_type: mime_type
          original_file_url: original_file_url
          file_name: file_name
          original_file_mime_type: original_file_mime_type
          original_file_name: original_file_name
          file_size: 0
          url: url
        - mime_type: mime_type
          original_file_url: original_file_url
          file_name: file_name
          original_file_mime_type: original_file_mime_type
          original_file_name: original_file_name
          file_size: 0
          url: url
        id: id
      properties:
        id:
          type: string
        resulting_files:
          items:
            $ref: "#/components/schemas/ResultFile"
          type: array
      required:
      - id
      - resulting_files
      type: object
    FileUploadSettings:
      example:
        min_file_size: 5
        max_file_size: 1
        accepted_mime_types:
        - accepted_mime_types
        - accepted_mime_types
      properties:
        accepted_mime_types:
          items:
            type: string
          type: array
        max_file_size:
          format: int64
          type: integer
        min_file_size:
          format: int64
          type: integer
      type: object
    FinishReason:
      enum:
      - ""
      - error
      - content_filter
      - max_tokens
      - stop
      - tool_calls
      - delta
      - unknown
      type: string
      x-enum-varnames:
      - FinishReasonNil
      - FinishReasonError
      - FinishReasonContentFilter
      - FinishReasonMaxTokens
      - FinishReasonStop
      - FinishReasonToolCalls
      - FinishReasonDelta
      - FinishReasonUnknown
    FunctionCall:
      example:
        response_visible: true
        hosting_location: hosting_location
        icon: icon
        name: name
        description: description
        tool_id: tool_id
        id: id
        parameters: parameters
        version: version
        i18n:
          key:
            name: name
            description: description
      properties:
        description:
          type: string
        hosting_location:
          type: string
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/FunctionCallI18n"
          type: object
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        parameters:
          type: string
        response_visible:
          type: boolean
        tool_id:
          type: string
        version:
          type: string
      type: object
    FunctionCallI18n:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    FunctionCallResults:
      example:
        result_files:
        - mime_type: mime_type
          original_file_url: original_file_url
          file_name: file_name
          original_file_mime_type: original_file_mime_type
          original_file_name: original_file_name
          file_size: 0
          url: url
        - mime_type: mime_type
          original_file_url: original_file_url
          file_name: file_name
          original_file_mime_type: original_file_mime_type
          original_file_name: original_file_name
          file_size: 0
          url: url
        final_state: final_state
        name: name
        tool_id: tool_id
        id: id
        result_meta_data: "{}"
        error: error
        result_texts:
        - result_texts
        - result_texts
        tool_function_id: tool_function_id
      properties:
        error:
          type: string
        final_state:
          type: string
        id:
          type: string
        name:
          type: string
        result_files:
          items:
            $ref: "#/components/schemas/ResultFile"
          type: array
        result_meta_data:
          properties: {}
          type: object
        result_texts:
          items:
            type: string
          type: array
        tool_function_id:
          type: string
        tool_id:
          type: string
      type: object
    HealthResponse:
      example:
        health: health
      properties:
        health:
          type: string
      type: object
    HostingLocation:
      enum:
      - ""
      - usa
      - europe
      - germany
      - swiss
      - uk
      - any
      type: string
      x-enum-varnames:
      - HostingLocationNil
      - HostingLocationUSA
      - HostingLocationEU
      - HostingLocationGERMANY
      - HostingLocationSWISS
      - HostingLocationUK
      - HostingLocationANY
    ImageGenerationRequestDto:
      example:
        agent_id: agent_id
        message: message
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        parameters: "{}"
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        message:
          type: string
        parameters:
          properties: {}
          type: object
      required:
      - agent_id
      - message
      type: object
    Mission:
      example:
        instructions:
          var_replacements:
            key: var_replacements
          max_tokens: 1
          temperature: 5.962133916683182
          text: text
        completion_reason: ""
        mission_executor_id: agent_1234567890123456
        owner_id: owner_id
        created_at: 6
        description: Mission to find a fun fact about basketball
        status_updates:
          status_updates:
          - mission_id: mission_id
            description: description
            id: id
            status: created
            timestamp: 5
          - mission_id: mission_id
            description: description
            id: id
            status: created
            timestamp: 5
        created_by: created_by
        content: "{}"
        completed_at: 0
        owner_organization_id: owner_organization_id
        updated_at: 2
        creator_name: John Doe
        id: mis_1234567890123456
      properties:
        completed_at:
          format: int64
          type: integer
        completion_reason:
          $ref: "#/components/schemas/MissionCompletionReason"
        content:
          type: object
        created_at:
          format: int64
          type: integer
        created_by:
          type: string
        creator_name:
          example: John Doe
          type: string
        description:
          example: Mission to find a fun fact about basketball
          type: string
        id:
          example: mis_1234567890123456
          type: string
        instructions:
          $ref: "#/components/schemas/MissionInstructions"
        mission_executor_id:
          example: agent_1234567890123456
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        status_updates:
          $ref: "#/components/schemas/MissionStatusUpdateList"
        updated_at:
          format: int64
          type: integer
      type: object
    MissionCompletionReason:
      enum:
      - ""
      - canceled
      - completed
      - error
      type: string
      x-enum-varnames:
      - MissionCompletionReasonNil
      - MissionCompletionReasonCanceled
      - MissionCompletionReasonCompleted
      - MissionCompletionReasonError
    MissionInstructions:
      example:
        var_replacements:
          key: var_replacements
        max_tokens: 1
        temperature: 5.962133916683182
        text: text
      properties:
        max_tokens:
          type: integer
        temperature:
          type: number
        text:
          minLength: 1
          type: string
        var_replacements:
          additionalProperties:
            type: string
          type: object
      required:
      - text
      type: object
    MissionResults:
      example:
        results:
        - instructions:
            var_replacements:
              key: var_replacements
            max_tokens: 1
            temperature: 5.962133916683182
            text: text
          completion_reason: ""
          mission_executor_id: agent_1234567890123456
          owner_id: owner_id
          created_at: 6
          description: Mission to find a fun fact about basketball
          status_updates:
            status_updates:
            - mission_id: mission_id
              description: description
              id: id
              status: created
              timestamp: 5
            - mission_id: mission_id
              description: description
              id: id
              status: created
              timestamp: 5
          created_by: created_by
          content: "{}"
          completed_at: 0
          owner_organization_id: owner_organization_id
          updated_at: 2
          creator_name: John Doe
          id: mis_1234567890123456
        - instructions:
            var_replacements:
              key: var_replacements
            max_tokens: 1
            temperature: 5.962133916683182
            text: text
          completion_reason: ""
          mission_executor_id: agent_1234567890123456
          owner_id: owner_id
          created_at: 6
          description: Mission to find a fun fact about basketball
          status_updates:
            status_updates:
            - mission_id: mission_id
              description: description
              id: id
              status: created
              timestamp: 5
            - mission_id: mission_id
              description: description
              id: id
              status: created
              timestamp: 5
          created_by: created_by
          content: "{}"
          completed_at: 0
          owner_organization_id: owner_organization_id
          updated_at: 2
          creator_name: John Doe
          id: mis_1234567890123456
        total_results: 7
      properties:
        results:
          items:
            $ref: "#/components/schemas/Mission"
          type: array
        total_results:
          format: int64
          type: integer
      type: object
    MissionStatus:
      enum:
      - created
      - started
      - paused
      - resumed
      - canceled
      - failed
      - completed
      type: string
      x-enum-varnames:
      - MissionStatusCreated
      - MissionStatusStarted
      - MissionStatusPaused
      - MissionStatusResumed
      - MissionStatusCanceled
      - MissionStatusFailed
      - MissionStatusCompleted
    MissionStatusUpdate:
      example:
        mission_id: mission_id
        description: description
        id: id
        status: created
        timestamp: 5
      properties:
        description:
          type: string
        id:
          type: string
        mission_id:
          type: string
        status:
          $ref: "#/components/schemas/MissionStatus"
        timestamp:
          type: integer
      type: object
    MissionStatusUpdateList:
      example:
        status_updates:
        - mission_id: mission_id
          description: description
          id: id
          status: created
          timestamp: 5
        - mission_id: mission_id
          description: description
          id: id
          status: created
          timestamp: 5
      properties:
        status_updates:
          items:
            $ref: "#/components/schemas/MissionStatusUpdate"
          type: array
      type: object
    MissionWriteDto:
      example:
        instructions:
          var_replacements:
            key: var_replacements
          max_tokens: 1
          temperature: 5.962133916683182
          text: text
        description: description
      properties:
        description:
          type: string
        instructions:
          $ref: "#/components/schemas/MissionInstructions"
      required:
      - instructions
      type: object
    OrgCostBudget:
      example:
        updated_at: 1
        used_budget: 0.5962133916683182
        org_id: org_id
        total_budget: 0.6027456183070403
        remaining_budget: 0.08008281904610115
        updated_by: updated_by
      properties:
        org_id:
          maxLength: 64
          minLength: 1
          type: string
        remaining_budget:
          format: double
          minimum: 0
          type: number
        total_budget:
          format: double
          minimum: 0
          type: number
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
        used_budget:
          format: double
          minimum: 0
          type: number
      required:
      - org_id
      type: object
    OrgCostBudgetCheck:
      example:
        sufficient_budget: true
        org_id: org_id
      properties:
        org_id:
          type: string
        sufficient_budget:
          type: boolean
      required:
      - org_id
      - sufficient_budget
      type: object
    OrgCostBudgetWriteDto:
      example:
        used_budget: 0.6027456183070403
        total_budget: 0.08008281904610115
      properties:
        total_budget:
          format: double
          minimum: 0
          type: number
        used_budget:
          format: double
          minimum: 0
          type: number
      type: object
    Prompt:
      example:
        visibility: private
        owner_id: owner_id
        created_at: 0
        current_version: 6
        description: description
        default_agent_id: default_agent_id
        thumbnail_url: thumbnail_url
        title: title
        tags:
        - tags
        - tags
        owner_organization_id: owner_organization_id
        updated_at: 1
        versions:
        - created_at: 5
          created_by: created_by
          version: 5
          content: content
        - created_at: 5
          created_by: created_by
          version: 5
          content: content
        id: id
      properties:
        created_at:
          format: int64
          type: integer
        current_version:
          type: integer
        default_agent_id:
          type: string
        description:
          type: string
        id:
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        tags:
          items:
            type: string
          type: array
        thumbnail_url:
          type: string
        title:
          type: string
        updated_at:
          format: int64
          type: integer
        versions:
          items:
            $ref: "#/components/schemas/PromptVersion"
          type: array
        visibility:
          $ref: "#/components/schemas/PromptVisibilityStates"
      required:
      - id
      - title
      type: object
    PromptRenderDto:
      example:
        var_replacements:
          key: var_replacements
        prompt_id: prompt_id
        content: content
      properties:
        content:
          type: string
        prompt_id:
          type: string
        var_replacements:
          additionalProperties:
            type: string
          type: object
      type: object
    PromptVersion:
      example:
        created_at: 5
        created_by: created_by
        version: 5
        content: content
      properties:
        content:
          type: string
        created_at:
          format: int64
          type: integer
        created_by:
          type: string
        version:
          type: integer
      type: object
    PromptVisibilityStates:
      enum:
      - private
      - org
      - public
      - curated
      type: string
      x-enum-varnames:
      - PromptVisibilityPrivate
      - PromptVisibilityOrganization
      - PromptVisibilityPublic
      - PromptVisibilityCurated
    PromptWriteDto:
      example:
        visibility: private
        description: description
        default_agent_id: default_agent_id
        thumbnail_url: thumbnail_url
        title: title
        content: content
        tags:
        - tags
        - tags
      properties:
        content:
          type: string
        default_agent_id:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        thumbnail_url:
          type: string
        title:
          type: string
        visibility:
          $ref: "#/components/schemas/PromptVisibilityStates"
      type: object
    RenderedPrompt:
      example:
        content: content
      properties:
        content:
          type: string
      required:
      - content
      type: object
    ResultFile:
      example:
        mime_type: mime_type
        original_file_url: original_file_url
        file_name: file_name
        original_file_mime_type: original_file_mime_type
        original_file_name: original_file_name
        file_size: 0
        url: url
      properties:
        file_name:
          type: string
        file_size:
          type: integer
        mime_type:
          type: string
        original_file_mime_type:
          type: string
        original_file_name:
          type: string
        original_file_url:
          type: string
        url:
          type: string
      required:
      - file_name
      - file_size
      - mime_type
      - original_file_mime_type
      - original_file_name
      - original_file_url
      - url
      type: object
    TextEmbedding:
      example:
        embeddings:
        - meta_data: "{}"
          index: 6
          embedding:
          - 0.8008282
          - 0.8008282
        - meta_data: "{}"
          index: 6
          embedding:
          - 0.8008282
          - 0.8008282
        execution_id: execution_id
        agent_id: agent_id
        service_id: service_id
        tokens: 1
        model_id: model_id
        parameters: "{}"
      properties:
        agent_id:
          type: string
        embeddings:
          items:
            $ref: "#/components/schemas/EmbeddingItem"
          type: array
        execution_id:
          type: string
        model_id:
          type: string
        parameters:
          properties: {}
          type: object
        service_id:
          type: string
        tokens:
          type: integer
      required:
      - agent_id
      - embeddings
      - execution_id
      - model_id
      - parameters
      - service_id
      - tokens
      type: object
    TextEmbeddingItemDto:
      example:
        meta_data: "{}"
        text: text
      properties:
        meta_data:
          properties: {}
          type: object
        text:
          type: string
      required:
      - text
      type: object
    TextEmbeddingRequestDto:
      example:
        agent_id: agent_id
        items:
        - meta_data: "{}"
          text: text
        - meta_data: "{}"
          text: text
        parameters: "{}"
      properties:
        agent_id:
          minLength: 1
          type: string
        items:
          items:
            $ref: "#/components/schemas/TextEmbeddingItemDto"
          minItems: 1
          type: array
        parameters:
          properties: {}
          type: object
      required:
      - agent_id
      - items
      type: object
    TokenDirection:
      enum:
      - input
      - output
      type: string
      x-enum-varnames:
      - InputToken
      - OutputToken
    Tool:
      example:
        functions:
        - response_visible: true
          hosting_location: hosting_location
          icon: icon
          name: name
          description: description
          tool_id: tool_id
          id: id
          parameters: parameters
          version: version
          i18n:
            key:
              name: name
              description: description
        - response_visible: true
          hosting_location: hosting_location
          icon: icon
          name: name
          description: description
          tool_id: tool_id
          id: id
          parameters: parameters
          version: version
          i18n:
            key:
              name: name
              description: description
        hosting_locations:
        - hosting_locations
        - hosting_locations
        icon: icon
        is_public: true
        name: name
        description: description
        id: id
        version: version
        i18n:
          key:
            name: name
            description: description
      properties:
        description:
          type: string
        functions:
          items:
            $ref: "#/components/schemas/ToolFunction"
          type: array
        hosting_locations:
          items:
            type: string
          type: array
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/ToolI18n"
          type: object
        icon:
          type: string
        id:
          type: string
        is_public:
          type: boolean
        name:
          type: string
        version:
          type: string
      required:
      - functions
      - id
      - is_public
      - name
      - version
      type: object
    ToolFunction:
      example:
        response_visible: true
        hosting_location: hosting_location
        icon: icon
        name: name
        description: description
        tool_id: tool_id
        id: id
        parameters: parameters
        version: version
        i18n:
          key:
            name: name
            description: description
      properties:
        description:
          type: string
        hosting_location:
          type: string
        i18n:
          additionalProperties:
            $ref: "#/components/schemas/ToolI18n"
          type: object
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        parameters:
          type: string
        response_visible:
          type: boolean
        tool_id:
          type: string
        version:
          type: string
      required:
      - id
      - name
      - response_visible
      - tool_id
      - version
      type: object
    ToolI18n:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    VersionResponse:
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    CreateChannelFile_request:
      properties:
        file:
          description: File to upload
          format: binary
          type: string
        channel_id:
          description: Channel id
          type: string
      required:
      - file
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: x-api-key
      type: apiKey
x-original-swagger-version: "2.0"
