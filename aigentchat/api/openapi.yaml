openapi: 3.0.1
info:
  contact:
    email: contact@vaudience.ai
    name: vAudience
    url: https://www.vaudience.ai
  description: chat and api server for AIgents
  license:
    name: Copyrighted
    url: https://www.vaudience.ai
  termsOfService: https://www.vaudience.ai/terms-of-use/
  title: vAudience AIgentChat API
  version: 0.14.1
servers:
- url: https://aigentchat.dev.ai.vaud.one/api/v1
tags:
- description: anything related to ai agents
  name: Agent
- description: anything related to agent prompts
  name: AgentPrompts
- description: anything related to agent teams
  name: AgentTeam
- description: anything related to the AI models
  name: AIModel
- description: anything related to the AI model services
  name: AIModelService
- description: "anything related to audio files and processing such as text-to-speech,\
    \ speech-to-text etc."
  name: Audio
- description: anything related to the chat channels
  name: Channel
- description: anything related to the chat completions
  name: ChatCompletions
- description: anything related to connection tokens for SSE
  name: ConnectionTokens
- description: anything related to embeddings
  name: Embeddings
- description: anything related to execution logs (cost and usage)
  name: ExecutionLogs
- description: anything related to file uploads and processing
  name: Files
- description: anything related to function calls
  name: FunctionCalls
- description: anything related to the chat messages
  name: Messages
- description: anything related to aigency missions
  name: Missions
- description: anything related to the organization cost budget
  name: OrgCostBudget
paths:
  /ai_model_services:
    get:
      description: Retrieve a list of AI model services
      operationId: ListAIModelServices
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIModelServiceObject'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI model services
      tags:
      - AIModelService
    post:
      description: Create a new AI model service with the provided details
      operationId: CreateAIModelService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModelServiceWriteDto'
        description: AI Model Service
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModelServiceObject'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new AI model service
      tags:
      - AIModelService
      x-codegen-request-body-name: service
  /ai_model_services/{id}:
    delete:
      description: Delete an AI model service by its ID
      operationId: DeleteAIModelService
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModelServiceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an AI model service
      tags:
      - AIModelService
    get:
      description: Retrieve an AI model service by its ID
      operationId: GetAIModelService
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModelServiceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model service by ID
      tags:
      - AIModelService
    put:
      description: Update an AI model service by its ID
      operationId: UpdateAIModelService
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModelServiceWriteDto'
        description: AI Model Service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModelServiceObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an AI model service
      tags:
      - AIModelService
      x-codegen-request-body-name: service
  /ai_model_services/{id}/models:
    get:
      description: Retrieve a list of AI models for a specific AI model service
      operationId: ListAIModelsForService
      parameters:
      - description: AI Model Service ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIModel'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models for a service
      tags:
      - AIModelService
  /ai_model_services_with_models:
    get:
      description: Retrieve a list of AI services with their associated models
      operationId: ListAIModelServicesWithModels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIModelServiceWithModels'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI services with models
      tags:
      - AIModelService
  /ai_models:
    get:
      description: Retrieve a list of AI models
      operationId: ListAIModels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIModel'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List AI models
      tags:
      - AIModel
    post:
      description: Create a new AI model with the provided details
      operationId: CreateAIModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModelWriteDto'
        description: AI Model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new AI model
      tags:
      - AIModel
      x-codegen-request-body-name: aiModel
  /ai_models/{id}:
    delete:
      description: Delete an AI model by its ID
      operationId: DeleteAIModel
      parameters:
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an AI model
      tags:
      - AIModel
    get:
      description: Retrieve an AI model by its ID
      operationId: GetAIModel
      parameters:
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an AI model by ID
      tags:
      - AIModel
    put:
      description: Update an AI model by its ID
      operationId: UpdateAIModel
      parameters:
      - description: AI Model ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIModel'
        description: AI Model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an AI model
      tags:
      - AIModel
      x-codegen-request-body-name: aiModel
  /info/health:
    get:
      description: a simple 200 return endpoint to ensure the service is responsive
      operationId: HealthGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
          description: OK
      summary: checks for service health
      tags:
      - Health
  /info/metrics:
    get:
      description: go prometheus client provides this standard (basic) metrics endpoint
      operationId: MetricsGet
      responses:
        "200":
          content: {}
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Prometheus provided metrics endpoint
      tags:
      - Metrics
  /info/version:
    get:
      description: returns the version number of this service
      operationId: VersionGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: OK
      summary: returns the service version
      tags:
      - Version
  /organizations/{org_id}/agent_teams:
    get:
      description: Retrieve a list of agent teams by ownership and organization
      operationId: ListAgentTeams
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentTeam'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List agent teams
      tags:
      - AgentTeam
    post:
      description: Create a new agent team with the provided details
      operationId: CreateAgentTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentTeamWriteDto'
        description: Agent Team
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new agent team
      tags:
      - AgentTeam
      x-codegen-request-body-name: agentTeam
  /organizations/{org_id}/agent_teams/{team_id}:
    delete:
      description: Delete an agent team by its ID
      operationId: DeleteAgentTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an agent team
      tags:
      - AgentTeam
    get:
      description: Retrieve an agent team by its ID
      operationId: GetAgentTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an agent team
      tags:
      - AgentTeam
    put:
      description: Update an agent team by its ID
      operationId: UpdateAgentTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentTeamWriteDto'
        description: Agent Team
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an agent team
      tags:
      - AgentTeam
      x-codegen-request-body-name: agentTeam
  /organizations/{org_id}/agent_teams/{team_id}/addagent/{agent_id}:
    patch:
      description: Add an agent to an agent team
      operationId: AddAgentToTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: agent_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an agent to a team
      tags:
      - AgentTeam
  /organizations/{org_id}/agent_teams/{team_id}/full:
    get:
      description: Retrieve an agent team with full details of associated agents
      operationId: GetFullAgentTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a full agent team
      tags:
      - AgentTeam
  /organizations/{org_id}/agent_teams/{team_id}/messages/system:
    patch:
      description: Update the system messages of an agent team
      operationId: UpdateSystemMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: System Messages
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update system messages
      tags:
      - AgentTeam
      x-codegen-request-body-name: messages
  /organizations/{org_id}/agent_teams/{team_id}/messages/user:
    patch:
      description: Update the user messages of an agent team
      operationId: UpdateUserMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: User Messages
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update user messages
      tags:
      - AgentTeam
      x-codegen-request-body-name: messages
  /organizations/{org_id}/agent_teams/{team_id}/removeagent/{agent_id}:
    patch:
      description: Remove an agent from an agent team
      operationId: RemoveAgentFromTeam
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID
        in: path
        name: team_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: agent_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeam'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an agent from a team
      tags:
      - AgentTeam
  /organizations/{org_id}/agentprompts:
    get:
      description: List agent prompts for an organization
      operationId: ListAgentPrompts
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentPrompt'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List agent prompts
      tags:
      - AgentPrompts
    post:
      description: Create a new agent prompt
      operationId: CreateAgentPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPrompt'
        description: Agent Prompt object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPrompt'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new agent prompt
      tags:
      - AgentPrompts
      x-codegen-request-body-name: prompt
  /organizations/{org_id}/agentprompts/render:
    post:
      description: Renders an agent prompt by resolving references and replacing variables
        in the prompt content.
      operationId: RenderAgentPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPromptRenderDto'
        description: Agent Prompt Render DTO
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPromptRenderedDto'
          description: Rendered prompt content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid payload or prompt ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Prompt not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Render Agent Prompt
      tags:
      - AgentPrompts
      x-codegen-request-body-name: renderDto
  /organizations/{org_id}/agentprompts/{prompt_id}:
    delete:
      description: Delete an existing agent prompt
      operationId: DeleteAgentPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an agent prompt
      tags:
      - AgentPrompts
    get:
      description: Get details of a specific agent prompt
      operationId: GetAgentPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPrompt'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a specific agent prompt
      tags:
      - AgentPrompts
    put:
      description: Update details of an existing agent prompt
      operationId: UpdateAgentPrompt
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Prompt ID
        in: path
        name: prompt_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPrompt'
        description: Updated Agent Prompt object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPrompt'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an agent prompt
      tags:
      - AgentPrompts
      x-codegen-request-body-name: prompt
  /organizations/{org_id}/agents:
    get:
      description: Retrieve a list of agents by ownership and organization
      operationId: ListAgents
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Include default agents to the list of org owned agents
        in: query
        name: add_default_agents
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter by agent capability
        in: query
        name: capability
        schema:
          enum:
          - chat
          - embedding
          - image
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Agent'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List agents
      tags:
      - Agent
    post:
      description: Create a new agent with the provided details
      operationId: CreateAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentWriteDto'
        description: Agent
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new agent
      tags:
      - Agent
      x-codegen-request-body-name: agent
  /organizations/{org_id}/agents/search:
    get:
      description: Search agents based on criteria
      operationId: SearchAgents
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Name
        in: query
        name: name
        schema:
          type: string
      - description: Model ID
        in: query
        name: modelID
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Agent'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search agents
      tags:
      - Agent
  /organizations/{org_id}/agents/{id}:
    delete:
      description: Delete an agent by its ID
      operationId: DeleteAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete an agent
      tags:
      - Agent
    get:
      description: Retrieve an agent by its ID
      operationId: GetAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get an agent
      tags:
      - Agent
    put:
      description: Update an agent by its ID
      operationId: UpdateAgent
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentWriteDto'
        description: Agent
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update an agent
      tags:
      - Agent
      x-codegen-request-body-name: agent
  /organizations/{org_id}/agents/{id}/addfile/{file_id}:
    patch:
      description: Add an attached file ID to an agent
      operationId: AddAttachedFileID
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: File ID
        in: path
        name: file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an attached file ID to an agent
      tags:
      - Agent
  /organizations/{org_id}/agents/{id}/addtool/{tool_id}:
    patch:
      description: Add an assigned tool to an agent
      operationId: AddAssignedTool
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tool ID
        in: path
        name: tool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an assigned tool to an agent
      tags:
      - Agent
  /organizations/{org_id}/agents/{id}/messages/addsystemmessage:
    patch:
      description: Add a system message to an agent
      operationId: AddSystemMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: System Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add a system message to an agent
      tags:
      - Agent
      x-codegen-request-body-name: message
  /organizations/{org_id}/agents/{id}/messages/addusermessage:
    patch:
      description: Add an initial user message to an agent
      operationId: AddInitialUserMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Initial User Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add an initial user message to an agent
      tags:
      - Agent
      x-codegen-request-body-name: message
  /organizations/{org_id}/agents/{id}/messages/removesystemmessage:
    patch:
      description: Remove a system message from an agent
      operationId: RemoveSystemMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: System Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove a system message from an agent
      tags:
      - Agent
      x-codegen-request-body-name: message
  /organizations/{org_id}/agents/{id}/messages/removeusermessage:
    patch:
      description: Remove an initial user message from an agent
      operationId: RemoveInitialUserMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Initial User Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an initial user message from an agent
      tags:
      - Agent
      x-codegen-request-body-name: message
  /organizations/{org_id}/agents/{id}/removefile/{file_id}:
    patch:
      description: Remove an attached file ID from an agent
      operationId: RemoveAttachedFileID
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: File ID
        in: path
        name: file_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an attached file ID from an agent
      tags:
      - Agent
  /organizations/{org_id}/agents/{id}/removetool/{tool_id}:
    patch:
      description: Remove an assigned tool from an agent
      operationId: RemoveAssignedTool
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tool ID
        in: path
        name: tool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Remove an assigned tool from an agent
      tags:
      - Agent
  /organizations/{org_id}/audio/texttospeech:
    post:
      description: Generates an audio file from text. attaches the resulting audiofile
        to the incoming message
      operationId: CreateTextToSpeech
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioGenerationRequest'
        description: Audio-Generation Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResultAudioGeneration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Text-To-Speech
      tags:
      - Audio
      x-codegen-request-body-name: request
  /organizations/{org_id}/audio/transcribe:
    post:
      description: Reads an audio file and transcribes text from it
      operationId: CreateAudioTranscription
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioTranscriptionRequest'
        description: Audio Transcription Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyMessage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Transcribe speech to text
      tags:
      - Audio
      x-codegen-request-body-name: request
  /organizations/{org_id}/budget:
    get:
      description: Retrieve the cost budget for a specific organization
      operationId: GetOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCostBudget'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get organization cost budget
      tags:
      - OrgCostBudget
    post:
      description: Create a new cost budget for a specific organization
      operationId: AddNewOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgCostBudgetWriteDto'
        description: New budget
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCostBudget'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Add new organization cost budget
      tags:
      - OrgCostBudget
      x-codegen-request-body-name: budget
    put:
      description: Update the cost budget for a specific organization
      operationId: UpdateOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgCostBudgetWriteDto'
        description: Updated budget
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCostBudget'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update organization cost budget
      tags:
      - OrgCostBudget
      x-codegen-request-body-name: budget
  /organizations/{org_id}/budget/check:
    get:
      description: Check if the cost budget for a specific organization is sufficient
        to start a chat completion
      operationId: CheckOrgCostBudget
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCostBudgetCheck'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Check organization cost budget
      tags:
      - OrgCostBudget
  /organizations/{org_id}/channels:
    get:
      description: Retrieve a list of channels belonging to a specific organization
      operationId: ListChannelsByOrgId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List channels by organization ID
      tags:
      - Channel
    post:
      description: Create a new channel with the provided details
      operationId: CreateChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelWriteDto'
        description: Channel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new channel
      tags:
      - Channel
      x-codegen-request-body-name: channel
  /organizations/{org_id}/channels/active:
    get:
      description: Retrieve a list of active channels based on subscribed clients
        across all instances
      operationId: GetActiveChannels
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get active channels
      tags:
      - Channel
  /organizations/{org_id}/channels/owner:
    get:
      description: Retrieve a list of channels owned by a specific user
      operationId: ListChannelsByOwnerId
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List channels by owner ID
      tags:
      - Channel
  /organizations/{org_id}/channels/subscribed/{user_id}:
    get:
      description: "Retrieve a list of channels a user was subscribed to, sorted by\
        \ last activity"
      operationId: GetUserSubscribedChannels
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get user's subscribed channels
      tags:
      - Channel
  /organizations/{org_id}/channels/{channel_id}/presence:
    get:
      description: Retrieve a list of connected subscribers for a channel across all
        instances
      operationId: GetChannelPresence
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get channel presence
      tags:
      - Channel
  /organizations/{org_id}/channels/{id}:
    delete:
      description: Delete a channel by its ID
      operationId: DeleteChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a channel
      tags:
      - Channel
    get:
      description: Retrieve a channel by its ID
      operationId: GetChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a channel by ID
      tags:
      - Channel
    put:
      description: Update a channel by its ID
      operationId: UpdateChannel
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelWriteDto'
        description: Channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update a channel
      tags:
      - Channel
      x-codegen-request-body-name: channel
  /organizations/{org_id}/completions:
    post:
      description: Create a new chat-completion for a specific channel
      operationId: CreateChatCompletion
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequestDto'
        description: Chat Completion Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIgencyMessage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a chat-completion
      tags:
      - ChatCompletions
      x-codegen-request-body-name: request
  /organizations/{org_id}/completions/cancel/{channel_id}:
    post:
      description: Cancel an ongoing chat-completion for a specific channel
      operationId: CancelChatCompletion
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Cancel a chat-completion
      tags:
      - ChatCompletions
  /organizations/{org_id}/completions/stream:
    post:
      description: Create a new streaming chat-completion for a specific channel
      operationId: CreateChatCompletionStreaming
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequestDto'
        description: Chat Completion Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIgencyMessage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a streaming chat-completion
      tags:
      - ChatCompletions
      x-codegen-request-body-name: request
  /organizations/{org_id}/connection_token/{channel_id}:
    post:
      description: Create a connection token for Server-Sent Events (SSE) subscription
      operationId: CreateConnectionTokenHandler
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: invalid channel ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: unauthorized access
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: internal error
      security:
      - ApiKey: []
      summary: Create a connection token for SSE
      tags:
      - ConnectionTokens
  /organizations/{org_id}/embeddings/text:
    post:
      description: Get the embeddings for the texts
      operationId: EmbedText
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextEmbeddingRequestDto'
        description: Text Embedding Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextEmbedding'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Service Unavailable
      security:
      - ApiKey: []
      summary: Get the embeddings for the texts
      tags:
      - Embeddings
      x-codegen-request-body-name: request
  /organizations/{org_id}/executionlogs/costs:
    get:
      description: "Get the total costs of execution logs by user, org, and date range."
      operationId: GetExecutionLogsCosts
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: User ID
        in: query
        name: user_id
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionLogCosts'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get execution logs costs
      tags:
      - ExecutionLogs
  /organizations/{org_id}/executionlogs/search:
    get:
      description: "Search for execution logs by user, org, API key, and date range.\
        \ leave any field empty to no limit by that field."
      operationId: SearchExecutionLogs
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: User ID
        in: query
        name: user_id
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      - description: Offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionLogResults'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search execution logs
      tags:
      - ExecutionLogs
  /organizations/{org_id}/files/{recipe_name}/{channel_id}:
    post:
      description: Uploads a file and processes it using the specified recipe
      operationId: HandleFileUpload
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: channelID to receive updates
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      - description: Recipe name
        in: path
        name: recipe_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HandleFileUpload_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - ApiKey: []
      summary: Upload and process a file
      tags:
      - Files
  /organizations/{org_id}/functioncalls:
    get:
      description: Returns a list of function calls
      operationId: GetFunctionCalls
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunctionCall'
                type: array
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - ApiKey: []
      summary: List accessible function calls
      tags:
      - FunctionCalls
  /organizations/{org_id}/functioncalls/{name}:
    get:
      description: Returns the definition of a function call
      operationId: GetFunctionCall
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Function call name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionCall'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
      security:
      - ApiKey: []
      summary: Get function call definition
      tags:
      - FunctionCalls
    post:
      description: Executes a specified function call with provided arguments
      operationId: ExecuteFunctionCall
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Function call name
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Function call arguments
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterExecutionResults'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Execute a function call
      tags:
      - FunctionCalls
      x-codegen-request-body-name: arguments
  /organizations/{org_id}/image/generate:
    post:
      description: Generates an image using a model and service
      operationId: CreateImage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
        description: Image Generation Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyImage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Generates an image
      tags:
      - Image
      x-codegen-request-body-name: request
  /organizations/{org_id}/messages:
    post:
      description: Create a new message with the provided details
      operationId: CreateMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIgencyMessageWriteDto'
        description: Message
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyMessage'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new message
      tags:
      - Messages
      x-codegen-request-body-name: message
  /organizations/{org_id}/messages/channel/{channel_id}:
    get:
      description: Retrieve all messages for a specific channel
      operationId: GetChannelMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Channel ID
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIgencyMessage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get messages for a channel
      tags:
      - Messages
  /organizations/{org_id}/messages/search:
    get:
      description: "Search for messages based on content, sender ID, and date range"
      operationId: SearchMessages
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Search by content
        in: query
        name: content
        schema:
          type: string
      - description: Search by sender ID
        in: query
        name: sender_id
        schema:
          type: string
      - description: Start date in Unix milliseconds
        in: query
        name: start_date
        schema:
          type: string
      - description: End date in Unix milliseconds
        in: query
        name: end_date
        schema:
          type: string
      - description: Limit results
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AIgencyMessage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Search messages
      tags:
      - Messages
  /organizations/{org_id}/messages/{id}:
    delete:
      description: Delete a message by its ID
      operationId: DeleteMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyMessage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a message
      tags:
      - Messages
    get:
      description: Retrieve a message by its ID
      operationId: GetMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyMessage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a message by ID
      tags:
      - Messages
    put:
      description: Update a message by its ID
      operationId: UpdateMessage
      parameters:
      - description: organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Message ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIgencyMessageWriteDto'
        description: Message
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIgencyMessage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Update a message
      tags:
      - Messages
      x-codegen-request-body-name: message
  /organizations/{org_id}/missions:
    get:
      description: List all missions of an organization and owned by the current user
      operationId: ListMissionsByOrg
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Offset the number of missions returned
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit the number of missions returned
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mission'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List all missions of an organization and owned by the current user
      tags:
      - Missions
  /organizations/{org_id}/missions/byexecutor/{mission_executor_id}:
    get:
      description: List all missions by a a executorID (Agent Team or Agent)
      operationId: ListMissionsByExecutorID
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent or Agent-Team ID
        in: path
        name: mission_executor_id
        required: true
        schema:
          type: string
      - description: Offset the number of missions returned
        in: query
        name: offset
        schema:
          type: integer
      - description: Limit the number of missions returned
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mission'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: List all missions by a executorID (Agent Team or Agent)
      tags:
      - Missions
  /organizations/{org_id}/missions/{mission_executor_id}:
    post:
      description: Create a new mission
      operationId: CreateMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Agent Team ID OR Agent ID to run the mission with
        in: path
        name: mission_executor_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MissionWriteDto'
        description: Mission object that needs to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mission'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Create a new mission
      tags:
      - Missions
      x-codegen-request-body-name: mission
  /organizations/{org_id}/missions/{mission_id}:
    delete:
      description: Delete a mission
      operationId: DeleteMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Delete a mission
      tags:
      - Missions
    get:
      description: Get a mission
      operationId: GetMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mission'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Get a mission
      tags:
      - Missions
  /organizations/{org_id}/missions/{mission_id}/cancel:
    post:
      description: Cancel a mission
      operationId: CancelMission
      parameters:
      - description: Organization ID
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Mission ID
        in: path
        name: mission_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: Cancel a mission
      tags:
      - Missions
components:
  schemas:
    AIModel:
      example:
        internal_id: internal_id
        owner_id: owner_id
        created_at: 1
        description: description
        model_id: model_id
        documentation_url: documentation_url
        accepted_file_mimetypes:
        - accepted_file_mimetypes
        - accepted_file_mimetypes
        constraints:
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
        features:
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        service_host_locations:
        - ""
        - ""
        owner_organization_id: owner_organization_id
        updated_at: 9
        service_id: service_id
        is_public: true
        name: name
        updated_by: updated_by
        parameter_definitions: "{}"
        id: id
        parameters: "{}"
      properties:
        accepted_file_mimetypes:
          items:
            type: string
          type: array
        constraints:
          items:
            $ref: '#/components/schemas/AIModelConstraint'
          type: array
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        documentation_url:
          type: string
        features:
          items:
            $ref: '#/components/schemas/AIModelFeature'
          type: array
        id:
          maxLength: 64
          minLength: 1
          type: string
        internal_id:
          type: string
        is_public:
          type: boolean
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameter_definitions:
          properties: {}
          type: object
        parameters:
          properties: {}
          type: object
        service_host_locations:
          items:
            $ref: '#/components/schemas/HostingLocation'
          type: array
        service_id:
          maxLength: 64
          minLength: 1
          type: string
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
      required:
      - id
      - model_id
      - name
      - owner_id
      - owner_organization_id
      - service_id
      type: object
    AIModelCapability:
      enum:
      - ""
      - function-calling
      - function-calling_streaming
      - accepts-document-files
      - text-to-embedding
      - text-to-text
      - text-to-text_streaming
      - text-to-image
      - text-to-speech
      - text-to-speech_streaming
      - text-to-music
      - text-to-music_streaming
      - text-to-video
      - text-to-video_streaming
      - speech-to-embedding
      - speech-to-text
      - speech-to-text_streaming
      - image-to-embedding
      - image-to-text
      - video-to-embedding
      - video-to-text
      - video-to-text_streaming
      type: string
      x-enum-varnames:
      - AIModelCapabilityNil
      - AIModelCapabilityFunctionCalling
      - AIModelCapabilityFunctionCallingStreaming
      - AIModelCapabilityAcceptsDocumentFiles
      - AIModelCapabilityTextToEmbedding
      - AIModelCapabilityTextToText
      - AIModelCapabilityTextToTextStreaming
      - AIModelCapabilityTextToImage
      - AIModelCapabilityTextToSpeech
      - AIModelCapabilityTextToSpeechStreaming
      - AIModelCapabilityTextToMusic
      - AIModelCapabilityTextToMusicStreaming
      - AIModelCapabilityTextToVideo
      - AIModelCapabilityTextToVideoStreaming
      - AIModelCapabilitySpeechToEmbedding
      - AIModelCapabilitySpeechToText
      - AIModelCapabilitySpeechToTextStreaming
      - AIModelCapabilityImageToEmbedding
      - AIModelCapabilityImageToText
      - AIModelCapabilityVideoToEmbedding
      - AIModelCapabilityVideoToText
      - AIModelCapabilityVideoToTextStreaming
    AIModelConstraint:
      example:
        unit: tokens
        min: 6.027456183070403
        max: 0.8008281904610115
        direction: input
      properties:
        direction:
          $ref: '#/components/schemas/AIModelConstraintDirection'
        max:
          type: number
        min:
          type: number
        unit:
          $ref: '#/components/schemas/AIModelMinMaxUnit'
      type: object
    AIModelConstraintDirection:
      enum:
      - input
      - output
      type: string
      x-enum-varnames:
      - AIModelConstraintDirectionMin
      - AIModelConstraintDirectionMax
    AIModelCostUnit:
      enum:
      - input-tokens-per-million
      - output-tokens-per-million
      - input-characters-per-million
      - image-input-file
      - audio-input-per-second
      - video-input-per-second
      - image-generation-per-image
      - image-generation-per-pixel
      - audio-generation-per-second
      - video-generation-per-second
      - per-function-call
      type: string
      x-enum-varnames:
      - AIModelCostUnitInputPerMillionTokens
      - AIModelCostUnitOutputPerMillionTokens
      - AIModelCostUnitInputPerMillionCharacters
      - AIModelCostUnitImageInputPerFile
      - AIModelCostUnitAudioInputPerSecond
      - AIModelCostUnitVideoInputPerSecond
      - AIModelCostUnitImageGenerationPerImage
      - AIModelCostUnitImageGenerationPerPixel
      - AIModelCostUnitAudioGenerationPerSecond
      - AIModelCostUnitVideoGenerationPerSecond
      - AIModelCostUnitPerFunctionCall
    AIModelFeature:
      example:
        capability: ""
        cost_items:
        - resulting_cost_in_euro: 2.3021358869347655
          used_units: 7.061401241503109
          description: description
          cost_per_unit_in_euro: 5.637376656633329
          cost_unit: null
        - resulting_cost_in_euro: 2.3021358869347655
          used_units: 7.061401241503109
          description: description
          cost_per_unit_in_euro: 5.637376656633329
          cost_unit: null
        cost_item_templates:
        - description: description
          cost_per_unit_in_euro: 5.962133916683182
          cost_unit: input-tokens-per-million
        - description: description
          cost_per_unit_in_euro: 5.962133916683182
          cost_unit: input-tokens-per-million
        constraints:
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
      properties:
        capability:
          $ref: '#/components/schemas/AIModelCapability'
        constraints:
          items:
            $ref: '#/components/schemas/AIModelConstraint'
          type: array
        cost_item_templates:
          items:
            $ref: '#/components/schemas/ExecutionCostTemplate'
          type: array
        cost_items:
          items:
            $ref: '#/components/schemas/ExecutionUsageCost'
          type: array
      type: object
    AIModelMinMaxUnit:
      enum:
      - tokens
      - characters
      - files
      - seconds
      - images
      - pixels
      - megabytes
      type: string
      x-enum-varnames:
      - AIModelMinMaxUnitTokens
      - AIModelMinMaxUnitCharacters
      - AIModelMinMaxUnitFiles
      - AIModelMinMaxUnitSeconds
      - AIModelMinMaxUnitImages
      - AIModelMinMaxUnitPixels
      - AIModelMinMaxUnitFilesizeMegabytes
    AIModelServiceObject:
      example:
        internal_id: internal_id
        owner_id: owner_id
        created_at: 6
        description: description
        owner_organization_id: owner_organization_id
        hosting_locations:
          key: ""
        updated_at: 1
        cost_multiplier: 0.8008281904610115
        is_public: true
        name: name
        updated_by: updated_by
        id: id
        service_impl: service_impl
      properties:
        cost_multiplier:
          description: "1.0 is default, we use this to adjust our margin"
          type: number
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        hosting_locations:
          additionalProperties:
            $ref: '#/components/schemas/HostingLocation'
          type: object
        id:
          maxLength: 64
          minLength: 1
          type: string
        internal_id:
          type: string
        is_public:
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        service_impl:
          description: this is used for internal identification!
          maxLength: 64
          minLength: 1
          type: string
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
      required:
      - id
      - name
      - owner_id
      - owner_organization_id
      - service_impl
      type: object
    AIModelServiceWithModels:
      example:
        models:
        - internal_id: internal_id
          owner_id: owner_id
          created_at: 1
          description: description
          model_id: model_id
          documentation_url: documentation_url
          accepted_file_mimetypes:
          - accepted_file_mimetypes
          - accepted_file_mimetypes
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          features:
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
          service_host_locations:
          - ""
          - ""
          owner_organization_id: owner_organization_id
          updated_at: 9
          service_id: service_id
          is_public: true
          name: name
          updated_by: updated_by
          parameter_definitions: "{}"
          id: id
          parameters: "{}"
        - internal_id: internal_id
          owner_id: owner_id
          created_at: 1
          description: description
          model_id: model_id
          documentation_url: documentation_url
          accepted_file_mimetypes:
          - accepted_file_mimetypes
          - accepted_file_mimetypes
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          features:
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
          - capability: ""
            cost_items:
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            - resulting_cost_in_euro: 2.3021358869347655
              used_units: 7.061401241503109
              description: description
              cost_per_unit_in_euro: 5.637376656633329
              cost_unit: null
            cost_item_templates:
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            - description: description
              cost_per_unit_in_euro: 5.962133916683182
              cost_unit: input-tokens-per-million
            constraints:
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
            - unit: tokens
              min: 6.027456183070403
              max: 0.8008281904610115
              direction: input
          service_host_locations:
          - ""
          - ""
          owner_organization_id: owner_organization_id
          updated_at: 9
          service_id: service_id
          is_public: true
          name: name
          updated_by: updated_by
          parameter_definitions: "{}"
          id: id
          parameters: "{}"
        service:
          internal_id: internal_id
          owner_id: owner_id
          created_at: 6
          description: description
          owner_organization_id: owner_organization_id
          hosting_locations:
            key: ""
          updated_at: 1
          cost_multiplier: 0.8008281904610115
          is_public: true
          name: name
          updated_by: updated_by
          id: id
          service_impl: service_impl
      properties:
        models:
          items:
            $ref: '#/components/schemas/AIModel'
          type: array
        service:
          $ref: '#/components/schemas/AIModelServiceObject'
      type: object
    AIModelServiceWriteDto:
      example:
        hosting_locations:
          key: ""
        internal_id: internal_id
        cost_multiplier: 0.8008281904610115
        is_public: true
        name: name
        description: description
        service_impl: service_impl
      properties:
        cost_multiplier:
          description: "1.0 is default, we use this to adjust our margin"
          format: double
          type: number
        description:
          maxLength: 1024
          type: string
        hosting_locations:
          additionalProperties:
            $ref: '#/components/schemas/HostingLocation'
          type: object
        internal_id:
          type: string
        is_public:
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          type: string
        service_impl:
          description: this is used for internal identification!
          maxLength: 64
          minLength: 1
          type: string
      required:
      - name
      - service_impl
      type: object
    AIModelWriteDto:
      example:
        internal_id: internal_id
        description: description
        model_id: model_id
        documentation_url: documentation_url
        accepted_file_mimetypes:
        - accepted_file_mimetypes
        - accepted_file_mimetypes
        constraints:
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
        - unit: tokens
          min: 6.027456183070403
          max: 0.8008281904610115
          direction: input
        features:
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        service_host_locations:
        - ""
        - ""
        service_id: service_id
        is_public: true
        name: name
        parameter_definitions: "{}"
        parameters:
          key: "{}"
      properties:
        accepted_file_mimetypes:
          items:
            type: string
          type: array
        constraints:
          items:
            $ref: '#/components/schemas/AIModelConstraint'
          type: array
        description:
          maxLength: 1024
          type: string
        documentation_url:
          type: string
        features:
          items:
            $ref: '#/components/schemas/AIModelFeature'
          type: array
        internal_id:
          type: string
        is_public:
          type: boolean
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        parameter_definitions:
          properties: {}
          type: object
        parameters:
          additionalProperties:
            type: object
          type: object
        service_host_locations:
          items:
            $ref: '#/components/schemas/HostingLocation'
          type: array
        service_id:
          maxLength: 64
          minLength: 1
          type: string
      type: object
    AIgencyImage:
      example:
        fileName: fileName
        agent_id: agent_id
        processingErrors:
        - processingErrors
        - processingErrors
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        url: url
        metaData:
          key: "{}"
        org_owner_id: org_owner_id
        fileSize: 0
        user_id: user_id
        message_reference_id: message_reference_id
        mimetype: mimetype
        channel_id: channel_id
        parameters:
          key: ""
        localFilePath: localFilePath
        username: username
      properties:
        agent_id:
          type: string
        channel_id:
          type: string
        fileName:
          type: string
        fileSize:
          type: integer
        localFilePath:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        metaData:
          additionalProperties:
            type: object
          type: object
        mimetype:
          type: string
        mission_id:
          type: string
        org_owner_id:
          type: string
        parameters:
          additionalProperties: true
          type: object
        processingErrors:
          items:
            type: string
          type: array
        url:
          type: string
        user_id:
          type: string
        username:
          type: string
      type: object
    AIgencyMessage:
      example:
        attachments:
          files:
          - metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
          - metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
        reference_id: reference_id
        mission_id: mission_id
        created_at: 6
        sender_name: sender_name
        error:
          status_code: 5
          original_status_code: 1
          error_code: ""
          message: message
        type: "{}"
        ai_service_id: ai_service_id
        content:
          data:
          - file:
              metaData:
                key: "{}"
              fileName: fileName
              fileSize: 0
              mimetype: mimetype
              id: id
              localFilePath: localFilePath
              url: url
            text: text
            type: text
          - file:
              metaData:
                key: "{}"
              fileName: fileName
              fileSize: 0
              mimetype: mimetype
              id: id
              localFilePath: localFilePath
              url: url
            text: text
            type: text
          full_text: full_text
        sender_id: sender_id
        token_count: 5
        finish_reason: ""
        updated_at: 2
        sender_conversation_role: "{}"
        meta_data: "{}"
        id: id
        channel_name: channel_name
        response_to_id: response_to_id
        created_for_feature:
          capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        ai_model_id: ai_model_id
        token_direction: "{}"
        owner_organization_id: owner_organization_id
        aigent_thread_id: aigent_thread_id
        channel_id: channel_id
        chat_completion_config: "{}"
        parameters: "{}"
      properties:
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        aigent_thread_id:
          maxLength: 64
          type: string
        attachments:
          $ref: '#/components/schemas/AIgencyMessageFileList'
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        channel_name:
          maxLength: 255
          minLength: 1
          type: string
        chat_completion_config:
          properties: {}
          type: object
        content:
          $ref: '#/components/schemas/AIgencyMessageContentList'
        created_at:
          format: int64
          type: integer
        created_for_feature:
          $ref: '#/components/schemas/AIModelFeature'
        error:
          $ref: '#/components/schemas/AiServiceError'
        finish_reason:
          $ref: '#/components/schemas/FinishReason'
        id:
          maxLength: 64
          minLength: 1
          type: string
        meta_data:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        reference_id:
          maxLength: 64
          type: string
        response_to_id:
          maxLength: 64
          type: string
        sender_conversation_role:
          allOf:
          - $ref: '#/components/schemas/ConversationRole'
          type: object
        sender_id:
          maxLength: 64
          minLength: 1
          type: string
        sender_name:
          maxLength: 255
          minLength: 1
          type: string
        token_count:
          type: integer
        token_direction:
          allOf:
          - $ref: '#/components/schemas/TokenDirection'
          type: object
        type:
          allOf:
          - $ref: '#/components/schemas/AIgencyMessageType'
          type: object
        updated_at:
          format: int64
          type: integer
      required:
      - ai_model_id
      - ai_service_id
      - channel_id
      - channel_name
      - created_at
      - id
      - owner_organization_id
      - sender_conversation_role
      - sender_id
      - sender_name
      - token_direction
      - type
      - updated_at
      type: object
    AIgencyMessageContent:
      example:
        file:
          metaData:
            key: "{}"
          fileName: fileName
          fileSize: 0
          mimetype: mimetype
          id: id
          localFilePath: localFilePath
          url: url
        text: text
        type: text
      properties:
        file:
          $ref: '#/components/schemas/AIgencyMessageFile'
        text:
          type: string
        type:
          $ref: '#/components/schemas/AIgencyMessageContentType'
      type: object
    AIgencyMessageContentList:
      example:
        data:
        - file:
            metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
          text: text
          type: text
        - file:
            metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
          text: text
          type: text
        full_text: full_text
      properties:
        data:
          items:
            $ref: '#/components/schemas/AIgencyMessageContent'
          type: array
        full_text:
          type: string
      type: object
    AIgencyMessageContentType:
      enum:
      - text
      - file
      type: string
      x-enum-varnames:
      - AIgencyMessageContentTypeText
      - AIgencyMessageContentTypeFile
    AIgencyMessageFile:
      example:
        metaData:
          key: "{}"
        fileName: fileName
        fileSize: 0
        mimetype: mimetype
        id: id
        localFilePath: localFilePath
        url: url
      properties:
        fileName:
          type: string
        fileSize:
          type: integer
        id:
          type: string
        localFilePath:
          description: "TODO: filter out when returning to client"
          type: string
        metaData:
          additionalProperties:
            type: object
          type: object
        mimetype:
          type: string
        url:
          type: string
      type: object
    AIgencyMessageFileList:
      example:
        files:
        - metaData:
            key: "{}"
          fileName: fileName
          fileSize: 0
          mimetype: mimetype
          id: id
          localFilePath: localFilePath
          url: url
        - metaData:
            key: "{}"
          fileName: fileName
          fileSize: 0
          mimetype: mimetype
          id: id
          localFilePath: localFilePath
          url: url
      properties:
        files:
          items:
            $ref: '#/components/schemas/AIgencyMessageFile'
          type: array
      type: object
    AIgencyMessageList:
      type: object
    AIgencyMessageType:
      enum:
      - message
      - stateUpdate
      - delta
      - error
      type: string
      x-enum-varnames:
      - AIgencyMessageTypeMessage
      - AIgencyMessageTypeStateUpdate
      - AIgencyMessageTypeDelta
      - AIgencyMessageTypeError
    AIgencyMessageWriteDto:
      example:
        channel_name: channel_name
        response_to_id: response_to_id
        attachments:
          files:
          - metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
          - metaData:
              key: "{}"
            fileName: fileName
            fileSize: 0
            mimetype: mimetype
            id: id
            localFilePath: localFilePath
            url: url
        reference_id: reference_id
        mission_id: mission_id
        sender_name: sender_name
        type: "{}"
        ai_model_id: ai_model_id
        ai_service_id: ai_service_id
        content:
          data:
          - file:
              metaData:
                key: "{}"
              fileName: fileName
              fileSize: 0
              mimetype: mimetype
              id: id
              localFilePath: localFilePath
              url: url
            text: text
            type: text
          - file:
              metaData:
                key: "{}"
              fileName: fileName
              fileSize: 0
              mimetype: mimetype
              id: id
              localFilePath: localFilePath
              url: url
            text: text
            type: text
          full_text: full_text
        sender_conversation_role: "{}"
        aigent_thread_id: aigent_thread_id
        meta_data: "{}"
        channel_id: channel_id
        chat_completion_config: "{}"
        parameters: "{}"
      properties:
        ai_model_id:
          maxLength: 64
          minLength: 1
          type: string
        ai_service_id:
          maxLength: 64
          minLength: 1
          type: string
        aigent_thread_id:
          maxLength: 64
          minLength: 1
          type: string
        attachments:
          $ref: '#/components/schemas/AIgencyMessageFileList'
        channel_id:
          maxLength: 64
          minLength: 1
          type: string
        channel_name:
          maxLength: 255
          minLength: 1
          type: string
        chat_completion_config:
          properties: {}
          type: object
        content:
          $ref: '#/components/schemas/AIgencyMessageContentList'
        meta_data:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        reference_id:
          maxLength: 64
          minLength: 1
          type: string
        response_to_id:
          maxLength: 64
          minLength: 1
          type: string
        sender_conversation_role:
          allOf:
          - $ref: '#/components/schemas/ConversationRole'
          type: object
        sender_name:
          maxLength: 255
          minLength: 1
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/AIgencyMessageType'
          type: object
      required:
      - ai_model_id
      - ai_service_id
      - aigent_thread_id
      - channel_id
      - channel_name
      - mission_id
      - sender_conversation_role
      - sender_name
      - type
      type: object
    AdapterExecutionResults:
      example:
        result_files:
        - mime_type: mime_type
          file_name: file_name
          local_path: local_path
          file_size: 0
          url: url
        - mime_type: mime_type
          file_name: file_name
          local_path: local_path
          file_size: 0
          url: url
        err: "{}"
        adapter_name: adapter_name
        job_id: job_id
        final_state: Queued
        result_texts:
        - result_texts
        - result_texts
      properties:
        adapter_name:
          type: string
        err:
          type: object
        final_state:
          $ref: '#/components/schemas/AdapterExecutionState'
        job_id:
          type: string
        result_files:
          items:
            $ref: '#/components/schemas/AdapterFileInfo'
          type: array
        result_texts:
          items:
            type: string
          type: array
      type: object
    AdapterExecutionState:
      enum:
      - Queued
      - Running
      - Completed
      - Cancelled
      - Failed
      - Timeout
      - Unknown
      type: string
      x-enum-varnames:
      - AdapterExecutionState_Queued
      - AdapterExecutionState_Running
      - AdapterExecutionState_Completed
      - AdapterExecutionState_Cancelled
      - AdapterExecutionState_Failed
      - AdapterExecutionState_Timeout
      - AdapterExecutionState_Unknown
    AdapterFileInfo:
      example:
        mime_type: mime_type
        file_name: file_name
        local_path: local_path
        file_size: 0
        url: url
      properties:
        file_name:
          type: string
        file_size:
          format: int64
          type: integer
        local_path:
          type: string
        mime_type:
          type: string
        url:
          type: string
      type: object
    Agent:
      example:
        capabilities:
        - chat
        - chat
        internal_id: internal_id
        system_messages:
        - system_messages
        - system_messages
        owner_id: owner_id
        assigned_tools:
        - assigned_tools
        - assigned_tools
        created_at: 0
        description: description
        model_id: model_id
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        attached_file_ids:
        - attached_file_ids
        - attached_file_ids
        owner_organization_id: owner_organization_id
        avatar_url: avatar_url
        updated_at: 6
        use_tools: true
        is_public: true
        meta_data: "{}"
        name: name
        updated_by: updated_by
        model_host_location: ""
        id: id
        parameters: "{}"
      properties:
        assigned_tools:
          items:
            type: string
          type: array
          uniqueItems: true
        attached_file_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        avatar_url:
          type: string
        capabilities:
          items:
            $ref: '#/components/schemas/AgentCapability'
          type: array
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        internal_id:
          type: string
        is_public:
          type: boolean
        meta_data:
          properties: {}
          type: object
        model_host_location:
          $ref: '#/components/schemas/HostingLocation'
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        updated_at:
          format: int64
          type: integer
        updated_by:
          maxLength: 64
          minLength: 1
          type: string
        use_tools:
          type: boolean
      required:
      - id
      - model_id
      - name
      - owner_id
      - owner_organization_id
      type: object
    AgentCapability:
      enum:
      - chat
      - embedding
      - image
      type: string
      x-enum-varnames:
      - AgentCapabilityChat
      - AgentCapabilityEmbedding
      - AgentCapabilityImage
    AgentPrompt:
      example:
        visibility: private
        owner_id: owner_id
        created_at: 0
        current_version: 6
        description: description
        thumbnail_url: thumbnail_url
        title: title
        space: space
        tags:
        - tags
        - tags
        owner_organization_id: owner_organization_id
        updated_at: 1
        versions:
        - created_at: 5
          created_by: created_by
          version: 5
          content: content
        - created_at: 5
          created_by: created_by
          version: 5
          content: content
        id: id
      properties:
        created_at:
          type: integer
        current_version:
          type: integer
        description:
          type: string
        id:
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        space:
          type: string
        tags:
          items:
            type: string
          type: array
        thumbnail_url:
          type: string
        title:
          type: string
        updated_at:
          type: integer
        versions:
          items:
            $ref: '#/components/schemas/PromptVersion'
          type: array
        visibility:
          $ref: '#/components/schemas/AgentPromptVisibilityStates'
      required:
      - id
      - owner_id
      - owner_organization_id
      - title
      type: object
    AgentPromptRenderDto:
      example:
        var_replacements:
          key: var_replacements
        prompt_id: prompt_id
        content: content
      properties:
        content:
          type: string
        prompt_id:
          type: string
        var_replacements:
          additionalProperties:
            type: string
          type: object
      type: object
    AgentPromptRenderedDto:
      example:
        rendered_prompt: rendered_prompt
      properties:
        rendered_prompt:
          type: string
      type: object
    AgentPromptVisibilityStates:
      enum:
      - private
      - org
      - public
      - curated
      type: string
      x-enum-varnames:
      - AgentPromptVisibilityPrivate
      - AgentPromptVisibilityOrganization
      - AgentPromptVisibilityPublic
      - AgentPromptVisibilityCurated
    AgentTeam:
      example:
        initial_user_messages_mode: "{}"
        system_messages_mode: "{}"
        system_messages:
        - system_messages
        - system_messages
        owner_id: owner_id
        created_at: 0
        description: description
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        tags:
        - tags
        - tags
        coordinating_agent_id: coordinating_agent_id
        owner_organization_id: owner_organization_id
        updated_at: 6
        meta_data: "{}"
        name: name
        updated_by: updated_by
        id: id
        agent_ids:
        - agent_ids
        - agent_ids
      properties:
        agent_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        coordinating_agent_id:
          maxLength: 64
          minLength: 1
          type: string
        created_at:
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        initial_user_messages_mode:
          allOf:
          - $ref: '#/components/schemas/PromptInjectionMode'
          type: object
        meta_data:
          properties: {}
          type: object
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        system_messages_mode:
          allOf:
          - $ref: '#/components/schemas/PromptInjectionMode'
          type: object
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        updated_at:
          format: int64
          type: integer
        updated_by:
          maxLength: 64
          minLength: 1
          type: string
      required:
      - id
      - name
      - owner_id
      - owner_organization_id
      type: object
    AgentTeamWriteDto:
      example:
        initial_user_messages_mode: "{}"
        coordinating_agent_id: coordinating_agent_id
        system_messages_mode: "{}"
        system_messages:
        - system_messages
        - system_messages
        meta_data: "{}"
        name: name
        description: description
        agent_ids:
        - agent_ids
        - agent_ids
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        tags:
        - tags
        - tags
      properties:
        agent_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        coordinating_agent_id:
          maxLength: 64
          minLength: 1
          type: string
        description:
          maxLength: 1024
          type: string
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        initial_user_messages_mode:
          allOf:
          - $ref: '#/components/schemas/PromptInjectionMode'
          type: object
        meta_data:
          properties: {}
          type: object
        name:
          maxLength: 255
          minLength: 1
          type: string
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        system_messages_mode:
          allOf:
          - $ref: '#/components/schemas/PromptInjectionMode'
          type: object
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    AgentWriteDto:
      example:
        internal_id: internal_id
        system_messages:
        - system_messages
        - system_messages
        assigned_tools:
        - assigned_tools
        - assigned_tools
        description: description
        model_id: model_id
        initial_user_messages:
        - initial_user_messages
        - initial_user_messages
        attached_file_ids:
        - attached_file_ids
        - attached_file_ids
        avatar_url: avatar_url
        use_tools: true
        is_public: true
        meta_data: "{}"
        name: name
        model_host_location: ""
        parameters: "{}"
      properties:
        assigned_tools:
          items:
            type: string
          type: array
          uniqueItems: true
        attached_file_ids:
          items:
            type: string
          type: array
          uniqueItems: true
        avatar_url:
          type: string
        description:
          maxLength: 1024
          type: string
        initial_user_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        internal_id:
          type: string
        is_public:
          type: boolean
        meta_data:
          properties: {}
          type: object
        model_host_location:
          $ref: '#/components/schemas/HostingLocation'
        model_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        parameters:
          properties: {}
          type: object
        system_messages:
          items:
            type: string
          type: array
          uniqueItems: true
        use_tools:
          type: boolean
      type: object
    AiServiceError:
      example:
        status_code: 5
        original_status_code: 1
        error_code: ""
        message: message
      properties:
        error_code:
          $ref: '#/components/schemas/ApiErrorCode'
        message:
          type: string
        original_status_code:
          type: integer
        status_code:
          type: integer
      required:
      - error_code
      - message
      - original_status_code
      - status_code
      type: object
    ApiError:
      example:
        code: ""
        error: error
      properties:
        code:
          $ref: '#/components/schemas/ApiErrorCode'
        error:
          type: string
      type: object
    ApiErrorCode:
      enum:
      - ""
      - permission_denied
      - unknown
      - unauthorized
      - invalid_payload
      - invalid_params
      - agent_not_found
      - invalid_agent_id
      - failed_to_create_agent
      - failed_to_create_default_agents
      - failed_to_delete_agent
      - failed_to_get_agent
      - failed_to_update_agent
      - invalid_executor_id
      - invalid_agent_team_id
      - agent_team_not_found
      - failed_to_create_agent_team
      - failed_to_update_agent_team
      - failed_to_delete_agent_team
      - failed_to_fetch_agent_team
      - failed_to_add_agent
      - failed_to_remove_agent
      - failed_to_update_messages
      - ai_model_not_found
      - invalid_ai_model_id
      - failed_to_create_ai_model
      - failed_to_update_ai_model
      - failed_to_delete_ai_model
      - failed_to_fetch_ai_model
      - invalid_ai_model_service_id
      - ai_model_service_not_found
      - failed_to_create_ai_model_service
      - failed_to_update_ai_model_service
      - failed_to_delete_ai_model_service
      - failed_to_fetch_ai_model_service
      - ai_service_bad_request
      - ai_service_content_filter
      - ai_service_authentication
      - ai_service_permission_denied
      - ai_service_request_too_large
      - ai_service_rate_limit
      - ai_service_internal_server_error
      - ai_service_overload
      - no_audio_file_saved
      - failed_to_create_audio_transcription_context
      - failed_to_create_audio_generation_context
      - failed_to_finalize_audio_stream
      - failed_to_generate_audio
      - channel_not_found
      - invalid_channel_id
      - failed_to_create_channel
      - failed_to_update_channel
      - failed_to_delete_channel
      - failed_to_fetch_channel
      - failed_to_fetch_channels
      - failed_to_add_presence
      - failed_to_remove_presence
      - failed_to_fetch_presence
      - failed_to_fetch_subscribed_channels
      - failed_to_retrieve_dependencies
      - failed_to_store_chat_completion_user
      - failed_to_create_chat_context
      - failed_to_acquire_chat_completion_lock
      - chat_completion_is_locked_for_channel
      - failed_to_check_user_authorization
      - failed_to_release_chat_completion_lock
      - capability_not_available
      - no_messages_found
      - failed_to_validate_request_parameters
      - failed_to_create_connection_token
      - failed_to_embed_text
      - failed_to_search_execution_logs
      - start_date_must_be_before_end_date
      - invalid_file_id
      - functioncall_not_found
      - invalid_message_id
      - message_not_found
      - failed_to_update_message
      - failed_to_delete_message
      - failed_to_fetch_message
      - failed_to_search_messages
      - failed_to_create_message
      - failed_to_retrieve_channel_messages
      - failed_to_retrieve_messages_from_list
      - failed_to_form_user_message
      - mission_not_found
      - missions_not_found
      - failed_to_get_mission
      - failed_to_create_mission
      - failed_to_delete_mission
      - invalid_mission_id
      - invalid mission executor ID
      - mission_not_done
      - invalid_organization_id
      - organization_cost_budget_not_found
      - failed_to_create_organization_cost_budget
      - failed_to_update_organization_cost_budget
      - failed_to_get_organization_cost_budget
      - insufficient_budget
      - organization_cost_budget_exists
      - invalid_tool_id
      - unknown_tool_id
      - invalid_prompt_id
      - prompt_not_found
      - invalid_prompt_data
      - prompt_already_exists
      - invalid_prompt_version
      - variable_not_found
      - invalid_variable_value
      type: string
      x-enum-varnames:
      - ErrCodeNil
      - ErrCodePermissionDenied
      - ErrCodeUnknown
      - ErrCodeUnauthorized
      - ErrCodeInvalidPayload
      - ErrCodeInvalidParams
      - ErrCodeAgentNotFound
      - ErrCodeInvalidAgentID
      - ErrCodeFailedToCreateAgent
      - ErrCodeFailedToCreateDefaultAgents
      - ErrCodeFailedToDeleteAgent
      - ErrCodeFailedToGetAgent
      - ErrCodeFailedToUpdateAgent
      - ErrCodeInvalidExecutorID
      - ErrCodeInvalidAgentTeamID
      - ErrCodeAgentTeamNotFound
      - ErrCodeFailedToCreateAgentTeam
      - ErrCodeFailedToUpdateAgentTeam
      - ErrCodeFailedToDeleteAgentTeam
      - ErrCodeFailedToFetchAgentTeam
      - ErrCodeFailedToAddAgent
      - ErrCodeFailedToRemoveAgent
      - ErrCodeFailedToUpdateMessages
      - ErrCodeAIModelNotFound
      - ErrCodeInvalidAIModelID
      - ErrCodeFailedToCreateAIModel
      - ErrCodeFailedToUpdateAIModel
      - ErrCodeFailedToDeleteAIModel
      - ErrCodeFailedToFetchAIModel
      - ErrCodeInvalidAIModelServiceID
      - ErrCodeAIModelServiceNotFound
      - ErrCodeFailedToCreateAIModelService
      - ErrCodeFailedToUpdateAIModelService
      - ErrCodeFailedToDeleteAIModelService
      - ErrCodeFailedToFetchAIModelService
      - ErrCodeAiServiceBadRequest
      - ErrCodeAiServiceContentFilter
      - ErrCodeAiServiceAuthentication
      - ErrCodeAiServicePermissionDenied
      - ErrCodeAiServiceRequestTooLarge
      - ErrCodeAiServiceRateLimit
      - ErrCodeAiServiceInternalServerError
      - ErrCodeAiServiceOverload
      - ErrCodeNoAudioFileSaved
      - ErrCodeCreatingAudioTranscriptionContext
      - ErrCodeCreatingAudioGenerationContext
      - ErrCodeFailedToFinalizeAudioStream
      - ErrCodeFailedToGenerateAudio
      - ErrCodeChannelNotFound
      - ErrCodeInvalidChannelID
      - ErrCodeFailedToCreateChannel
      - ErrCodeFailedToUpdateChannel
      - ErrCodeFailedToDeleteChannel
      - ErrCodeFailedToFetchChannel
      - ErrCodeFailedToFetchChannels
      - ErrCodeFailedToAddPresence
      - ErrCodeFailedToRemovePresence
      - ErrCodeFailedToFetchPresence
      - ErrCodeFailedToFetchSubscribed
      - ErrCodeFailedToRetrieveDependencies
      - ErrCodeFailedToStoreChatCompletionUser
      - ErrCodeFailedToCreateChatContext
      - ErrCodeFailedToAcquireChatCompletionLock
      - ErrCodeChatCompletionIsLockedForChannel
      - ErrCodeFailedToCheckUserAuthorization
      - ErrCodeFailedToReleaseChatCompletionLock
      - ErrCodeCapabilityNotAvailable
      - ErrCodeNoMessagesFound
      - ErrCodeFailedToValidateRequestParameters
      - ErrCodeFailedToCreateConnectionToken
      - ErrCodeFailedToEmbedText
      - ErrCodeFailedToSearchExecutionLogs
      - ErrCodeExecutionLogStartMustBeBeforeEnd
      - ErrCodeInvalidFileID
      - ErrCodeFunctionCallNotFound
      - ErrCodeInvalidMessageID
      - ErrCodeMessageNotFound
      - ErrCodeFailedToUpdateMessage
      - ErrCodeFailedToDeleteMessage
      - ErrCodeFailedToFetchMessage
      - ErrCodeFailedToSearchMessage
      - ErrCodeFailedToCreateMessage
      - ErrCodeFailedToRetrieveChannelMessages
      - ErrCodeFailedToRetrieveMessagesFromList
      - ErrCodeFailedToFormUserMessage
      - ErrCodeMissionNotFound
      - ErrCodeMissionsNotFound
      - ErrCodeFailedToGetMission
      - ErrCodeFailedToCreateMission
      - ErrCodeFailedToDeleteMission
      - ErrCodeInvalidMissionID
      - ErrCodeInvalidMissionExecutorID
      - ErrCodeMissionNotDone
      - ErrCodeInvalidOrgID
      - ErrCodeOrgCostBudgetNotFound
      - ErrCodeFailedToCreateBudget
      - ErrCodeFailedToUpdateBudget
      - ErrCodeFailedToGetOrgCostBudget
      - ErrCodeInsufficientBudget
      - ErrCodeOrgCostBudgetExists
      - ErrCodeInvalidToolID
      - ErrCodeUnknownToolID
      - ErrCodeInvalidPromptID
      - ErrCodePromptNotFound
      - ErrCodeInvalidPromptData
      - ErrCodePromptAlreadyExists
      - ErrCodeInvalidVersion
      - ErrCodeVariableNotFound
      - ErrCodeInvalidVariableValue
    AudioGenerationRequest:
      example:
        agent_id: agent_id
        voice_id: voice_id
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        language: language
        voice_name: voice_name
        message: message
        output_audio_file_format: output_audio_file_format
        with_timestamps: true
        speed: 0.8008281904610115
        stream_audio: true
        dictionary:
          key: dictionary
        user_id: user_id
        org_id: org_id
        message_reference_id: message_reference_id
        id: id
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        channel_id: channel_id
        parameters: "{}"
        username: username
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        channel_id:
          type: string
        dictionary:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        language:
          type: string
        message:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        org_id:
          type: string
        output_audio_file_format:
          type: string
        parameters:
          properties: {}
          type: object
        speed:
          format: double
          type: number
        stream_audio:
          type: boolean
        user_id:
          type: string
        username:
          type: string
        voice_id:
          type: string
        voice_name:
          type: string
        with_timestamps:
          type: boolean
      type: object
    AudioTranscriptionRequest:
      example:
        agent_id: agent_id
        skip_ai_agency_message_generation: true
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        language: language
        trigger_chat_completion: true
        transcription_format: transcription_format
        user_id: user_id
        audio_file:
          metaData:
            key: "{}"
          fileName: fileName
          fileSize: 0
          mimetype: mimetype
          id: id
          localFilePath: localFilePath
          url: url
        org_id: org_id
        message_reference_id: message_reference_id
        id: id
        channel_id: channel_id
        parameters: "{}"
        username: username
      properties:
        agent_id:
          type: string
        audio_file:
          $ref: '#/components/schemas/AIgencyMessageFile'
        channel_id:
          type: string
        id:
          type: string
        language:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        org_id:
          type: string
        parameters:
          properties: {}
          type: object
        skip_ai_agency_message_generation:
          type: boolean
        transcription_format:
          type: string
        trigger_chat_completion:
          type: boolean
        user_id:
          type: string
        username:
          type: string
      required:
      - language
      - transcription_format
      type: object
    Channel:
      example:
        summary: summary
        metadata: "{}"
        owner_id: owner_id
        mission_id: mission_id
        created_at: 0
        description: description
        owner_organization_id: owner_organization_id
        updated_at: 1
        is_org_public: true
        is_public: true
        name: name
        last_message_at: 6
        id: id
      properties:
        created_at:
          description: in milliseconds since epoch format
          format: int64
          type: integer
        description:
          maxLength: 1024
          type: string
        id:
          maxLength: 64
          minLength: 1
          type: string
        is_org_public:
          type: boolean
        is_public:
          type: boolean
        last_message_at:
          description: in milliseconds since epoch format
          format: int64
          type: integer
        metadata:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        owner_id:
          maxLength: 64
          minLength: 1
          type: string
        owner_organization_id:
          maxLength: 64
          minLength: 1
          type: string
        summary:
          maxLength: 1024
          type: string
        updated_at:
          description: in milliseconds since epoch format
          format: int64
          type: integer
      required:
      - id
      - name
      - owner_id
      - owner_organization_id
      type: object
    ChannelWriteDto:
      example:
        summary: summary
        metadata: "{}"
        is_org_public: true
        is_public: true
        mission_id: mission_id
        name: name
        description: description
      properties:
        description:
          maxLength: 1024
          type: string
        is_org_public:
          type: boolean
        is_public:
          type: boolean
        metadata:
          properties: {}
          type: object
        mission_id:
          maxLength: 64
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        summary:
          maxLength: 1024
          type: string
      type: object
    ChatCompletionRequestDto:
      example:
        agent_id: agent_id
        var_replacements:
          key: var_replacements
        continue_on_max_tokens: true
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        message: message
        set_message_history_ids:
        - set_message_history_ids
        - set_message_history_ids
        expire_messages: true
        continue_instruction_on_max_tokens: continue_instruction_on_max_tokens
        use_tools: true
        message_reference_id: message_reference_id
        use_channel_messages_as_history: true
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        channel_id: channel_id
        parameters: "{}"
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        channel_id:
          type: string
        continue_instruction_on_max_tokens:
          type: string
        continue_on_max_tokens:
          type: boolean
        expire_messages:
          type: boolean
        message:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        parameters:
          properties: {}
          type: object
        set_message_history_ids:
          description: "If UseChannelMessagesAsHistory is false, this list of message\
            \ IDs will be used as history, if empty, the history will be empty, ignored\
            \ if UseChannelMessagesAsHistory is true"
          items:
            type: string
          type: array
        use_channel_messages_as_history:
          description: "If true, the channel messages will be used as history and\
            \ SetMessageHistoryIds will be ignored"
          type: boolean
        use_tools:
          type: boolean
        var_replacements:
          additionalProperties:
            type: string
          type: object
      required:
      - agent_id
      - message
      type: object
    ConnectionTokenResponse:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    ConversationRole:
      enum:
      - unknown
      - user
      - system
      - assistant
      - aigent
      type: string
      x-enum-varnames:
      - ConversationRoleUnknown
      - ConversationRoleUser
      - ConversationRoleSystem
      - ConversationRoleAssistant
      - ConversationRoleAIgent
    EmbeddingItem:
      example:
        meta_data: "{}"
        index: 6
        embedding:
        - 0.8008282
        - 0.8008282
      properties:
        embedding:
          items:
            format: float
            type: number
          type: array
        index:
          type: integer
        meta_data:
          properties: {}
          type: object
      required:
      - embedding
      - index
      type: object
    ExecutionCostTemplate:
      example:
        description: description
        cost_per_unit_in_euro: 5.962133916683182
        cost_unit: input-tokens-per-million
      properties:
        cost_per_unit_in_euro:
          format: double
          type: number
        cost_unit:
          $ref: '#/components/schemas/AIModelCostUnit'
        description:
          type: string
      type: object
    ExecutionLog:
      example:
        ai_model_service_id: ai_model_service_id
        owner_organization_id: owner_organization_id
        agent_id: agent_id
        owner_id: owner_id
        usage:
        - resulting_cost_in_euro: 2.3021358869347655
          used_units: 7.061401241503109
          description: description
          cost_per_unit_in_euro: 5.637376656633329
          cost_unit: null
        - resulting_cost_in_euro: 2.3021358869347655
          used_units: 7.061401241503109
          description: description
          cost_per_unit_in_euro: 5.637376656633329
          cost_unit: null
        created_at: 0
        final_cost_in_euro: 6.027456183070403
        message_id: message_id
        id: id
        channel_id: channel_id
        ai_model_id: ai_model_id
      properties:
        agent_id:
          type: string
        ai_model_id:
          type: string
        ai_model_service_id:
          type: string
        channel_id:
          type: string
        created_at:
          format: int64
          type: integer
        final_cost_in_euro:
          format: double
          type: number
        id:
          type: string
        message_id:
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        usage:
          items:
            $ref: '#/components/schemas/ExecutionUsageCost'
          type: array
      type: object
    ExecutionLogCosts:
      example:
        total_costs: 0.8008281904610115
      properties:
        total_costs:
          format: double
          type: number
      type: object
    ExecutionLogResults:
      example:
        results:
        - ai_model_service_id: ai_model_service_id
          owner_organization_id: owner_organization_id
          agent_id: agent_id
          owner_id: owner_id
          usage:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          created_at: 0
          final_cost_in_euro: 6.027456183070403
          message_id: message_id
          id: id
          channel_id: channel_id
          ai_model_id: ai_model_id
        - ai_model_service_id: ai_model_service_id
          owner_organization_id: owner_organization_id
          agent_id: agent_id
          owner_id: owner_id
          usage:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          created_at: 0
          final_cost_in_euro: 6.027456183070403
          message_id: message_id
          id: id
          channel_id: channel_id
          ai_model_id: ai_model_id
        total_results: 1
      properties:
        results:
          items:
            $ref: '#/components/schemas/ExecutionLog'
          type: array
        total_results:
          format: int64
          type: integer
      type: object
    ExecutionResultAudioGeneration:
      example:
        execution_id: execution_id
        finish_reason: ""
        features_used:
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        - capability: ""
          cost_items:
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          - resulting_cost_in_euro: 2.3021358869347655
            used_units: 7.061401241503109
            description: description
            cost_per_unit_in_euro: 5.637376656633329
            cost_unit: null
          cost_item_templates:
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          - description: description
            cost_per_unit_in_euro: 5.962133916683182
            cost_unit: input-tokens-per-million
          constraints:
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
          - unit: tokens
            min: 6.027456183070403
            max: 0.8008281904610115
            direction: input
        service_id: service_id
        resulting_files:
        - metaData:
            key: "{}"
          fileName: fileName
          fileSize: 6
          processingErrors:
          - processingErrors
          - processingErrors
          mimetype: mimetype
          localFilePath: localFilePath
          url: url
        - metaData:
            key: "{}"
          fileName: fileName
          fileSize: 6
          processingErrors:
          - processingErrors
          - processingErrors
          mimetype: mimetype
          localFilePath: localFilePath
          url: url
        time_needed: 1
        model_id: model_id
        error: "{}"
        input_tokens: 0
        content: content
        timestamp: 5
      properties:
        content:
          description: "LocalFilePaths []string `json:\"media_file_paths\"`"
          type: string
        error:
          type: object
        execution_id:
          description: maps to CompletionID for Text2Text
          type: string
        features_used:
          items:
            $ref: '#/components/schemas/AIModelFeature'
          type: array
        finish_reason:
          $ref: '#/components/schemas/FinishReason'
        input_tokens:
          type: integer
        model_id:
          type: string
        resulting_files:
          items:
            $ref: '#/components/schemas/filemanager.ManagedFile'
          type: array
        service_id:
          type: string
        time_needed:
          description: in Milliseconds
          format: int64
          type: integer
        timestamp:
          description: in Milliseconds unix epoch
          format: int64
          type: integer
      type: object
    ExecutionUsageCost:
      example:
        resulting_cost_in_euro: 2.3021358869347655
        used_units: 7.061401241503109
        description: description
        cost_per_unit_in_euro: 5.637376656633329
        cost_unit: null
      properties:
        cost_per_unit_in_euro:
          format: double
          type: number
        cost_unit:
          $ref: '#/components/schemas/AIModelCostUnit'
        description:
          type: string
        resulting_cost_in_euro:
          format: double
          type: number
        used_units:
          format: double
          type: number
      type: object
    FileUploadResponse:
      example:
        incomingFileName: incomingFileName
        processingError: processingError
        resultingFiles:
        - fileName: fileName
          fileSize: 0
          mimeType: mimeType
          localFilePath: localFilePath
          url: url
        - fileName: fileName
          fileSize: 0
          mimeType: mimeType
          localFilePath: localFilePath
          url: url
      properties:
        incomingFileName:
          type: string
        processingError:
          type: string
        resultingFiles:
          items:
            $ref: '#/components/schemas/filemanager.ProcessingResultFile'
          type: array
      type: object
    FinishReason:
      enum:
      - ""
      - error
      - content_filter
      - max_tokens
      - stop
      - tool_calls
      - unknown
      type: string
      x-enum-varnames:
      - FinishReasonNil
      - FinishReasonError
      - FinishReasonContentFilter
      - FinishReasonMaxTokens
      - FinishReasonStop
      - FinishReasonToolCalls
      - FinishReasonUnknown
    FunctionCall:
      example:
        name: name
        description: description
        parameters: parameters
        version: version
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          type: string
        version:
          type: string
      type: object
    HealthResponse:
      example:
        health: health
      properties:
        health:
          type: string
      type: object
    HostingLocation:
      enum:
      - ""
      - usa
      - europe
      - germany
      - uk
      - swiss
      - any
      type: string
      x-enum-varnames:
      - HostingLocationNil
      - HostingLocationUSA
      - HostingLocationEU
      - HostingLocationGERMANY
      - HostingLocationUK
      - HostingLocationSWISS
      - HostingLocationANY
    ImageGenerationRequest:
      example:
        agent_id: agent_id
        message_response_to_id: message_response_to_id
        mission_id: mission_id
        output_image_file_format: output_image_file_format
        message: message
        user_id: user_id
        org_id: org_id
        message_reference_id: message_reference_id
        id: id
        attached_temporary_files:
        - attached_temporary_files
        - attached_temporary_files
        channel_id: channel_id
        parameters: "{}"
        username: username
      properties:
        agent_id:
          type: string
        attached_temporary_files:
          items:
            type: string
          type: array
        channel_id:
          type: string
        id:
          type: string
        message:
          type: string
        message_reference_id:
          type: string
        message_response_to_id:
          type: string
        mission_id:
          type: string
        org_id:
          type: string
        output_image_file_format:
          type: string
        parameters:
          properties: {}
          type: object
        user_id:
          type: string
        username:
          type: string
      type: object
    Mission:
      example:
        instructions:
          user_prompt_injection_mode: null
          var_replacements:
            key: var_replacements
          max_tokens: 1
          temperature: 5.962133916683182
          system_prompt_injection_mode: append
          text: text
        completion_reason: ""
        mission_executor_id: agent_1234567890123456
        owner_id: owner_id
        created_at: 6
        description: Mission to find a fun fact about basketball
        status_updates:
          status_updates:
          - mission_id: mission_id
            description: description
            id: id
            status: created
            timestamp: 5
          - mission_id: mission_id
            description: description
            id: id
            status: created
            timestamp: 5
        created_by: created_by
        content: "{}"
        completed_at: 0
        owner_organization_id: owner_organization_id
        updated_at: 2
        creator_name: John Doe
        id: mis_1234567890123456
      properties:
        completed_at:
          format: int64
          type: integer
        completion_reason:
          $ref: '#/components/schemas/MissionCompletionReason'
        content:
          type: object
        created_at:
          format: int64
          type: integer
        created_by:
          type: string
        creator_name:
          example: John Doe
          type: string
        description:
          example: Mission to find a fun fact about basketball
          type: string
        id:
          example: mis_1234567890123456
          type: string
        instructions:
          $ref: '#/components/schemas/MissionInstructions'
        mission_executor_id:
          example: agent_1234567890123456
          type: string
        owner_id:
          type: string
        owner_organization_id:
          type: string
        status_updates:
          $ref: '#/components/schemas/MissionStatusUpdateList'
        updated_at:
          format: int64
          type: integer
      type: object
    MissionCompletionReason:
      enum:
      - ""
      - canceled
      - completed
      - error
      type: string
      x-enum-varnames:
      - MissionCompletionReasonNil
      - MissionCompletionReasonCanceled
      - MissionCompletionReasonCompleted
      - MissionCompletionReasonError
    MissionInstructions:
      example:
        user_prompt_injection_mode: null
        var_replacements:
          key: var_replacements
        max_tokens: 1
        temperature: 5.962133916683182
        system_prompt_injection_mode: append
        text: text
      properties:
        max_tokens:
          type: integer
        system_prompt_injection_mode:
          $ref: '#/components/schemas/PromptInjectionMode'
        temperature:
          type: number
        text:
          minLength: 1
          type: string
        user_prompt_injection_mode:
          $ref: '#/components/schemas/PromptInjectionMode'
        var_replacements:
          additionalProperties:
            type: string
          type: object
      required:
      - text
      type: object
    MissionStatus:
      enum:
      - created
      - started
      - paused
      - resumed
      - canceled
      - failed
      - completed
      type: string
      x-enum-varnames:
      - MissionStatusCreated
      - MissionStatusStarted
      - MissionStatusPaused
      - MissionStatusResumed
      - MissionStatusCanceled
      - MissionStatusFailed
      - MissionStatusCompleted
    MissionStatusUpdate:
      example:
        mission_id: mission_id
        description: description
        id: id
        status: created
        timestamp: 5
      properties:
        description:
          type: string
        id:
          type: string
        mission_id:
          type: string
        status:
          $ref: '#/components/schemas/MissionStatus'
        timestamp:
          type: integer
      type: object
    MissionStatusUpdateList:
      example:
        status_updates:
        - mission_id: mission_id
          description: description
          id: id
          status: created
          timestamp: 5
        - mission_id: mission_id
          description: description
          id: id
          status: created
          timestamp: 5
      properties:
        status_updates:
          items:
            $ref: '#/components/schemas/MissionStatusUpdate'
          type: array
      type: object
    MissionWriteDto:
      example:
        instructions:
          user_prompt_injection_mode: null
          var_replacements:
            key: var_replacements
          max_tokens: 1
          temperature: 5.962133916683182
          system_prompt_injection_mode: append
          text: text
        description: description
      properties:
        description:
          type: string
        instructions:
          $ref: '#/components/schemas/MissionInstructions'
      required:
      - instructions
      type: object
    OrgCostBudget:
      example:
        updated_at: 1
        used_budget: 0.5962133916683182
        org_id: org_id
        total_budget: 0.6027456183070403
        remaining_budget: 0.08008281904610115
        updated_by: updated_by
      properties:
        org_id:
          maxLength: 64
          minLength: 1
          type: string
        remaining_budget:
          format: double
          minimum: 0
          type: number
        total_budget:
          format: double
          minimum: 0
          type: number
        updated_at:
          format: int64
          type: integer
        updated_by:
          type: string
        used_budget:
          format: double
          minimum: 0
          type: number
      required:
      - org_id
      type: object
    OrgCostBudgetCheck:
      example:
        sufficient_budget: true
        org_id: org_id
      properties:
        org_id:
          type: string
        sufficient_budget:
          type: boolean
      required:
      - org_id
      - sufficient_budget
      type: object
    OrgCostBudgetWriteDto:
      example:
        used_budget: 0.6027456183070403
        total_budget: 0.08008281904610115
      properties:
        total_budget:
          format: double
          minimum: 0
          type: number
        used_budget:
          format: double
          minimum: 0
          type: number
      type: object
    PromptInjectionMode:
      enum:
      - append
      - prepend
      - replace
      type: string
      x-enum-varnames:
      - PromptInjectionModeAppend
      - PromptInjectionModePrepend
      - PromptInjectionModeReplace
    PromptVersion:
      example:
        created_at: 5
        created_by: created_by
        version: 5
        content: content
      properties:
        content:
          type: string
        created_at:
          type: integer
        created_by:
          type: string
        version:
          type: integer
      type: object
    TextEmbedding:
      example:
        embeddings:
        - meta_data: "{}"
          index: 6
          embedding:
          - 0.8008282
          - 0.8008282
        - meta_data: "{}"
          index: 6
          embedding:
          - 0.8008282
          - 0.8008282
        execution_id: execution_id
        service_id: service_id
        tokens: 1
        model_id: model_id
        parameters: "{}"
      properties:
        embeddings:
          items:
            $ref: '#/components/schemas/EmbeddingItem'
          type: array
        execution_id:
          type: string
        model_id:
          type: string
        parameters:
          properties: {}
          type: object
        service_id:
          type: string
        tokens:
          type: integer
      required:
      - embeddings
      - execution_id
      - model_id
      - parameters
      - service_id
      - tokens
      type: object
    TextEmbeddingItemDto:
      example:
        meta_data: "{}"
        text: text
      properties:
        meta_data:
          properties: {}
          type: object
        text:
          type: string
      required:
      - text
      type: object
    TextEmbeddingRequestDto:
      example:
        agent_id: agent_id
        items:
        - meta_data: "{}"
          text: text
        - meta_data: "{}"
          text: text
        parameters: "{}"
      properties:
        agent_id:
          minLength: 1
          type: string
        items:
          items:
            $ref: '#/components/schemas/TextEmbeddingItemDto'
          minItems: 1
          type: array
        parameters:
          properties: {}
          type: object
      required:
      - agent_id
      - items
      type: object
    TokenDirection:
      enum:
      - input
      - output
      type: string
      x-enum-varnames:
      - InputToken
      - OutputToken
    VersionResponse:
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    filemanager.ManagedFile:
      example:
        metaData:
          key: "{}"
        fileName: fileName
        fileSize: 6
        processingErrors:
        - processingErrors
        - processingErrors
        mimetype: mimetype
        localFilePath: localFilePath
        url: url
      properties:
        fileName:
          type: string
        fileSize:
          type: integer
        localFilePath:
          type: string
        metaData:
          additionalProperties:
            type: object
          type: object
        mimetype:
          type: string
        processingErrors:
          items:
            type: string
          type: array
        url:
          type: string
      type: object
    filemanager.ProcessingResultFile:
      example:
        fileName: fileName
        fileSize: 0
        mimeType: mimeType
        localFilePath: localFilePath
        url: url
      properties:
        fileName:
          type: string
        fileSize:
          type: integer
        localFilePath:
          type: string
        mimeType:
          type: string
        url:
          type: string
      type: object
    HandleFileUpload_request:
      properties:
        file:
          description: File to upload
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: x-api-key
      type: apiKey
x-original-swagger-version: "2.0"
