/*
vAudience AIgentChat API

chat and api server for AIgents

API version: 0.20.10
Contact: contact@vaudience.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aigentchat

import (
	"encoding/json"
	"fmt"
)

// checks if the AIgencyFunctionStatusUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIgencyFunctionStatusUpdateData{}

// AIgencyFunctionStatusUpdateData struct for AIgencyFunctionStatusUpdateData
type AIgencyFunctionStatusUpdateData struct {
	Message string `json:"message"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AIgencyFunctionStatusUpdateData AIgencyFunctionStatusUpdateData

// NewAIgencyFunctionStatusUpdateData instantiates a new AIgencyFunctionStatusUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIgencyFunctionStatusUpdateData(message string) *AIgencyFunctionStatusUpdateData {
	this := AIgencyFunctionStatusUpdateData{}
	this.Message = message
	return &this
}

// NewAIgencyFunctionStatusUpdateDataWithDefaults instantiates a new AIgencyFunctionStatusUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIgencyFunctionStatusUpdateDataWithDefaults() *AIgencyFunctionStatusUpdateData {
	this := AIgencyFunctionStatusUpdateData{}
	return &this
}

// GetMessage returns the Message field value
func (o *AIgencyFunctionStatusUpdateData) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AIgencyFunctionStatusUpdateData) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AIgencyFunctionStatusUpdateData) SetMessage(v string) {
	o.Message = v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AIgencyFunctionStatusUpdateData) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AIgencyFunctionStatusUpdateData) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return map[string]interface{}{}, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AIgencyFunctionStatusUpdateData) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *AIgencyFunctionStatusUpdateData) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

func (o AIgencyFunctionStatusUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIgencyFunctionStatusUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIgencyFunctionStatusUpdateData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIgencyFunctionStatusUpdateData := _AIgencyFunctionStatusUpdateData{}

	err = json.Unmarshal(data, &varAIgencyFunctionStatusUpdateData)

	if err != nil {
		return err
	}

	*o = AIgencyFunctionStatusUpdateData(varAIgencyFunctionStatusUpdateData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "meta_data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIgencyFunctionStatusUpdateData struct {
	value *AIgencyFunctionStatusUpdateData
	isSet bool
}

func (v NullableAIgencyFunctionStatusUpdateData) Get() *AIgencyFunctionStatusUpdateData {
	return v.value
}

func (v *NullableAIgencyFunctionStatusUpdateData) Set(val *AIgencyFunctionStatusUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableAIgencyFunctionStatusUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableAIgencyFunctionStatusUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIgencyFunctionStatusUpdateData(val *AIgencyFunctionStatusUpdateData) *NullableAIgencyFunctionStatusUpdateData {
	return &NullableAIgencyFunctionStatusUpdateData{value: val, isSet: true}
}

func (v NullableAIgencyFunctionStatusUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIgencyFunctionStatusUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


