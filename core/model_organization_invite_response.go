/*
Vaudience AI Core API

API for the Vaudience AI Core

API version: 0.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package core

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationInviteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationInviteResponse{}

// OrganizationInviteResponse struct for OrganizationInviteResponse
type OrganizationInviteResponse struct {
	CreatedAt string `json:"createdAt"`
	CreatedBy string `json:"createdBy"`
	CreatedByName string `json:"createdByName"`
	Email string `json:"email"`
	EmailSent bool `json:"emailSent"`
	ExpiresAt string `json:"expiresAt"`
	Id string `json:"id"`
	OrganizationId string `json:"organizationId"`
	UpdatedAt string `json:"updatedAt"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationInviteResponse OrganizationInviteResponse

// NewOrganizationInviteResponse instantiates a new OrganizationInviteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationInviteResponse(createdAt string, createdBy string, createdByName string, email string, emailSent bool, expiresAt string, id string, organizationId string, updatedAt string) *OrganizationInviteResponse {
	this := OrganizationInviteResponse{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.CreatedByName = createdByName
	this.Email = email
	this.EmailSent = emailSent
	this.ExpiresAt = expiresAt
	this.Id = id
	this.OrganizationId = organizationId
	this.UpdatedAt = updatedAt
	return &this
}

// NewOrganizationInviteResponseWithDefaults instantiates a new OrganizationInviteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationInviteResponseWithDefaults() *OrganizationInviteResponse {
	this := OrganizationInviteResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationInviteResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationInviteResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *OrganizationInviteResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *OrganizationInviteResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedByName returns the CreatedByName field value
func (o *OrganizationInviteResponse) GetCreatedByName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByName
}

// GetCreatedByNameOk returns a tuple with the CreatedByName field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetCreatedByNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByName, true
}

// SetCreatedByName sets field value
func (o *OrganizationInviteResponse) SetCreatedByName(v string) {
	o.CreatedByName = v
}

// GetEmail returns the Email field value
func (o *OrganizationInviteResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *OrganizationInviteResponse) SetEmail(v string) {
	o.Email = v
}

// GetEmailSent returns the EmailSent field value
func (o *OrganizationInviteResponse) GetEmailSent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailSent
}

// GetEmailSentOk returns a tuple with the EmailSent field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetEmailSentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailSent, true
}

// SetEmailSent sets field value
func (o *OrganizationInviteResponse) SetEmailSent(v bool) {
	o.EmailSent = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *OrganizationInviteResponse) GetExpiresAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetExpiresAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *OrganizationInviteResponse) SetExpiresAt(v string) {
	o.ExpiresAt = v
}

// GetId returns the Id field value
func (o *OrganizationInviteResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationInviteResponse) SetId(v string) {
	o.Id = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *OrganizationInviteResponse) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *OrganizationInviteResponse) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrganizationInviteResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationInviteResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrganizationInviteResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o OrganizationInviteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationInviteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["createdByName"] = o.CreatedByName
	toSerialize["email"] = o.Email
	toSerialize["emailSent"] = o.EmailSent
	toSerialize["expiresAt"] = o.ExpiresAt
	toSerialize["id"] = o.Id
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["updatedAt"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationInviteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"createdBy",
		"createdByName",
		"email",
		"emailSent",
		"expiresAt",
		"id",
		"organizationId",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationInviteResponse := _OrganizationInviteResponse{}

	err = json.Unmarshal(data, &varOrganizationInviteResponse)

	if err != nil {
		return err
	}

	*o = OrganizationInviteResponse(varOrganizationInviteResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdByName")
		delete(additionalProperties, "email")
		delete(additionalProperties, "emailSent")
		delete(additionalProperties, "expiresAt")
		delete(additionalProperties, "id")
		delete(additionalProperties, "organizationId")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationInviteResponse struct {
	value *OrganizationInviteResponse
	isSet bool
}

func (v NullableOrganizationInviteResponse) Get() *OrganizationInviteResponse {
	return v.value
}

func (v *NullableOrganizationInviteResponse) Set(val *OrganizationInviteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationInviteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationInviteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationInviteResponse(val *OrganizationInviteResponse) *NullableOrganizationInviteResponse {
	return &NullableOrganizationInviteResponse{value: val, isSet: true}
}

func (v NullableOrganizationInviteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationInviteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


