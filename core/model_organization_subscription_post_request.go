/*
Vaudience AI Core API

API for the Vaudience AI Core

API version: 0.3.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package core

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationSubscriptionPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationSubscriptionPostRequest{}

// OrganizationSubscriptionPostRequest struct for OrganizationSubscriptionPostRequest
type OrganizationSubscriptionPostRequest struct {
	PeriodEnd *string `json:"periodEnd,omitempty"`
	ProductId string `json:"productId"`
	Seats int32 `json:"seats"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationSubscriptionPostRequest OrganizationSubscriptionPostRequest

// NewOrganizationSubscriptionPostRequest instantiates a new OrganizationSubscriptionPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSubscriptionPostRequest(productId string, seats int32) *OrganizationSubscriptionPostRequest {
	this := OrganizationSubscriptionPostRequest{}
	this.ProductId = productId
	this.Seats = seats
	return &this
}

// NewOrganizationSubscriptionPostRequestWithDefaults instantiates a new OrganizationSubscriptionPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSubscriptionPostRequestWithDefaults() *OrganizationSubscriptionPostRequest {
	this := OrganizationSubscriptionPostRequest{}
	return &this
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise.
func (o *OrganizationSubscriptionPostRequest) GetPeriodEnd() string {
	if o == nil || IsNil(o.PeriodEnd) {
		var ret string
		return ret
	}
	return *o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionPostRequest) GetPeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodEnd) {
		return nil, false
	}
	return o.PeriodEnd, true
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *OrganizationSubscriptionPostRequest) HasPeriodEnd() bool {
	if o != nil && !IsNil(o.PeriodEnd) {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given string and assigns it to the PeriodEnd field.
func (o *OrganizationSubscriptionPostRequest) SetPeriodEnd(v string) {
	o.PeriodEnd = &v
}

// GetProductId returns the ProductId field value
func (o *OrganizationSubscriptionPostRequest) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionPostRequest) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *OrganizationSubscriptionPostRequest) SetProductId(v string) {
	o.ProductId = v
}

// GetSeats returns the Seats field value
func (o *OrganizationSubscriptionPostRequest) GetSeats() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Seats
}

// GetSeatsOk returns a tuple with the Seats field value
// and a boolean to check if the value has been set.
func (o *OrganizationSubscriptionPostRequest) GetSeatsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seats, true
}

// SetSeats sets field value
func (o *OrganizationSubscriptionPostRequest) SetSeats(v int32) {
	o.Seats = v
}

func (o OrganizationSubscriptionPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationSubscriptionPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PeriodEnd) {
		toSerialize["periodEnd"] = o.PeriodEnd
	}
	toSerialize["productId"] = o.ProductId
	toSerialize["seats"] = o.Seats

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationSubscriptionPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productId",
		"seats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationSubscriptionPostRequest := _OrganizationSubscriptionPostRequest{}

	err = json.Unmarshal(data, &varOrganizationSubscriptionPostRequest)

	if err != nil {
		return err
	}

	*o = OrganizationSubscriptionPostRequest(varOrganizationSubscriptionPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "periodEnd")
		delete(additionalProperties, "productId")
		delete(additionalProperties, "seats")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationSubscriptionPostRequest struct {
	value *OrganizationSubscriptionPostRequest
	isSet bool
}

func (v NullableOrganizationSubscriptionPostRequest) Get() *OrganizationSubscriptionPostRequest {
	return v.value
}

func (v *NullableOrganizationSubscriptionPostRequest) Set(val *OrganizationSubscriptionPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSubscriptionPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSubscriptionPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSubscriptionPostRequest(val *OrganizationSubscriptionPostRequest) *NullableOrganizationSubscriptionPostRequest {
	return &NullableOrganizationSubscriptionPostRequest{value: val, isSet: true}
}

func (v NullableOrganizationSubscriptionPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSubscriptionPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


