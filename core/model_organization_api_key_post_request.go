/*
Vaudience AI Core API

API for the Vaudience AI Core

API version: 0.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package core

import (
	"encoding/json"
	"fmt"
)

// checks if the OrganizationApiKeyPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationApiKeyPostRequest{}

// OrganizationApiKeyPostRequest struct for OrganizationApiKeyPostRequest
type OrganizationApiKeyPostRequest struct {
	Name string `json:"name"`
	OrganizationRoleId *string `json:"organizationRoleId,omitempty"`
	RoleIds []string `json:"roleIds,omitempty"`
	TeamIds []string `json:"teamIds,omitempty"`
	UserEmail string `json:"userEmail"`
	UserFullName string `json:"userFullName"`
	UserName string `json:"userName"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationApiKeyPostRequest OrganizationApiKeyPostRequest

// NewOrganizationApiKeyPostRequest instantiates a new OrganizationApiKeyPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationApiKeyPostRequest(name string, userEmail string, userFullName string, userName string) *OrganizationApiKeyPostRequest {
	this := OrganizationApiKeyPostRequest{}
	this.Name = name
	this.UserEmail = userEmail
	this.UserFullName = userFullName
	this.UserName = userName
	return &this
}

// NewOrganizationApiKeyPostRequestWithDefaults instantiates a new OrganizationApiKeyPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationApiKeyPostRequestWithDefaults() *OrganizationApiKeyPostRequest {
	this := OrganizationApiKeyPostRequest{}
	return &this
}

// GetName returns the Name field value
func (o *OrganizationApiKeyPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationApiKeyPostRequest) SetName(v string) {
	o.Name = v
}

// GetOrganizationRoleId returns the OrganizationRoleId field value if set, zero value otherwise.
func (o *OrganizationApiKeyPostRequest) GetOrganizationRoleId() string {
	if o == nil || IsNil(o.OrganizationRoleId) {
		var ret string
		return ret
	}
	return *o.OrganizationRoleId
}

// GetOrganizationRoleIdOk returns a tuple with the OrganizationRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetOrganizationRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationRoleId) {
		return nil, false
	}
	return o.OrganizationRoleId, true
}

// HasOrganizationRoleId returns a boolean if a field has been set.
func (o *OrganizationApiKeyPostRequest) HasOrganizationRoleId() bool {
	if o != nil && !IsNil(o.OrganizationRoleId) {
		return true
	}

	return false
}

// SetOrganizationRoleId gets a reference to the given string and assigns it to the OrganizationRoleId field.
func (o *OrganizationApiKeyPostRequest) SetOrganizationRoleId(v string) {
	o.OrganizationRoleId = &v
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *OrganizationApiKeyPostRequest) GetRoleIds() []string {
	if o == nil || IsNil(o.RoleIds) {
		var ret []string
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *OrganizationApiKeyPostRequest) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *OrganizationApiKeyPostRequest) SetRoleIds(v []string) {
	o.RoleIds = v
}

// GetTeamIds returns the TeamIds field value if set, zero value otherwise.
func (o *OrganizationApiKeyPostRequest) GetTeamIds() []string {
	if o == nil || IsNil(o.TeamIds) {
		var ret []string
		return ret
	}
	return o.TeamIds
}

// GetTeamIdsOk returns a tuple with the TeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetTeamIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TeamIds) {
		return nil, false
	}
	return o.TeamIds, true
}

// HasTeamIds returns a boolean if a field has been set.
func (o *OrganizationApiKeyPostRequest) HasTeamIds() bool {
	if o != nil && !IsNil(o.TeamIds) {
		return true
	}

	return false
}

// SetTeamIds gets a reference to the given []string and assigns it to the TeamIds field.
func (o *OrganizationApiKeyPostRequest) SetTeamIds(v []string) {
	o.TeamIds = v
}

// GetUserEmail returns the UserEmail field value
func (o *OrganizationApiKeyPostRequest) GetUserEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserEmail, true
}

// SetUserEmail sets field value
func (o *OrganizationApiKeyPostRequest) SetUserEmail(v string) {
	o.UserEmail = v
}

// GetUserFullName returns the UserFullName field value
func (o *OrganizationApiKeyPostRequest) GetUserFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserFullName
}

// GetUserFullNameOk returns a tuple with the UserFullName field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetUserFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserFullName, true
}

// SetUserFullName sets field value
func (o *OrganizationApiKeyPostRequest) SetUserFullName(v string) {
	o.UserFullName = v
}

// GetUserName returns the UserName field value
func (o *OrganizationApiKeyPostRequest) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *OrganizationApiKeyPostRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *OrganizationApiKeyPostRequest) SetUserName(v string) {
	o.UserName = v
}

func (o OrganizationApiKeyPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationApiKeyPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.OrganizationRoleId) {
		toSerialize["organizationRoleId"] = o.OrganizationRoleId
	}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	if !IsNil(o.TeamIds) {
		toSerialize["teamIds"] = o.TeamIds
	}
	toSerialize["userEmail"] = o.UserEmail
	toSerialize["userFullName"] = o.UserFullName
	toSerialize["userName"] = o.UserName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationApiKeyPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"userEmail",
		"userFullName",
		"userName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationApiKeyPostRequest := _OrganizationApiKeyPostRequest{}

	err = json.Unmarshal(data, &varOrganizationApiKeyPostRequest)

	if err != nil {
		return err
	}

	*o = OrganizationApiKeyPostRequest(varOrganizationApiKeyPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "organizationRoleId")
		delete(additionalProperties, "roleIds")
		delete(additionalProperties, "teamIds")
		delete(additionalProperties, "userEmail")
		delete(additionalProperties, "userFullName")
		delete(additionalProperties, "userName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationApiKeyPostRequest struct {
	value *OrganizationApiKeyPostRequest
	isSet bool
}

func (v NullableOrganizationApiKeyPostRequest) Get() *OrganizationApiKeyPostRequest {
	return v.value
}

func (v *NullableOrganizationApiKeyPostRequest) Set(val *OrganizationApiKeyPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationApiKeyPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationApiKeyPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationApiKeyPostRequest(val *OrganizationApiKeyPostRequest) *NullableOrganizationApiKeyPostRequest {
	return &NullableOrganizationApiKeyPostRequest{value: val, isSet: true}
}

func (v NullableOrganizationApiKeyPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationApiKeyPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


